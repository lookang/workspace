<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>3D visualization of Magnetic Field from a Bar Magnet</title>
    <link rel="stylesheet"  type="text/css" href="file:///Users/lookang/Google Drive/PublicLawrence/workspace/output/_ejs_library/css/ejss.css" />
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/scripts/common_script.js"></script>
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/scripts/textresizedetector.js"></script>
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/ejsS.v1.min.js"></script>
<script type="text/javascript"><!--//--><![CDATA[//><!--
/* _inputParameters: an object with different values for the model parameters */
function fieldlines3Dwee(_topFrame,_libraryPath,_codebasePath, _inputParameters) {
  var _model = EJSS_CORE.createAnimationLMS();
  var _view;
  var _isPlaying = false;
  var _isPaused = true;
  var _isMobile = (navigator===undefined) ? false : navigator.userAgent.match(/iPhone|iPad|iPod|Android|BlackBerry|Opera Mini|IEMobile/i);

var _stringProperties = {};
  var _tools = {
    showInputDialog : EJSS_INTERFACE.BoxPanel.showInputDialog,
    showOkDialog : EJSS_INTERFACE.BoxPanel.showOkDialog,
    showOkCancelDialog : EJSS_INTERFACE.BoxPanel.showOkCancelDialog,
    downloadText: EJSS_TOOLS.File.downloadText,
    uploadText: function(action) { EJSS_TOOLS.File.uploadText(_model,action); } 
  };

  function _play()  { _isPaused = false; _isPlaying = true;  _model.play();  }
  function _pause() { _isPaused = true;  _isPlaying = false; _model.pause(); }
  function _step()  { _pause();  _model.step(); }
  function _reset() { _model.reset();  _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); }
  _model._play  = _play;
  _model._pause = _pause;
  _model._step  = _step;
  _model._reset = _reset;
  function _update() { _model.update(); }
  function _initialize() { _model.initialize(); }
  function _setFPS(_fps) { _model.setFPS(_fps); }
  function _setDelay(_delay) { _model.setDelay(_delay); }
  function _setStepsPerDisplay(_spd) { _model.setStepsPerDisplay(_spd); }
  function _setUpdateView(_updateView) { _model.setUpdateView(_updateView); }
  function _setAutoplay(_auto) { _model.setAutoplay(_auto); }
  function _println(_message) { console.log(_message); }

  function _breakAfterThisPage() { _model.setShouldBreak(true); }

  function _resetSolvers() { if (_model.resetSolvers) _model.resetSolvers(); }

  function _saveText(name,type,content) { if (_model.saveText) _model.saveText(name,type,content); }

  function _saveState(name) { if (_model.saveState) _model.saveState(name); }

  function _saveImage(name,panelname) { if (_model.saveImage) _model.saveImage(name,panelname); }

  function _readState(url,type) { if (_model.readState) _model.readState(url,type); }

  function _readText(url,type,varname) { if (_model.readText) _model.readText(url,type,varname); }

  function _getStringProperty(propertyName) {
    var _value = _stringProperties[propertyName];
    if (_value===undefined) return propertyName;
    else return _value;
  }
  var __pagesEnabled = [];
  function _setPageEnabled(pageName,enabled) { __pagesEnabled[pageName] = enabled; }

  var B; // EjsS Model.Variables.Var Table.B
  var pi; // EjsS Model.Variables.Var Table.pi
  var n; // EjsS Model.Variables.Var Table.n
  var ns; // EjsS Model.Variables.Var Table.ns
  var xarrow; // EjsS Model.Variables.Var Table.xarrow
  var yarrow; // EjsS Model.Variables.Var Table.yarrow
  var zarrow; // EjsS Model.Variables.Var Table.zarrow
  var xfield; // EjsS Model.Variables.Var Table.xfield
  var yfield; // EjsS Model.Variables.Var Table.yfield
  var zfield; // EjsS Model.Variables.Var Table.zfield
  var t; // EjsS Model.Variables.Var Table.t
  var t1; // EjsS Model.Variables.Var Table.t1
  var dt; // EjsS Model.Variables.Var Table.dt
  var dt1; // EjsS Model.Variables.Var Table.dt1
  var t2; // EjsS Model.Variables.Var Table.t2
  var dt2; // EjsS Model.Variables.Var Table.dt2
  var x; // EjsS Model.Variables.Var Table.x
  var y; // EjsS Model.Variables.Var Table.y
  var z; // EjsS Model.Variables.Var Table.z
  var vz; // EjsS Model.Variables.Var Table.vz
  var dz; // EjsS Model.Variables.Var Table.dz
  var fieldarrowshow; // EjsS Model.Variables.Var Table.fieldarrowshow
  var active; // EjsS Model.Variables.Var Table.active

  var xp; // EjsS Model.Variables.mikegallis.xp
  var xp1; // EjsS Model.Variables.mikegallis.xp1
  var yp; // EjsS Model.Variables.mikegallis.yp
  var yp1; // EjsS Model.Variables.mikegallis.yp1
  var zp; // EjsS Model.Variables.mikegallis.zp
  var zp1; // EjsS Model.Variables.mikegallis.zp1
  var xps; // EjsS Model.Variables.mikegallis.xps
  var yps; // EjsS Model.Variables.mikegallis.yps
  var zps; // EjsS Model.Variables.mikegallis.zps

  var font; // EjsS Model.Variables.varfrem.font
  var fontb; // EjsS Model.Variables.varfrem.fontb
  var color; // EjsS Model.Variables.varfrem.color
  var box; // EjsS Model.Variables.varfrem.box

  var _privateOdesList;
  var _ODEi_evolution1;
  var userEvents1=[];

  _model.getOdes = function() { return [_ODEi_evolution1]; };

  _model.removeEvents = function(){
    userEvents1=[];
  };

  function _serialize() { return _model.serialize(); }

  _model._userSerialize = function() {
    return {
      B : B,
      pi : pi,
      n : n,
      ns : ns,
      xarrow : xarrow,
      yarrow : yarrow,
      zarrow : zarrow,
      xfield : xfield,
      yfield : yfield,
      zfield : zfield,
      t : t,
      t1 : t1,
      dt : dt,
      dt1 : dt1,
      t2 : t2,
      dt2 : dt2,
      x : x,
      y : y,
      z : z,
      vz : vz,
      dz : dz,
      fieldarrowshow : fieldarrowshow,
      active : active,
      xp : xp,
      xp1 : xp1,
      yp : yp,
      yp1 : yp1,
      zp : zp,
      zp1 : zp1,
      xps : xps,
      yps : yps,
      zps : zps,
      font : font,
      fontb : fontb,
      color : color,
      box : box
    };
  };

  _model._readParameters = function(json) {
    if(typeof json.B != "undefined") B = json.B;
    if(typeof json.pi != "undefined") pi = json.pi;
    if(typeof json.n != "undefined") n = json.n;
    if(typeof json.ns != "undefined") ns = json.ns;
    if(typeof json.xarrow != "undefined") xarrow = json.xarrow;
    if(typeof json.yarrow != "undefined") yarrow = json.yarrow;
    if(typeof json.zarrow != "undefined") zarrow = json.zarrow;
    if(typeof json.xfield != "undefined") xfield = json.xfield;
    if(typeof json.yfield != "undefined") yfield = json.yfield;
    if(typeof json.zfield != "undefined") zfield = json.zfield;
    if(typeof json.t != "undefined") t = json.t;
    if(typeof json.t1 != "undefined") t1 = json.t1;
    if(typeof json.dt != "undefined") dt = json.dt;
    if(typeof json.dt1 != "undefined") dt1 = json.dt1;
    if(typeof json.t2 != "undefined") t2 = json.t2;
    if(typeof json.dt2 != "undefined") dt2 = json.dt2;
    if(typeof json.x != "undefined") x = json.x;
    if(typeof json.y != "undefined") y = json.y;
    if(typeof json.z != "undefined") z = json.z;
    if(typeof json.vz != "undefined") vz = json.vz;
    if(typeof json.dz != "undefined") dz = json.dz;
    if(typeof json.fieldarrowshow != "undefined") fieldarrowshow = json.fieldarrowshow;
    if(typeof json.active != "undefined") active = json.active;
    if(typeof json.xp != "undefined") xp = json.xp;
    if(typeof json.xp1 != "undefined") xp1 = json.xp1;
    if(typeof json.yp != "undefined") yp = json.yp;
    if(typeof json.yp1 != "undefined") yp1 = json.yp1;
    if(typeof json.zp != "undefined") zp = json.zp;
    if(typeof json.zp1 != "undefined") zp1 = json.zp1;
    if(typeof json.xps != "undefined") xps = json.xps;
    if(typeof json.yps != "undefined") yps = json.yps;
    if(typeof json.zps != "undefined") zps = json.zps;
    if(typeof json.font != "undefined") font = json.font;
    if(typeof json.fontb != "undefined") fontb = json.fontb;
    if(typeof json.color != "undefined") color = json.color;
    if(typeof json.box != "undefined") box = json.box;
  };

  _model._inputAndPublicParameters = ["B",  "pi",  "n",  "ns",  "xarrow",  "yarrow",  "zarrow",  "xfield",  "yfield",  "zfield",  "t",  "t1",  "dt",  "dt1",  "t2",  "dt2",  "x",  "y",  "z",  "vz",  "dz",  "fieldarrowshow",  "active",  "xp",  "xp1",  "yp",  "yp1",  "zp",  "zp1",  "xps",  "yps",  "zps",  "font",  "fontb",  "color",  "box"]; 

  _model._outputAndPublicParameters = ["B",  "pi",  "n",  "ns",  "xarrow",  "yarrow",  "zarrow",  "xfield",  "yfield",  "zfield",  "t",  "t1",  "dt",  "dt1",  "t2",  "dt2",  "x",  "y",  "z",  "vz",  "dz",  "fieldarrowshow",  "active",  "xp",  "xp1",  "yp",  "yp1",  "zp",  "zp1",  "xps",  "yps",  "zps",  "font",  "fontb",  "color",  "box"];

  function _unserialize(json) { return _model.unserialize(json); }

  _model._userUnserialize = function(json) {
    _model._readParameters(json);
   _resetSolvers();
   _model.update();
  };

  _model.addToReset(function() {
    __pagesEnabled["Init Page"] = true;
    __pagesEnabled["storedata"] = true;
    __pagesEnabled["Evol Page"] = true;
    __pagesEnabled["FixRel Page"] = true;
    __pagesEnabled["fieldlines"] = true;
  });

  _model.addToReset(function() {
    B = 0; // EjsS Model.Variables.Var Table.B
    pi = Math.PI; // EjsS Model.Variables.Var Table.pi
    n = 13; // EjsS Model.Variables.Var Table.n
    ns = 13; // EjsS Model.Variables.Var Table.ns
    xarrow = new Array(n); // EjsS Model.Variables.Var Table.xarrow
    (function () {
      var _i0;
      for (_i0=0; _i0<n; _i0+=1) {  // EjsS Model.Variables.Var Table.xarrow
        xarrow[_i0] = 0;  // EjsS Model.Variables.Var Table.xarrow
      }
    }());
    yarrow = new Array(n); // EjsS Model.Variables.Var Table.yarrow
    (function () {
      var _i0;
      for (_i0=0; _i0<n; _i0+=1) {  // EjsS Model.Variables.Var Table.yarrow
        yarrow[_i0] = 0;  // EjsS Model.Variables.Var Table.yarrow
      }
    }());
    zarrow = new Array(n); // EjsS Model.Variables.Var Table.zarrow
    (function () {
      var _i0;
      for (_i0=0; _i0<n; _i0+=1) {  // EjsS Model.Variables.Var Table.zarrow
        zarrow[_i0] = 0;  // EjsS Model.Variables.Var Table.zarrow
      }
    }());
    xfield = new Array(n); // EjsS Model.Variables.Var Table.xfield
    (function () {
      var _i0;
      for (_i0=0; _i0<n; _i0+=1) {  // EjsS Model.Variables.Var Table.xfield
        xfield[_i0] = 0;  // EjsS Model.Variables.Var Table.xfield
      }
    }());
    yfield = new Array(n); // EjsS Model.Variables.Var Table.yfield
    (function () {
      var _i0;
      for (_i0=0; _i0<n; _i0+=1) {  // EjsS Model.Variables.Var Table.yfield
        yfield[_i0] = 0;  // EjsS Model.Variables.Var Table.yfield
      }
    }());
    zfield = new Array(n); // EjsS Model.Variables.Var Table.zfield
    (function () {
      var _i0;
      for (_i0=0; _i0<n; _i0+=1) {  // EjsS Model.Variables.Var Table.zfield
        zfield[_i0] = 0;  // EjsS Model.Variables.Var Table.zfield
      }
    }());
    t = 0; // EjsS Model.Variables.Var Table.t
    t1 = 0; // EjsS Model.Variables.Var Table.t1
    dt = 0.25; // EjsS Model.Variables.Var Table.dt
    dt1 = 0.05; // EjsS Model.Variables.Var Table.dt1
    t2 = 0; // EjsS Model.Variables.Var Table.t2
    dt2 = 0.1; // EjsS Model.Variables.Var Table.dt2
    x = 0; // EjsS Model.Variables.Var Table.x
    y = 0; // EjsS Model.Variables.Var Table.y
    z = 0; // EjsS Model.Variables.Var Table.z
    vz = 0; // EjsS Model.Variables.Var Table.vz
    dz = 1.0; // EjsS Model.Variables.Var Table.dz
  });

  _model.addToReset(function() {
    xp = new Array(n); // EjsS Model.Variables.mikegallis.xp
    (function () {
      var _i0;
      for (_i0=0; _i0<n; _i0+=1) {  // EjsS Model.Variables.mikegallis.xp
        xp[_i0] = 0.25/2;  // EjsS Model.Variables.mikegallis.xp
      }
    }());
    xp1 = new Array(n); // EjsS Model.Variables.mikegallis.xp1
    (function () {
      var _i0;
      for (_i0=0; _i0<n; _i0+=1) {  // EjsS Model.Variables.mikegallis.xp1
        xp1[_i0] = 0.25/2;  // EjsS Model.Variables.mikegallis.xp1
      }
    }());
    yp = new Array(n); // EjsS Model.Variables.mikegallis.yp
    (function () {
      var _i0;
      for (_i0=0; _i0<n; _i0+=1) {  // EjsS Model.Variables.mikegallis.yp
        yp[_i0] = 0;  // EjsS Model.Variables.mikegallis.yp
      }
    }());
    yp1 = new Array(n); // EjsS Model.Variables.mikegallis.yp1
    (function () {
      var _i0;
      for (_i0=0; _i0<n; _i0+=1) {  // EjsS Model.Variables.mikegallis.yp1
        yp1[_i0] = 0;  // EjsS Model.Variables.mikegallis.yp1
      }
    }());
    zp = new Array(n); // EjsS Model.Variables.mikegallis.zp
    (function () {
      var _i0;
      for (_i0=0; _i0<n; _i0+=1) {  // EjsS Model.Variables.mikegallis.zp
        zp[_i0] = 0.5;  // EjsS Model.Variables.mikegallis.zp
      }
    }());
    zp1 = new Array(n); // EjsS Model.Variables.mikegallis.zp1
    (function () {
      var _i0;
      for (_i0=0; _i0<n; _i0+=1) {  // EjsS Model.Variables.mikegallis.zp1
        zp1[_i0] = 0.5;  // EjsS Model.Variables.mikegallis.zp1
      }
    }());
    xps = 0.25/2; // EjsS Model.Variables.mikegallis.xps
    yps = 0; // EjsS Model.Variables.mikegallis.yps
    zps = 0.5; // EjsS Model.Variables.mikegallis.zps
  });

  _model.addToReset(function() {
    font = "normal normal 2vw"; // EjsS Model.Variables.varfrem.font
    fontb = "normal bold 2vw"; // EjsS Model.Variables.varfrem.fontb
    color = "green"; // EjsS Model.Variables.varfrem.color
    box = 1; // EjsS Model.Variables.varfrem.box
  });

  if (_inputParameters) {
    _inputParameters = _model.parseInputParameters(_inputParameters);
    if (_inputParameters) _model.addToReset(function() { _model._readParameters(_inputParameters); });
  }

  _model.addToReset(function() {
    _privateOdesList=[];
    _ODEi_evolution1 = _ODE_evolution1();
    _privateOdesList.push(_ODEi_evolution1);
  });

  _model.addToReset(function() {
    _model.setAutoplay(false);
    _model.setPauseOnPageExit(true);
    _model.setFPS(20);
    _model.setStepsPerDisplay(200);
  });

  function lambdax (xx, yy, zz) {  // > CustomCode.lambdax:1
    var rr = Math.sqrt(xx*xx+yy*yy+zz*zz);  // > CustomCode.lambdax:2
    if(rr<=.25){  // > CustomCode.lambdax:3
      return 0.;  // > CustomCode.lambdax:4
    //  fieldarrowshow=true;  // > CustomCode.lambdax:5
      }  // > CustomCode.lambdax:6
    var r5 = Math.pow(rr,5);  // > CustomCode.lambdax:7
    var Ex = 3*xx*zz/r5;              //3 x z /r^5  // > CustomCode.lambdax:8
    var Ey = 3*yy*zz/r5;              //3 y z /r^5  // > CustomCode.lambdax:9
    var Ez = 3*zz*zz/r5-Math.pow(rr,-3); //3 z z /r^5 -1/r^3  // > CustomCode.lambdax:10
    return Ex/Math.sqrt(Ex*Ex+Ey*Ey+Ez*Ez);  // > CustomCode.lambdax:11
   // fieldarrowshow=false;  // > CustomCode.lambdax:12
  }  // > CustomCode.lambdax:13

  function lambday ( xx, yy, zz) {  // > CustomCode.lambday:1
    var rr = Math.sqrt(xx*xx+yy*yy+zz*zz);  // > CustomCode.lambday:2
    if(rr<=.25){return 0.;}  // > CustomCode.lambday:3
    var r5 = Math.pow(rr,5);  // > CustomCode.lambday:4
    var Ex = 3*xx*zz/r5;              //3 x z /r^5  // > CustomCode.lambday:5
    var Ey = 3*yy*zz/r5;              //3 y z /r^5  // > CustomCode.lambday:6
    var Ez = 3*zz*zz/r5-Math.pow(rr,-3); //3 z z /r^5 -1/r^3  // > CustomCode.lambday:7
    return Ey/Math.sqrt(Ex*Ex+Ey*Ey+Ez*Ez);  // > CustomCode.lambday:8
  }  // > CustomCode.lambday:9

  function lambdaz (xx, yy, zz) {  // > CustomCode.lambdaz:1
    var rr = Math.sqrt(xx*xx+yy*yy+zz*zz);  // > CustomCode.lambdaz:2
    if(rr<=.25){return 0.;}  // > CustomCode.lambdaz:3
    var r5 = Math.pow(rr,5);  // > CustomCode.lambdaz:4
    var Ex = 3*xx*zz/r5;              //3 x z /r^5  // > CustomCode.lambdaz:5
    var Ey = 3*yy*zz/r5;              //3 y z /r^5  // > CustomCode.lambdaz:6
    var Ez = 3*zz*zz/r5-Math.pow(rr,-3); //3 z z /r^5 -1/r^3  // > CustomCode.lambdaz:7
    return Ez/Math.sqrt(Ex*Ex+Ey*Ey+Ez*Ez);  // > CustomCode.lambdaz:8
  }  // > CustomCode.lambdaz:9

  //https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Using_full_screen_mode  // > CustomCode.fullscren:1
  // does not work for iOS   // > CustomCode.fullscren:2
  /*jslint browser:true */  // > CustomCode.fullscren:3
  function toggleFullScreen() {  // > CustomCode.fullscren:4
    if (!document.fullscreenElement &&    // alternative standard method  // > CustomCode.fullscren:5
        !document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement ) {  // current working methods  // > CustomCode.fullscren:6
      if (document.documentElement.requestFullscreen) {  // > CustomCode.fullscren:7
        document.documentElement.requestFullscreen();  // > CustomCode.fullscren:8
      } else if (document.documentElement.msRequestFullscreen) {  // > CustomCode.fullscren:9
        document.documentElement.msRequestFullscreen();  // > CustomCode.fullscren:10
      } else if (document.documentElement.mozRequestFullScreen) {  // > CustomCode.fullscren:11
        document.documentElement.mozRequestFullScreen();  // > CustomCode.fullscren:12
      } else if (document.documentElement.webkitRequestFullscreen) {  // > CustomCode.fullscren:13
        document.documentElement.webkitRequestFullscreen();  // > CustomCode.fullscren:14
      }  // > CustomCode.fullscren:15
    } else {  // > CustomCode.fullscren:16
      if (document.exitFullscreen) {  // > CustomCode.fullscren:17
        document.exitFullscreen();  // > CustomCode.fullscren:18
      } else if (document.msExitFullscreen) {  // > CustomCode.fullscren:19
        document.msExitFullscreen();  // > CustomCode.fullscren:20
      } else if (document.mozCancelFullScreen) {  // > CustomCode.fullscren:21
        document.mozCancelFullScreen();  // > CustomCode.fullscren:22
      } else if (document.webkitExitFullscreen) {  // > CustomCode.fullscren:23
        document.webkitExitFullscreen();  // > CustomCode.fullscren:24
      }  // > CustomCode.fullscren:25
    }  // > CustomCode.fullscren:26
  }  // > CustomCode.fullscren:27

  _model.addToInitialization(function() {
    if (!__pagesEnabled["Init Page"]) return;
    //n = new double ;  // > Initialization.Init Page:1
    xp =[ns]; yp=[ns]; zp=[ns];  // > Initialization.Init Page:2
    xp1 =[ns]; yp1=[ns]; zp1=[ns];  // > Initialization.Init Page:3
    ns =n;  // > Initialization.Init Page:4
    for (var i=0; i<ns /* Iterations */ ; i++) {  // > Initialization.Init Page:5
      xp[i] = 0.25*Math.cos(i*2*pi/ns);  // > Initialization.Init Page:6
      yp[i]=  0.25*Math.sin(i*2*pi/ns);;  // > Initialization.Init Page:7
      zp[i] = dz/2;  // > Initialization.Init Page:8
      /* Write the code here */  // > Initialization.Init Page:9
    }  // > Initialization.Init Page:10
    for (var i=0; i<ns /* Iterations */ ; i++) {  // > Initialization.Init Page:11
      xp1[i] = 0.25/1.5*Math.cos(i*2*pi/ns);  // > Initialization.Init Page:12
      yp1[i]=  0.25/1.5*Math.sin(i*2*pi/ns);;  // > Initialization.Init Page:13
      zp1[i] = dz/2;  // > Initialization.Init Page:14
      /* Write the code here */  // > Initialization.Init Page:15
    }  // > Initialization.Init Page:16
  });

  _model.addToInitialization(function() {
    if (!__pagesEnabled["storedata"]) return;
    xps = xp[0] ;   // > Initialization.storedata:1
    yps = yp[0] ;   // > Initialization.storedata:2
    zps = xp[0] ;   // > Initialization.storedata:3
  });

  _model.addToInitialization(function() {
    _initializeSolvers();
  });

  _model.addToEvolution(function() {
    if (!__pagesEnabled["Evol Page"]) return;
    _ODEi_evolution1.step();
  });

  _model.addToFixedRelations(function() { _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); });

  _model.addToFixedRelations(function() {
    if (!__pagesEnabled["FixRel Page"]) return;
    //n==int(B);  // > FixedRelations.FixRel Page:1
    //n =(int)B;  // > FixedRelations.FixRel Page:2
    //n=ns;  // > FixedRelations.FixRel Page:3
    xarrow =[n]; yarrow=[n]; zarrow=[n];  // > FixedRelations.FixRel Page:4
    for (var i=0; i<n /* Iterations */ ;i++) {  // > FixedRelations.FixRel Page:5
      xarrow[i]=2.8*Math.cos(i*2*pi/n);  // > FixedRelations.FixRel Page:6
      yarrow[i]=2.8*Math.sin(i*2*pi/n);  // > FixedRelations.FixRel Page:7
      zarrow[i]=0;  // > FixedRelations.FixRel Page:8
    /*  // > FixedRelations.FixRel Page:9
     for (int theta=0; theta<36 ; theta++) {  // > FixedRelations.FixRel Page:10
    xfield[i]=0.5+0.5*Math.cos(theta*2*pi/n)*Math.cos(0)-1*Math.sin(theta*2*pi/n)*Math.sin(0);  // > FixedRelations.FixRel Page:11
    yfield[i]=0;  // > FixedRelations.FixRel Page:12
    zfield[i]=0+0.5*Math.sin(theta*2*pi/n)*Math.sin(0)-1*Math.sin(theta*2*pi/n)*Math.cos(0);  // > FixedRelations.FixRel Page:13
    }  // > FixedRelations.FixRel Page:14
    */  // > FixedRelations.FixRel Page:15
    }  // > FixedRelations.FixRel Page:16
  });

  _model.addToFixedRelations(function() {
    if (!__pagesEnabled["fieldlines"]) return;
    if ( Math.abs(xps -xp[0])<0.1&&Math.abs(yps -yp[0])<0.1&&t>5*dt ) {  // > FixedRelations.fieldlines:1
    dt=0;  // > FixedRelations.fieldlines:2
    //fieldarrowshow=true;  // > FixedRelations.fieldlines:3
    }  // > FixedRelations.fieldlines:4
    if ( Math.abs(xps -xp1[0])<0.1&&Math.abs(yps -yp1[0])<0.1&&t>5*dt1 ) {  // > FixedRelations.fieldlines:5
    dt1=0;  // > FixedRelations.fieldlines:6
    _pause();  // > FixedRelations.fieldlines:7
    //fieldarrowshow=true;  // > FixedRelations.fieldlines:8
    }  // > FixedRelations.fieldlines:9
  });

  _model.addToFixedRelations(function() { _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); });

  function _initializeSolvers() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].initializeSolver();
  }

  function _automaticResetSolvers() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].automaticResetSolver();
  }

  _model.resetSolvers = function() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].resetSolver();
  };

  _getODE = function (_odeName) {
    if (_odeName=="Evol Page") return _ODEi_evolution1;
    return null;
  }

  function _getEventSolver(_odeName) {
    var ode = _getODE(_odeName);
    if (ode===null) return null;
    return ode.getEventSolver();
  }

  function _setSolverClass(_odeName, _engine) {
    var ode = _getODE(_odeName);
    if (ode===null) return;
    if (!_engine.setODE) {
      var classname = _engine.toLowerCase();
      if      (classname.indexOf("boga")>=0)   _engine = EJSS_ODE_SOLVERS.bogackiShampine23;
      else if (classname.indexOf("cash")>=0)   _engine = EJSS_ODE_SOLVERS.cashKarp45;
      else if (classname.indexOf("dopri5")>=0) _engine = EJSS_ODE_SOLVERS.dopri5;
      else if (classname.indexOf("dopri8")>=0) _engine = EJSS_ODE_SOLVERS.dopri853;
      else if (classname.indexOf("richa")>=0)  _engine = EJSS_ODE_SOLVERS.eulerRichardson;
      else if (classname.indexOf("euler")>=0)  _engine = EJSS_ODE_SOLVERS.euler;
      else if (classname.indexOf("fehlberg87")>=0) _engine = EJSS_ODE_SOLVERS.fehlberg87;
      else if (classname.indexOf("fehlberg8")>=0)  _engine = EJSS_ODE_SOLVERS.fehlberg8;
      else if (classname.indexOf("radau")>=0)   _engine = EJSS_ODE_SOLVERS.radau5;
      else if (classname.indexOf("runge")>=0)  _engine = EJSS_ODE_SOLVERS.rungeKutta4;
      else if (classname.indexOf("rk4")>=0)    _engine = EJSS_ODE_SOLVERS.rungeKutta4;
      else if (classname.indexOf("verlet")>=0) _engine = EJSS_ODE_SOLVERS.velocityVerlet;
    }
    if (_engine) ode.setSolverClass(_engine);
  }

  function _ODE_evolution1() {
    var __odeSelf = {};
    var __eventSolver;
    var __solverClass = EJSS_ODE_SOLVERS.rungeKutta4;
    var __state=[];
    var __ignoreErrors=false;
    var __mustInitialize=true;
    var __isEnabled=true;
    var __mustUserReinitialize=false;
    var __mustReinitialize=true;

    var _xp1Length;
    var _yp1Length;
    var _zp1Length;

    __odeSelf._getOdeVars = function (){ return["xp1","yp1","zp1","t1"]};

    __odeSelf.setSolverClass = function(__aSolverClass) {
      __solverClass = __aSolverClass;
      __instantiateSolver();
    };

    function __instantiateSolver() {
      __state=[];
      _xp1Length = xp1.length;
      _yp1Length = yp1.length;
      _zp1Length = zp1.length;
      __pushState();
      __eventSolver = EJSS_ODE_SOLVERS.interpolatorEventSolver(__solverClass(),__odeSelf);
      __mustInitialize = true;
    }

    __odeSelf.setEnabled = function(_enabled) { __isEnabled = _enabled; };

    __odeSelf.getIndependentVariableValue = function() { return __eventSolver.getIndependentVariableValue(); };

    __odeSelf.getInternalStepSize = function() { return __eventSolver.getInternalStepSize(); };

    __odeSelf.isAccelerationIndependentOfVelocity = function() { return false; };

    __odeSelf.initializeSolver = function() {
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); return; }
      __pushState();
      __eventSolver.initialize(dt1);
      __eventSolver.setBestInterpolation(false);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.removeAllEvents();
      for(k in userEvents1){__eventSolver.addEvent(userEvents1[k]);}
      __eventSolver.setEstimateFirstStep(false);
      __eventSolver.setEnableExceptions(false);
      __eventSolver.setTolerances(0.00001,0.00001);
      __mustReinitialize = true;
      __mustInitialize = false;
    };

    function __pushState() {
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
      if (!__mustReinitialize)
        for (__j=0,__n=__cIn; __j<_xp1Length; __j++)
           if (__state[__n++]!=xp1[__j]) { __mustReinitialize = true; break; }
        for (__j=0;__j<_xp1Length; __j++) {
          __state[__cIn++] = xp1[__j];
        }
      if (!__mustReinitialize)
        for (__j=0,__n=__cIn; __j<_yp1Length; __j++)
           if (__state[__n++]!=yp1[__j]) { __mustReinitialize = true; break; }
        for (__j=0;__j<_yp1Length; __j++) {
          __state[__cIn++] = yp1[__j];
        }
      if (!__mustReinitialize)
        for (__j=0,__n=__cIn; __j<_zp1Length; __j++)
           if (__state[__n++]!=zp1[__j]) { __mustReinitialize = true; break; }
        for (__j=0;__j<_zp1Length; __j++) {
          __state[__cIn++] = zp1[__j];
        }
        if (__state[__cIn]!=t1) __mustReinitialize = true;
        __state[__cIn++] = t1;
    }

    function __arraysChanged () {
      if (_xp1Length != xp1.length) return true;
      if (_yp1Length != yp1.length) return true;
      if (_zp1Length != zp1.length) return true;
      return false;
    }

    __odeSelf.getEventSolver = function() {
      return __eventSolver;
    };

    __odeSelf.resetSolver = function() {
      __mustUserReinitialize = true;
    };

    __odeSelf.automaticResetSolver = function() {
      __mustReinitialize = true;
    };

    function __errorAction () {
      if (__ignoreErrors) return;
      console.log (__eventSolver.getErrorMessage());
      _pause();
      // Make sure the solver is reinitialized;
      __mustReinitialize = true;
    }

    __odeSelf.step = function() { return __privateStep(false); };

    __odeSelf.solverStep = function() { return __privateStep(true); };

    function __privateStep(__takeMaximumStep) {
      if (!__isEnabled) return 0;
      if (dt1===0) return 0;
      if (__mustInitialize) __odeSelf.initializeSolver();
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); }
      __eventSolver.setStepSize(dt1);
      __eventSolver.setInternalStepSize(dt1);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.setTolerances(0.00001,0.00001);
      __pushState();
      if (__mustUserReinitialize) { 
        __eventSolver.userReinitialize();
        __mustUserReinitialize = false;
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      else if (__mustReinitialize) { 
        __eventSolver.reinitialize();
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      var __stepTaken = __takeMaximumStep ? __eventSolver.maxStep() : __eventSolver.step();
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        for (__i=0;__i<_xp1Length; __i++) {
          xp1[__i] = __state[__cOut++];
        }
        for (__i=0;__i<_yp1Length; __i++) {
          yp1[__i] = __state[__cOut++];
        }
        for (__i=0;__i<_zp1Length; __i++) {
          zp1[__i] = __state[__cOut++];
        }
        t1 = __state[__cOut++];
      // Check for error
      if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      return __stepTaken;
    }

    __odeSelf.getState = function() { return __state; };

    __odeSelf.getRate = function(_aState,_aRate) {
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var xp1 = [];
        for (__i=0;__i<_xp1Length; __i++) {
          xp1[__i] = _aState[__cOut++];
        }
        var yp1 = [];
        for (__i=0;__i<_yp1Length; __i++) {
          yp1[__i] = _aState[__cOut++];
        }
        var zp1 = [];
        for (__i=0;__i<_zp1Length; __i++) {
          zp1[__i] = _aState[__cOut++];
        }
        var t1 = _aState[__cOut++];
      // Compute the rate
        var __cRate=0;
        var i;
        for (i=0;i<_xp1Length;i++) {
          _aRate[__cRate++] = Array.isArray(lambdax(xp1[i],yp1[i],zp1[i])) ? lambdax(xp1[i],yp1[i],zp1[i])[i] : lambdax(xp1[i],yp1[i],zp1[i]); // Rate for ODE: Evol Page:xp1
        }
        for (i=0;i<_yp1Length;i++) {
          _aRate[__cRate++] = Array.isArray(lambday(xp1[i],yp1[i],zp1[i])) ? lambday(xp1[i],yp1[i],zp1[i])[i] : lambday(xp1[i],yp1[i],zp1[i]); // Rate for ODE: Evol Page:yp1
        }
        for (i=0;i<_zp1Length;i++) {
          _aRate[__cRate++] = Array.isArray(lambdaz(xp1[i],yp1[i],zp1[i])) ? lambdaz(xp1[i],yp1[i],zp1[i])[i] : lambdaz(xp1[i],yp1[i],zp1[i]); // Rate for ODE: Evol Page:zp1
        }
        _aRate[__cRate++] = 1; // independent variable
        return _aRate;
    }; //end of getRate

    __odeSelf._addEvent = function(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent){
    var User_Event = function (userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent) {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return eventType; };

      _eventSelf.getRootFindingMethod = function() { return eventMethod; };

      _eventSelf.getMaxIterations = function() { return maxIter; };

      _eventSelf.getTolerance = function() { return eventTolerance; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var xp1 = [];
        for (__i=0;__i<_xp1Length; __i++) {
          xp1[__i] = _aState[__cOut++];
        }
        var yp1 = [];
        for (__i=0;__i<_yp1Length; __i++) {
          yp1[__i] = _aState[__cOut++];
        }
        var zp1 = [];
        for (__i=0;__i<_zp1Length; __i++) {
          zp1[__i] = _aState[__cOut++];
        }
        var t1 = _aState[__cOut++];
      return eval(userCondition);
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        for (__i=0;__i<_xp1Length; __i++) {
          xp1[__i] = __state[__cOut++];
        }
        for (__i=0;__i<_yp1Length; __i++) {
          yp1[__i] = __state[__cOut++];
        }
        for (__i=0;__i<_zp1Length; __i++) {
          zp1[__i] = __state[__cOut++];
        }
        t1 = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        for (__j=0;__j<_xp1Length; __j++) {
          __state[__cIn++] = xp1[__j];
        }
        for (__j=0;__j<_yp1Length; __j++) {
          __state[__cIn++] = yp1[__j];
        }
        for (__j=0;__j<_zp1Length; __j++) {
          __state[__cIn++] = zp1[__j];
        }
        __state[__cIn++] = t1;
        return _returnValue;
      };

      function __userDefinedAction() {
        if (undefined != functions) eval(functions.toString());
        eval(userAction);
        return endAtEvent;
      }

      return _eventSelf;
    }; // End of event

   userEvents1.push(User_Event(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent));
   }

    __instantiateSolver();

    return __odeSelf;
  }

  function _historic_xp1(__time) {
    var __beginIndex = 0;
    return _ODEi_evolution1.getEventSolver().getStateHistory().interpolate(__time,new Array(xp1.length),__beginIndex,xp1.ength);
  }

  function _historic_yp1(__time) {
    var __beginIndex = 0 + xp1.length;
    return _ODEi_evolution1.getEventSolver().getStateHistory().interpolate(__time,new Array(yp1.length),__beginIndex,yp1.ength);
  }

  function _historic_zp1(__time) {
    var __beginIndex = 0 + xp1.length + yp1.length;
    return _ODEi_evolution1.getEventSolver().getStateHistory().interpolate(__time,new Array(zp1.length),__beginIndex,zp1.ength);
  }

    _model._fontResized = function(iBase,iSize,iDelta) {
      _view._fontResized(iBase,iSize,iDelta);
  }; // end of _fontResized

  function _getViews() {
    var _viewsInfo = [];
    var _counter = 0;
    _viewsInfo[_counter++] = { name : "HtmlView Page", width : 800, height : 600 };
    return _viewsInfo;
  } // end of _getViews

  function _selectView(_viewNumber) {
    _view = null;
    _view = new fieldlines3Dwee_View(_topFrame,_viewNumber,_libraryPath,_codebasePath);
    var _view_super_reset = _view._reset;
    _view._reset = function() {
      _view_super_reset();
      switch(_viewNumber) {
        case -10 : break; // make Lint happy
        default :
        case 0:
          _view.executionPanel.linkProperty("Background",  function() { return color; }, function(_v) { color = _v; } ); // HtmlView Page linking property 'Background' for element 'executionPanel'
          _view.executionPanel.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'executionPanel'
          _view.comboBox.linkProperty("Options",  function() { return ["n","dz"]; } ); // HtmlView Page linking property 'Options' for element 'comboBox'
          _view.comboBox.linkProperty("Foreground",  function() { return color; }, function(_v) { color = _v; } ); // HtmlView Page linking property 'Foreground' for element 'comboBox'
          _view.comboBox.setAction("OnChange", function(_data,_info) {
  var opts = _view.comboBox.getProperty("SelectedOptions");  // array of options
      var option = (opts.length > 0)? opts[0]:""; // selected option 
  //["B","n","dz"]
  if (option =="B"){box=1;color="green";}
  else if (option =="n"){box=2;color="orange";}
  else if (option =="dz"){box=3;color="blue";}

}); // HtmlView Page setting action 'OnChange' for element 'comboBox'
          _view.comboBox.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'comboBox'
          _view.sliderB.linkProperty("Background",  function() { return color; }, function(_v) { color = _v; } ); // HtmlView Page linking property 'Background' for element 'sliderB'
          _view.sliderB.linkProperty("Value",  function() { return B; }, function(_v) { B = _v; } ); // HtmlView Page linking property 'Value' for element 'sliderB'
          _view.field.linkProperty("Value",  function() { return n; }, function(_v) { n = _v; } ); // HtmlView Page linking property 'Value' for element 'field'
          _view.field.setAction("OnChange", function(_data,_info) {
  _initialize();
  ns=n;

}); // HtmlView Page setting action 'OnChange' for element 'field'
          _view.slidern.linkProperty("Value",  function() { return n; }, function(_v) { n = _v; } ); // HtmlView Page linking property 'Value' for element 'slidern'
          _view.slidern.setAction("OnChange", function(_data,_info) {
  _initialize();
  ns=n;

}); // HtmlView Page setting action 'OnChange' for element 'slidern'
          _view.field2.linkProperty("Value",  function() { return dz; }, function(_v) { dz = _v; } ); // HtmlView Page linking property 'Value' for element 'field2'
          _view.field2.setAction("OnChange", function(_data,_info) {
  _initialize();

}); // HtmlView Page setting action 'OnChange' for element 'field2'
          _view.dzslider.linkProperty("Value",  function() { return dz; }, function(_v) { dz = _v; } ); // HtmlView Page linking property 'Value' for element 'dzslider'
          _view.dzslider.setAction("OnChange", function(_data,_info) {
  _initialize();

}); // HtmlView Page setting action 'OnChange' for element 'dzslider'
          _view.playPauseButton2.setAction("OffClick", _pause); // HtmlView Page setting action 'OffClick' for element 'playPauseButton2'
          _view.playPauseButton2.linkProperty("State",  function() { return _isPaused; } ); // HtmlView Page linking property 'State' for element 'playPauseButton2'
          _view.playPauseButton2.setAction("OnClick", _play); // HtmlView Page setting action 'OnClick' for element 'playPauseButton2'
          _view.playPauseButton2.linkProperty("Font",  function() { return fontb; }, function(_v) { fontb = _v; } ); // HtmlView Page linking property 'Font' for element 'playPauseButton2'
          _view.stepbutton.setAction("OnClick", function(_data,_info) {
  _step();

}); // HtmlView Page setting action 'OnClick' for element 'stepbutton'
          _view.stepbutton.linkProperty("Font",  function() { return fontb; }, function(_v) { fontb = _v; } ); // HtmlView Page linking property 'Font' for element 'stepbutton'
          _view.resetButton.setAction("OnClick", _reset); // HtmlView Page setting action 'OnClick' for element 'resetButton'
          _view.resetButton.linkProperty("Font",  function() { return fontb; }, function(_v) { fontb = _v; } ); // HtmlView Page linking property 'Font' for element 'resetButton'
          _view.drawingPanel3D.setAction("OnDoubleClick", function(_data,_info) {
  toggleFullScreen();

}); // HtmlView Page setting action 'OnDoubleClick' for element 'drawingPanel3D'
          _view.cylinder3D.linkProperty("Z",  function() { return z; }, function(_v) { z = _v; } ); // HtmlView Page linking property 'Z' for element 'cylinder3D'
          _view.cylinder3D.linkProperty("SizeZ",  function() { return dz; }, function(_v) { dz = _v; } ); // HtmlView Page linking property 'SizeZ' for element 'cylinder3D'
          _view.one.linkProperty("Visibility",  function() { return B==1; } ); // HtmlView Page linking property 'Visibility' for element 'one'
          _view.analyticCurve3D.linkProperty("MaxValue",  function() { return 2*Math.PI; } ); // HtmlView Page linking property 'MaxValue' for element 'analyticCurve3D'
          _view.two.linkProperty("Visibility",  function() { return B==2; } ); // HtmlView Page linking property 'Visibility' for element 'two'
          _view.analyticCurve3D2.linkProperty("MaxValue",  function() { return 2*Math.PI; } ); // HtmlView Page linking property 'MaxValue' for element 'analyticCurve3D2'
          _view.analyticCurve3D3.linkProperty("MaxValue",  function() { return 2*Math.PI; } ); // HtmlView Page linking property 'MaxValue' for element 'analyticCurve3D3'
          _view.rotationZ3D.linkProperty("Angle",  function() { return Math.PI; } ); // HtmlView Page linking property 'Angle' for element 'rotationZ3D'
          _view.three.linkProperty("Visibility",  function() { return B==3; } ); // HtmlView Page linking property 'Visibility' for element 'three'
          _view.arrow3D5.linkProperty("X",  function() { return 1*Math.cos(2*pi/3); } ); // HtmlView Page linking property 'X' for element 'arrow3D5'
          _view.arrow3D5.linkProperty("Y",  function() { return 1*Math.sin(2*pi/3); } ); // HtmlView Page linking property 'Y' for element 'arrow3D5'
          _view.arrow3D6.linkProperty("X",  function() { return 1*Math.cos(2*2*pi/3); } ); // HtmlView Page linking property 'X' for element 'arrow3D6'
          _view.arrow3D6.linkProperty("Y",  function() { return 1*Math.sin(2*2*pi/3); } ); // HtmlView Page linking property 'Y' for element 'arrow3D6'
          _view.analyticCurve3D42.linkProperty("MaxValue",  function() { return 2*Math.PI; } ); // HtmlView Page linking property 'MaxValue' for element 'analyticCurve3D42'
          _view.rotationZ3D2.linkProperty("Angle",  function() { return 2*Math.PI/3; } ); // HtmlView Page linking property 'Angle' for element 'rotationZ3D2'
          _view.analyticCurve3D43.linkProperty("MaxValue",  function() { return 2*Math.PI; } ); // HtmlView Page linking property 'MaxValue' for element 'analyticCurve3D43'
          _view.rotationZ3D3.linkProperty("Angle",  function() { return -2*Math.PI/3; } ); // HtmlView Page linking property 'Angle' for element 'rotationZ3D3'
          _view.analyticCurve3D4.linkProperty("MaxValue",  function() { return 2*Math.PI; } ); // HtmlView Page linking property 'MaxValue' for element 'analyticCurve3D4'
          _view.four.linkProperty("Visibility",  function() { return B==4; } ); // HtmlView Page linking property 'Visibility' for element 'four'
          _view.arrowSet3D.linkProperty("X",  function() { return xarrow; }, function(_v) { xarrow = _v; } ); // HtmlView Page linking property 'X' for element 'arrowSet3D'
          _view.arrowSet3D.linkProperty("Y",  function() { return yarrow; }, function(_v) { yarrow = _v; } ); // HtmlView Page linking property 'Y' for element 'arrowSet3D'
          _view.arrowSet3D.linkProperty("Z",  function() { return zarrow; }, function(_v) { zarrow = _v; } ); // HtmlView Page linking property 'Z' for element 'arrowSet3D'
          _view.analyticCurve3D5.linkProperty("MaxValue",  function() { return 2*Math.PI; } ); // HtmlView Page linking property 'MaxValue' for element 'analyticCurve3D5'
          _view.analyticCurve3D52.linkProperty("MaxValue",  function() { return 2*Math.PI; } ); // HtmlView Page linking property 'MaxValue' for element 'analyticCurve3D52'
          _view.rotationZ3D4.linkProperty("Angle",  function() { return Math.PI/2; } ); // HtmlView Page linking property 'Angle' for element 'rotationZ3D4'
          _view.analyticCurve3D53.linkProperty("MaxValue",  function() { return 2*Math.PI; } ); // HtmlView Page linking property 'MaxValue' for element 'analyticCurve3D53'
          _view.rotationZ3D5.linkProperty("Angle",  function() { return Math.PI; } ); // HtmlView Page linking property 'Angle' for element 'rotationZ3D5'
          _view.analyticCurve3D54.linkProperty("MaxValue",  function() { return 2*Math.PI; } ); // HtmlView Page linking property 'MaxValue' for element 'analyticCurve3D54'
          _view.rotationZ3D6.linkProperty("Angle",  function() { return -Math.PI/2; } ); // HtmlView Page linking property 'Angle' for element 'rotationZ3D6'
          _view.group3D.linkProperty("Z",  function() { return z; }, function(_v) { z = _v; } ); // HtmlView Page linking property 'Z' for element 'group3D'
          _view.trail3D.linkProperty("InputZ",  function() { return zp[0]; } ); // HtmlView Page linking property 'InputZ' for element 'trail3D'
          _view.trail3D.linkProperty("InputX",  function() { return xp[0]; } ); // HtmlView Page linking property 'InputX' for element 'trail3D'
          _view.trail3D.linkProperty("InputY",  function() { return yp[0]; } ); // HtmlView Page linking property 'InputY' for element 'trail3D'
          _view.arrowSet3D2.linkProperty("X",  function() { return xarrow; }, function(_v) { xarrow = _v; } ); // HtmlView Page linking property 'X' for element 'arrowSet3D2'
          _view.arrowSet3D2.linkProperty("Y",  function() { return yarrow; }, function(_v) { yarrow = _v; } ); // HtmlView Page linking property 'Y' for element 'arrowSet3D2'
          _view.arrowSet3D2.linkProperty("Z",  function() { return zarrow; }, function(_v) { zarrow = _v; } ); // HtmlView Page linking property 'Z' for element 'arrowSet3D2'
          _view.arrowSet3D2.linkProperty("Visibility",  function() { return fieldarrowshow; }, function(_v) { fieldarrowshow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'arrowSet3D2'
          _view.trail3D2.linkProperty("InputZ",  function() { return zp1[0]; } ); // HtmlView Page linking property 'InputZ' for element 'trail3D2'
          _view.trail3D2.linkProperty("InputX",  function() { return xp1[0]; } ); // HtmlView Page linking property 'InputX' for element 'trail3D2'
          _view.trail3D2.linkProperty("InputY",  function() { return yp1[0]; } ); // HtmlView Page linking property 'InputY' for element 'trail3D2'
          _view.trail3D22.linkProperty("InputZ",  function() { return zp1[1]; } ); // HtmlView Page linking property 'InputZ' for element 'trail3D22'
          _view.trail3D22.linkProperty("InputX",  function() { return xp1[1]; } ); // HtmlView Page linking property 'InputX' for element 'trail3D22'
          _view.trail3D22.linkProperty("InputY",  function() { return yp1[1]; } ); // HtmlView Page linking property 'InputY' for element 'trail3D22'
          _view.trail3D23.linkProperty("InputZ",  function() { return zp1[2]; } ); // HtmlView Page linking property 'InputZ' for element 'trail3D23'
          _view.trail3D23.linkProperty("InputX",  function() { return xp1[2]; } ); // HtmlView Page linking property 'InputX' for element 'trail3D23'
          _view.trail3D23.linkProperty("InputY",  function() { return yp1[2]; } ); // HtmlView Page linking property 'InputY' for element 'trail3D23'
          _view.trail3D28.linkProperty("InputZ",  function() { return zp1[3]; } ); // HtmlView Page linking property 'InputZ' for element 'trail3D28'
          _view.trail3D28.linkProperty("InputX",  function() { return xp1[3]; } ); // HtmlView Page linking property 'InputX' for element 'trail3D28'
          _view.trail3D28.linkProperty("InputY",  function() { return yp1[3]; } ); // HtmlView Page linking property 'InputY' for element 'trail3D28'
          _view.trail3D24.linkProperty("InputZ",  function() { return zp1[4]; } ); // HtmlView Page linking property 'InputZ' for element 'trail3D24'
          _view.trail3D24.linkProperty("InputX",  function() { return xp1[4]; } ); // HtmlView Page linking property 'InputX' for element 'trail3D24'
          _view.trail3D24.linkProperty("InputY",  function() { return yp1[4]; } ); // HtmlView Page linking property 'InputY' for element 'trail3D24'
          _view.trail3D25.linkProperty("InputZ",  function() { return zp1[5]; } ); // HtmlView Page linking property 'InputZ' for element 'trail3D25'
          _view.trail3D25.linkProperty("InputX",  function() { return xp1[5]; } ); // HtmlView Page linking property 'InputX' for element 'trail3D25'
          _view.trail3D25.linkProperty("InputY",  function() { return yp1[5]; } ); // HtmlView Page linking property 'InputY' for element 'trail3D25'
          _view.trail3D26.linkProperty("InputZ",  function() { return zp1[6]; } ); // HtmlView Page linking property 'InputZ' for element 'trail3D26'
          _view.trail3D26.linkProperty("InputX",  function() { return xp1[6]; } ); // HtmlView Page linking property 'InputX' for element 'trail3D26'
          _view.trail3D26.linkProperty("InputY",  function() { return yp1[6]; } ); // HtmlView Page linking property 'InputY' for element 'trail3D26'
          _view.trail3D27.linkProperty("InputZ",  function() { return zp1[7]; } ); // HtmlView Page linking property 'InputZ' for element 'trail3D27'
          _view.trail3D27.linkProperty("InputX",  function() { return xp1[7]; } ); // HtmlView Page linking property 'InputX' for element 'trail3D27'
          _view.trail3D27.linkProperty("InputY",  function() { return yp1[7]; } ); // HtmlView Page linking property 'InputY' for element 'trail3D27'
          _view.trail3D272.linkProperty("InputZ",  function() { return zp1[8]; } ); // HtmlView Page linking property 'InputZ' for element 'trail3D272'
          _view.trail3D272.linkProperty("InputX",  function() { return xp1[8]; } ); // HtmlView Page linking property 'InputX' for element 'trail3D272'
          _view.trail3D272.linkProperty("InputY",  function() { return yp1[8]; } ); // HtmlView Page linking property 'InputY' for element 'trail3D272'
          _view.trail3D2722.linkProperty("InputZ",  function() { return zp1[9]; } ); // HtmlView Page linking property 'InputZ' for element 'trail3D2722'
          _view.trail3D2722.linkProperty("InputX",  function() { return xp1[9]; } ); // HtmlView Page linking property 'InputX' for element 'trail3D2722'
          _view.trail3D2722.linkProperty("InputY",  function() { return yp1[9]; } ); // HtmlView Page linking property 'InputY' for element 'trail3D2722'
          _view.trail3D2723.linkProperty("InputZ",  function() { return zp1[10]; } ); // HtmlView Page linking property 'InputZ' for element 'trail3D2723'
          _view.trail3D2723.linkProperty("InputX",  function() { return xp1[10]; } ); // HtmlView Page linking property 'InputX' for element 'trail3D2723'
          _view.trail3D2723.linkProperty("InputY",  function() { return yp1[10]; } ); // HtmlView Page linking property 'InputY' for element 'trail3D2723'
          _view.trail3D2724.linkProperty("InputZ",  function() { return zp1[11]; } ); // HtmlView Page linking property 'InputZ' for element 'trail3D2724'
          _view.trail3D2724.linkProperty("InputX",  function() { return xp1[11]; } ); // HtmlView Page linking property 'InputX' for element 'trail3D2724'
          _view.trail3D2724.linkProperty("InputY",  function() { return yp1[11]; } ); // HtmlView Page linking property 'InputY' for element 'trail3D2724'
          _view.trail3D2725.linkProperty("InputZ",  function() { return zp1[12]; } ); // HtmlView Page linking property 'InputZ' for element 'trail3D2725'
          _view.trail3D2725.linkProperty("InputX",  function() { return xp1[12]; } ); // HtmlView Page linking property 'InputX' for element 'trail3D2725'
          _view.trail3D2725.linkProperty("InputY",  function() { return yp1[12]; } ); // HtmlView Page linking property 'InputY' for element 'trail3D2725'
          _view.trail3D27252.linkProperty("InputZ",  function() { return zp1[13]; } ); // HtmlView Page linking property 'InputZ' for element 'trail3D27252'
          _view.trail3D27252.linkProperty("InputX",  function() { return xp1[13]; } ); // HtmlView Page linking property 'InputX' for element 'trail3D27252'
          _view.trail3D27252.linkProperty("InputY",  function() { return yp1[13]; } ); // HtmlView Page linking property 'InputY' for element 'trail3D27252'
          break;
      } // end of switch
    }; // end of new reset

    _model.setView(_view);
    _model.reset();
    _view._enableEPub();
  } // end of _selectView

  _model.setAutoplay(false);
  _model.setFPS(20);
  _model.setStepsPerDisplay(200);
  _selectView(-1); // this includes _model.reset()
  return _model;
}

function fieldlines3Dwee_View (_topFrame,_viewNumber,_libraryPath,_codebasePath) {
  var _view;
  switch(_viewNumber) {
    case -10 : break; // make Lint happy
    default :
    case 0: _view = fieldlines3Dwee_View_0 (_topFrame); break;
  } // end of switch

  if (_codebasePath) _view._setResourcePath(_codebasePath);

  if (_libraryPath) _view._setLibraryPath(_libraryPath);


  return _view;
} // end of main function

function fieldlines3Dwee_View_0 (_topFrame) {
  var _view = EJSS_CORE.createView(_topFrame);

  _view._reset = function() {
    _view._clearAll();
    _view._addElement(EJSS_INTERFACE.panel,"executionPanel", _view._topFrame) // EJsS HtmlView.HtmlView Page: declaration of element 'executionPanel'
      .setProperty("CSS",{"float" : "left"}) // EJsS HtmlView.HtmlView Page: setting property 'CSS' for element 'executionPanel'
      .setProperty("Foreground","white") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'executionPanel'
      .setProperty("Display","inline-flex") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'executionPanel'
      ;

    _view._addElement(EJSS_INTERFACE.comboBox,"comboBox", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'comboBox'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'comboBox'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"sliderB", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'sliderB'
      .setProperty("Width","20vw") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'sliderB'
      .setProperty("Minimum",0.0) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'sliderB'
      .setProperty("Maximum",4) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'sliderB'
      .setProperty("Format","0") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'sliderB'
      .setProperty("Foreground","white") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'sliderB'
      .setProperty("Step",1) // EJsS HtmlView.HtmlView Page: setting property 'Step' for element 'sliderB'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'sliderB'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"B", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'B'
      .setProperty("Text","B Field lines =") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'B'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"field", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'field'
      .setProperty("Width","5vw") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'field'
      .setProperty("Format","0") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'field'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"slidern", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'slidern'
      .setProperty("Width","20vw") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'slidern'
      .setProperty("Minimum",1) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'slidern'
      .setProperty("Maximum",12) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'slidern'
      .setProperty("Format","0") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'slidern'
      .setProperty("Step",1) // EJsS HtmlView.HtmlView Page: setting property 'Step' for element 'slidern'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"dz", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'dz'
      .setProperty("Background","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'dz'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'dz'
      .setProperty("Text","Magnet size =") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'dz'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"field2", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'field2'
      .setProperty("Width","5vw") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'field2'
      .setProperty("Format","0.0") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'field2'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"dzslider", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'dzslider'
      .setProperty("Minimum",0.2) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'dzslider'
      .setProperty("Maximum",1.2) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'dzslider'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'dzslider'
      .setProperty("Background","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'dzslider'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'dzslider'
      .setProperty("Step",0.1) // EJsS HtmlView.HtmlView Page: setting property 'Step' for element 'dzslider'
      ;

    _view._addElement(EJSS_INTERFACE.twoStateButton,"playPauseButton2", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'playPauseButton2'
      .setProperty("TextOn","▶") // EJsS HtmlView.HtmlView Page: setting property 'TextOn' for element 'playPauseButton2'
      .setProperty("Tooltip","Play/Pause") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'playPauseButton2'
      .setProperty("TextOff","❚❚") // EJsS HtmlView.HtmlView Page: setting property 'TextOff' for element 'playPauseButton2'
      ;

    _view._addElement(EJSS_INTERFACE.button,"stepbutton", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'stepbutton'
      .setProperty("Text","❚▶") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'stepbutton'
      ;

    _view._addElement(EJSS_INTERFACE.button,"resetButton", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'resetButton'
      .setProperty("Text","↻") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'resetButton'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"panel", _view._topFrame) // EJsS HtmlView.HtmlView Page: declaration of element 'panel'
      ;

    _view._addElement(EJSS_DRAWING3D.drawingPanel,"drawingPanel3D", _view.panel) // EJsS HtmlView.HtmlView Page: declaration of element 'drawingPanel3D'
      .setProperty("Height",window.innerHeight*0.88) // EJsS HtmlView.HtmlView Page: setting property 'Height' for element 'drawingPanel3D'
      .setProperty("Width","100%") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'drawingPanel3D'
      .setProperty("MinimumX",-1) // EJsS HtmlView.HtmlView Page: setting property 'MinimumX' for element 'drawingPanel3D'
      .setProperty("MinimumY",-1) // EJsS HtmlView.HtmlView Page: setting property 'MinimumY' for element 'drawingPanel3D'
      .setProperty("MinimumZ",-1) // EJsS HtmlView.HtmlView Page: setting property 'MinimumZ' for element 'drawingPanel3D'
      .setProperty("Enabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Enabled' for element 'drawingPanel3D'
      .setProperty("DecorationType","NONE") // EJsS HtmlView.HtmlView Page: setting property 'DecorationType' for element 'drawingPanel3D'
      .setProperty("MaximumZ",1) // EJsS HtmlView.HtmlView Page: setting property 'MaximumZ' for element 'drawingPanel3D'
      .setProperty("MaximumY",1) // EJsS HtmlView.HtmlView Page: setting property 'MaximumY' for element 'drawingPanel3D'
      .setProperty("MaximumX",1) // EJsS HtmlView.HtmlView Page: setting property 'MaximumX' for element 'drawingPanel3D'
      ;

    _view._addElement(EJSS_DRAWING3D.cylinder,"cylinder3D", _view.drawingPanel3D) // EJsS HtmlView.HtmlView Page: declaration of element 'cylinder3D'
      .setProperty("FillColor","blue") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'cylinder3D'
      .setProperty("Transparency",64) // EJsS HtmlView.HtmlView Page: setting property 'Transparency' for element 'cylinder3D'
      .setProperty("SizeX",0.5) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'cylinder3D'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'cylinder3D'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'cylinder3D'
      .setProperty("SizeY",0.5) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'cylinder3D'
      .setProperty("DrawLines",false) // EJsS HtmlView.HtmlView Page: setting property 'DrawLines' for element 'cylinder3D'
      ;

    _view._addElement(EJSS_DRAWING3D.group,"one", _view.drawingPanel3D) // EJsS HtmlView.HtmlView Page: declaration of element 'one'
      ;

    _view._addElement(EJSS_DRAWING3D.analyticCurve,"analyticCurve3D", _view.one) // EJsS HtmlView.HtmlView Page: declaration of element 'analyticCurve3D'
      .setProperty("FunctionY","0") // EJsS HtmlView.HtmlView Page: setting property 'FunctionY' for element 'analyticCurve3D'
      .setProperty("FunctionX","1.4+1.4*cos(theta)*cos(0)-1.4*sin(theta)*sin(0)") // EJsS HtmlView.HtmlView Page: setting property 'FunctionX' for element 'analyticCurve3D'
      .setProperty("NumPoints",60) // EJsS HtmlView.HtmlView Page: setting property 'NumPoints' for element 'analyticCurve3D'
      .setProperty("Variable","theta") // EJsS HtmlView.HtmlView Page: setting property 'Variable' for element 'analyticCurve3D'
      .setProperty("FunctionZ","0+0.5*sin(theta)*sin(0)-1*sin(theta)*cos(0)") // EJsS HtmlView.HtmlView Page: setting property 'FunctionZ' for element 'analyticCurve3D'
      .setProperty("MinValue",0) // EJsS HtmlView.HtmlView Page: setting property 'MinValue' for element 'analyticCurve3D'
      .setProperty("LineColor","green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'analyticCurve3D'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'analyticCurve3D'
      ;

    _view._addElement(EJSS_DRAWING3D.arrow,"arrow3D", _view.one) // EJsS HtmlView.HtmlView Page: declaration of element 'arrow3D'
      .setProperty("FillColor","green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'arrow3D'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'arrow3D'
      .setProperty("X",1) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'arrow3D'
      .setProperty("LineColor","green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'arrow3D'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'arrow3D'
      .setProperty("Z",0) // EJsS HtmlView.HtmlView Page: setting property 'Z' for element 'arrow3D'
      .setProperty("SizeZ",-0.5) // EJsS HtmlView.HtmlView Page: setting property 'SizeZ' for element 'arrow3D'
      .setProperty("SizeY",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'arrow3D'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'arrow3D'
      ;

    _view._addElement(EJSS_DRAWING3D.group,"two", _view.drawingPanel3D) // EJsS HtmlView.HtmlView Page: declaration of element 'two'
      ;

    _view._addElement(EJSS_DRAWING3D.arrow,"arrow3D2", _view.two) // EJsS HtmlView.HtmlView Page: declaration of element 'arrow3D2'
      .setProperty("FillColor","green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'arrow3D2'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'arrow3D2'
      .setProperty("X",1) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'arrow3D2'
      .setProperty("LineColor","green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'arrow3D2'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'arrow3D2'
      .setProperty("Z",0) // EJsS HtmlView.HtmlView Page: setting property 'Z' for element 'arrow3D2'
      .setProperty("SizeZ",-0.5) // EJsS HtmlView.HtmlView Page: setting property 'SizeZ' for element 'arrow3D2'
      .setProperty("SizeY",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'arrow3D2'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'arrow3D2'
      ;

    _view._addElement(EJSS_DRAWING3D.arrow,"arrow3D3", _view.two) // EJsS HtmlView.HtmlView Page: declaration of element 'arrow3D3'
      .setProperty("FillColor","green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'arrow3D3'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'arrow3D3'
      .setProperty("X",-1) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'arrow3D3'
      .setProperty("LineColor","green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'arrow3D3'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'arrow3D3'
      .setProperty("Z",0) // EJsS HtmlView.HtmlView Page: setting property 'Z' for element 'arrow3D3'
      .setProperty("SizeZ",-0.5) // EJsS HtmlView.HtmlView Page: setting property 'SizeZ' for element 'arrow3D3'
      .setProperty("SizeY",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'arrow3D3'
      ;

    _view._addElement(EJSS_DRAWING3D.analyticCurve,"analyticCurve3D2", _view.two) // EJsS HtmlView.HtmlView Page: declaration of element 'analyticCurve3D2'
      .setProperty("FunctionY","0") // EJsS HtmlView.HtmlView Page: setting property 'FunctionY' for element 'analyticCurve3D2'
      .setProperty("FunctionX","1.4+1.4*cos(theta)*cos(0)-1.4*sin(theta)*sin(0)") // EJsS HtmlView.HtmlView Page: setting property 'FunctionX' for element 'analyticCurve3D2'
      .setProperty("NumPoints",60) // EJsS HtmlView.HtmlView Page: setting property 'NumPoints' for element 'analyticCurve3D2'
      .setProperty("FillColor","green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'analyticCurve3D2'
      .setProperty("Variable","theta") // EJsS HtmlView.HtmlView Page: setting property 'Variable' for element 'analyticCurve3D2'
      .setProperty("FunctionZ","0+0.5*sin(theta)*sin(0)-1*sin(theta)*cos(0)") // EJsS HtmlView.HtmlView Page: setting property 'FunctionZ' for element 'analyticCurve3D2'
      .setProperty("MinValue",0) // EJsS HtmlView.HtmlView Page: setting property 'MinValue' for element 'analyticCurve3D2'
      .setProperty("LineColor","green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'analyticCurve3D2'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'analyticCurve3D2'
      ;

    _view._addElement(EJSS_DRAWING3D.analyticCurve,"analyticCurve3D3", _view.two) // EJsS HtmlView.HtmlView Page: declaration of element 'analyticCurve3D3'
      .setProperty("FunctionY","0") // EJsS HtmlView.HtmlView Page: setting property 'FunctionY' for element 'analyticCurve3D3'
      .setProperty("FunctionX","1.4+1.4*cos(theta)*cos(0)-1.4*sin(theta)*sin(0)") // EJsS HtmlView.HtmlView Page: setting property 'FunctionX' for element 'analyticCurve3D3'
      .setProperty("NumPoints",60) // EJsS HtmlView.HtmlView Page: setting property 'NumPoints' for element 'analyticCurve3D3'
      .setProperty("FillColor","green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'analyticCurve3D3'
      .setProperty("Variable","theta") // EJsS HtmlView.HtmlView Page: setting property 'Variable' for element 'analyticCurve3D3'
      .setProperty("FunctionZ","0+0.5*sin(theta)*sin(0)-1*sin(theta)*cos(0)") // EJsS HtmlView.HtmlView Page: setting property 'FunctionZ' for element 'analyticCurve3D3'
      .setProperty("MinValue",0) // EJsS HtmlView.HtmlView Page: setting property 'MinValue' for element 'analyticCurve3D3'
      .setProperty("LineColor","green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'analyticCurve3D3'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'analyticCurve3D3'
      ;

    _view._addElement(EJSS_DRAWING3D.rotationZ,"rotationZ3D", _view.analyticCurve3D3) // EJsS HtmlView.HtmlView Page: declaration of element 'rotationZ3D'
      ;

    _view._addElement(EJSS_DRAWING3D.group,"three", _view.drawingPanel3D) // EJsS HtmlView.HtmlView Page: declaration of element 'three'
      ;

    _view._addElement(EJSS_DRAWING3D.arrow,"arrow3D4", _view.three) // EJsS HtmlView.HtmlView Page: declaration of element 'arrow3D4'
      .setProperty("FillColor","green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'arrow3D4'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'arrow3D4'
      .setProperty("X",1) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'arrow3D4'
      .setProperty("LineColor","green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'arrow3D4'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'arrow3D4'
      .setProperty("Z",0) // EJsS HtmlView.HtmlView Page: setting property 'Z' for element 'arrow3D4'
      .setProperty("SizeZ",-0.5) // EJsS HtmlView.HtmlView Page: setting property 'SizeZ' for element 'arrow3D4'
      .setProperty("SizeY",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'arrow3D4'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'arrow3D4'
      ;

    _view._addElement(EJSS_DRAWING3D.arrow,"arrow3D5", _view.three) // EJsS HtmlView.HtmlView Page: declaration of element 'arrow3D5'
      .setProperty("FillColor","green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'arrow3D5'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'arrow3D5'
      .setProperty("LineColor","green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'arrow3D5'
      .setProperty("Z",0) // EJsS HtmlView.HtmlView Page: setting property 'Z' for element 'arrow3D5'
      .setProperty("SizeZ",-0.5) // EJsS HtmlView.HtmlView Page: setting property 'SizeZ' for element 'arrow3D5'
      .setProperty("SizeY",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'arrow3D5'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'arrow3D5'
      ;

    _view._addElement(EJSS_DRAWING3D.arrow,"arrow3D6", _view.three) // EJsS HtmlView.HtmlView Page: declaration of element 'arrow3D6'
      .setProperty("FillColor","green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'arrow3D6'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'arrow3D6'
      .setProperty("LineColor","green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'arrow3D6'
      .setProperty("Z",0) // EJsS HtmlView.HtmlView Page: setting property 'Z' for element 'arrow3D6'
      .setProperty("SizeZ",-0.5) // EJsS HtmlView.HtmlView Page: setting property 'SizeZ' for element 'arrow3D6'
      .setProperty("SizeY",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'arrow3D6'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'arrow3D6'
      ;

    _view._addElement(EJSS_DRAWING3D.analyticCurve,"analyticCurve3D42", _view.three) // EJsS HtmlView.HtmlView Page: declaration of element 'analyticCurve3D42'
      .setProperty("FunctionY","0") // EJsS HtmlView.HtmlView Page: setting property 'FunctionY' for element 'analyticCurve3D42'
      .setProperty("FunctionX","1.4+1.4*cos(theta)*cos(0)-1.4*sin(theta)*sin(0)") // EJsS HtmlView.HtmlView Page: setting property 'FunctionX' for element 'analyticCurve3D42'
      .setProperty("NumPoints",60) // EJsS HtmlView.HtmlView Page: setting property 'NumPoints' for element 'analyticCurve3D42'
      .setProperty("FillColor","green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'analyticCurve3D42'
      .setProperty("Variable","theta") // EJsS HtmlView.HtmlView Page: setting property 'Variable' for element 'analyticCurve3D42'
      .setProperty("FunctionZ","0+0.5*sin(theta)*sin(0)-1*sin(theta)*cos(0)") // EJsS HtmlView.HtmlView Page: setting property 'FunctionZ' for element 'analyticCurve3D42'
      .setProperty("MinValue",0) // EJsS HtmlView.HtmlView Page: setting property 'MinValue' for element 'analyticCurve3D42'
      .setProperty("LineColor","green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'analyticCurve3D42'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'analyticCurve3D42'
      ;

    _view._addElement(EJSS_DRAWING3D.rotationZ,"rotationZ3D2", _view.analyticCurve3D42) // EJsS HtmlView.HtmlView Page: declaration of element 'rotationZ3D2'
      ;

    _view._addElement(EJSS_DRAWING3D.analyticCurve,"analyticCurve3D43", _view.three) // EJsS HtmlView.HtmlView Page: declaration of element 'analyticCurve3D43'
      .setProperty("FunctionY","0") // EJsS HtmlView.HtmlView Page: setting property 'FunctionY' for element 'analyticCurve3D43'
      .setProperty("FunctionX","1.4+1.4*cos(theta)*cos(0)-1.4*sin(theta)*sin(0)") // EJsS HtmlView.HtmlView Page: setting property 'FunctionX' for element 'analyticCurve3D43'
      .setProperty("NumPoints",60) // EJsS HtmlView.HtmlView Page: setting property 'NumPoints' for element 'analyticCurve3D43'
      .setProperty("FillColor","green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'analyticCurve3D43'
      .setProperty("Variable","theta") // EJsS HtmlView.HtmlView Page: setting property 'Variable' for element 'analyticCurve3D43'
      .setProperty("FunctionZ","0+0.5*sin(theta)*sin(0)-1*sin(theta)*cos(0)") // EJsS HtmlView.HtmlView Page: setting property 'FunctionZ' for element 'analyticCurve3D43'
      .setProperty("MinValue",0) // EJsS HtmlView.HtmlView Page: setting property 'MinValue' for element 'analyticCurve3D43'
      .setProperty("LineColor","green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'analyticCurve3D43'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'analyticCurve3D43'
      ;

    _view._addElement(EJSS_DRAWING3D.rotationZ,"rotationZ3D3", _view.analyticCurve3D43) // EJsS HtmlView.HtmlView Page: declaration of element 'rotationZ3D3'
      ;

    _view._addElement(EJSS_DRAWING3D.analyticCurve,"analyticCurve3D4", _view.three) // EJsS HtmlView.HtmlView Page: declaration of element 'analyticCurve3D4'
      .setProperty("FunctionY","0") // EJsS HtmlView.HtmlView Page: setting property 'FunctionY' for element 'analyticCurve3D4'
      .setProperty("FunctionX","1.4+1.4*cos(theta)*cos(0)-1.4*sin(theta)*sin(0)") // EJsS HtmlView.HtmlView Page: setting property 'FunctionX' for element 'analyticCurve3D4'
      .setProperty("NumPoints",60) // EJsS HtmlView.HtmlView Page: setting property 'NumPoints' for element 'analyticCurve3D4'
      .setProperty("FillColor","green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'analyticCurve3D4'
      .setProperty("Variable","theta") // EJsS HtmlView.HtmlView Page: setting property 'Variable' for element 'analyticCurve3D4'
      .setProperty("FunctionZ","0+0.5*sin(theta)*sin(0)-1*sin(theta)*cos(0)") // EJsS HtmlView.HtmlView Page: setting property 'FunctionZ' for element 'analyticCurve3D4'
      .setProperty("MinValue",0) // EJsS HtmlView.HtmlView Page: setting property 'MinValue' for element 'analyticCurve3D4'
      .setProperty("LineColor","green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'analyticCurve3D4'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'analyticCurve3D4'
      ;

    _view._addElement(EJSS_DRAWING3D.group,"four", _view.drawingPanel3D) // EJsS HtmlView.HtmlView Page: declaration of element 'four'
      ;

    _view._addElement(EJSS_DRAWING3D.arrowSet,"arrowSet3D", _view.four) // EJsS HtmlView.HtmlView Page: declaration of element 'arrowSet3D'
      .setProperty("FillColor","green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'arrowSet3D'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'arrowSet3D'
      .setProperty("LineColor","green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'arrowSet3D'
      .setProperty("SizeZ",-0.5) // EJsS HtmlView.HtmlView Page: setting property 'SizeZ' for element 'arrowSet3D'
      .setProperty("SizeY",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'arrowSet3D'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'arrowSet3D'
      ;

    _view._addElement(EJSS_DRAWING3D.analyticCurve,"analyticCurve3D5", _view.four) // EJsS HtmlView.HtmlView Page: declaration of element 'analyticCurve3D5'
      .setProperty("FunctionY","0") // EJsS HtmlView.HtmlView Page: setting property 'FunctionY' for element 'analyticCurve3D5'
      .setProperty("FunctionX","1.4+1.4*cos(theta)*cos(0)-1.4*sin(theta)*sin(0)") // EJsS HtmlView.HtmlView Page: setting property 'FunctionX' for element 'analyticCurve3D5'
      .setProperty("NumPoints",60) // EJsS HtmlView.HtmlView Page: setting property 'NumPoints' for element 'analyticCurve3D5'
      .setProperty("FillColor","green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'analyticCurve3D5'
      .setProperty("Variable","theta") // EJsS HtmlView.HtmlView Page: setting property 'Variable' for element 'analyticCurve3D5'
      .setProperty("FunctionZ","0+0.5*sin(theta)*sin(0)-1*sin(theta)*cos(0)") // EJsS HtmlView.HtmlView Page: setting property 'FunctionZ' for element 'analyticCurve3D5'
      .setProperty("MinValue",0) // EJsS HtmlView.HtmlView Page: setting property 'MinValue' for element 'analyticCurve3D5'
      .setProperty("LineColor","green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'analyticCurve3D5'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'analyticCurve3D5'
      ;

    _view._addElement(EJSS_DRAWING3D.analyticCurve,"analyticCurve3D52", _view.four) // EJsS HtmlView.HtmlView Page: declaration of element 'analyticCurve3D52'
      .setProperty("FunctionY","0") // EJsS HtmlView.HtmlView Page: setting property 'FunctionY' for element 'analyticCurve3D52'
      .setProperty("FunctionX","1.4+1.4*cos(theta)*cos(0)-1.4*sin(theta)*sin(0)") // EJsS HtmlView.HtmlView Page: setting property 'FunctionX' for element 'analyticCurve3D52'
      .setProperty("NumPoints",60) // EJsS HtmlView.HtmlView Page: setting property 'NumPoints' for element 'analyticCurve3D52'
      .setProperty("FillColor","green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'analyticCurve3D52'
      .setProperty("Variable","theta") // EJsS HtmlView.HtmlView Page: setting property 'Variable' for element 'analyticCurve3D52'
      .setProperty("FunctionZ","0+0.5*sin(theta)*sin(0)-1*sin(theta)*cos(0)") // EJsS HtmlView.HtmlView Page: setting property 'FunctionZ' for element 'analyticCurve3D52'
      .setProperty("MinValue",0) // EJsS HtmlView.HtmlView Page: setting property 'MinValue' for element 'analyticCurve3D52'
      .setProperty("LineColor","green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'analyticCurve3D52'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'analyticCurve3D52'
      ;

    _view._addElement(EJSS_DRAWING3D.rotationZ,"rotationZ3D4", _view.analyticCurve3D52) // EJsS HtmlView.HtmlView Page: declaration of element 'rotationZ3D4'
      ;

    _view._addElement(EJSS_DRAWING3D.analyticCurve,"analyticCurve3D53", _view.four) // EJsS HtmlView.HtmlView Page: declaration of element 'analyticCurve3D53'
      .setProperty("FunctionY","0") // EJsS HtmlView.HtmlView Page: setting property 'FunctionY' for element 'analyticCurve3D53'
      .setProperty("FunctionX","1.4+1.4*cos(theta)*cos(0)-1.4*sin(theta)*sin(0)") // EJsS HtmlView.HtmlView Page: setting property 'FunctionX' for element 'analyticCurve3D53'
      .setProperty("NumPoints",60) // EJsS HtmlView.HtmlView Page: setting property 'NumPoints' for element 'analyticCurve3D53'
      .setProperty("FillColor","green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'analyticCurve3D53'
      .setProperty("Variable","theta") // EJsS HtmlView.HtmlView Page: setting property 'Variable' for element 'analyticCurve3D53'
      .setProperty("FunctionZ","0+0.5*sin(theta)*sin(0)-1*sin(theta)*cos(0)") // EJsS HtmlView.HtmlView Page: setting property 'FunctionZ' for element 'analyticCurve3D53'
      .setProperty("MinValue",0) // EJsS HtmlView.HtmlView Page: setting property 'MinValue' for element 'analyticCurve3D53'
      .setProperty("LineColor","green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'analyticCurve3D53'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'analyticCurve3D53'
      ;

    _view._addElement(EJSS_DRAWING3D.rotationZ,"rotationZ3D5", _view.analyticCurve3D53) // EJsS HtmlView.HtmlView Page: declaration of element 'rotationZ3D5'
      ;

    _view._addElement(EJSS_DRAWING3D.analyticCurve,"analyticCurve3D54", _view.four) // EJsS HtmlView.HtmlView Page: declaration of element 'analyticCurve3D54'
      .setProperty("FunctionY","0") // EJsS HtmlView.HtmlView Page: setting property 'FunctionY' for element 'analyticCurve3D54'
      .setProperty("FunctionX","1.4+1.4*cos(theta)*cos(0)-1.4*sin(theta)*sin(0)") // EJsS HtmlView.HtmlView Page: setting property 'FunctionX' for element 'analyticCurve3D54'
      .setProperty("NumPoints",60) // EJsS HtmlView.HtmlView Page: setting property 'NumPoints' for element 'analyticCurve3D54'
      .setProperty("FillColor","green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'analyticCurve3D54'
      .setProperty("Variable","theta") // EJsS HtmlView.HtmlView Page: setting property 'Variable' for element 'analyticCurve3D54'
      .setProperty("FunctionZ","0+0.5*sin(theta)*sin(0)-1*sin(theta)*cos(0)") // EJsS HtmlView.HtmlView Page: setting property 'FunctionZ' for element 'analyticCurve3D54'
      .setProperty("MinValue",0) // EJsS HtmlView.HtmlView Page: setting property 'MinValue' for element 'analyticCurve3D54'
      .setProperty("LineColor","green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'analyticCurve3D54'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'analyticCurve3D54'
      ;

    _view._addElement(EJSS_DRAWING3D.rotationZ,"rotationZ3D6", _view.analyticCurve3D54) // EJsS HtmlView.HtmlView Page: declaration of element 'rotationZ3D6'
      ;

    _view._addElement(EJSS_DRAWING3D.group,"group3D", _view.drawingPanel3D) // EJsS HtmlView.HtmlView Page: declaration of element 'group3D'
      ;

    _view._addElement(EJSS_DRAWING3D.trail,"trail3D", _view.group3D) // EJsS HtmlView.HtmlView Page: declaration of element 'trail3D'
      .setProperty("Maximum",500) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'trail3D'
      .setProperty("LineColor","orange") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'trail3D'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'trail3D'
      ;

    _view._addElement(EJSS_DRAWING3D.arrowSet,"arrowSet3D2", _view.group3D) // EJsS HtmlView.HtmlView Page: declaration of element 'arrowSet3D2'
      .setProperty("FillColor","green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'arrowSet3D2'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'arrowSet3D2'
      .setProperty("LineColor","green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'arrowSet3D2'
      .setProperty("SizeZ",-0.5) // EJsS HtmlView.HtmlView Page: setting property 'SizeZ' for element 'arrowSet3D2'
      .setProperty("SizeY",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'arrowSet3D2'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'arrowSet3D2'
      ;

    _view._addElement(EJSS_DRAWING3D.trail,"trail3D2", _view.group3D) // EJsS HtmlView.HtmlView Page: declaration of element 'trail3D2'
      .setProperty("LineColor","orange") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'trail3D2'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'trail3D2'
      ;

    _view._addElement(EJSS_DRAWING3D.trail,"trail3D22", _view.group3D) // EJsS HtmlView.HtmlView Page: declaration of element 'trail3D22'
      .setProperty("LineColor","orange") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'trail3D22'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'trail3D22'
      ;

    _view._addElement(EJSS_DRAWING3D.trail,"trail3D23", _view.group3D) // EJsS HtmlView.HtmlView Page: declaration of element 'trail3D23'
      .setProperty("LineColor","orange") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'trail3D23'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'trail3D23'
      ;

    _view._addElement(EJSS_DRAWING3D.trail,"trail3D28", _view.group3D) // EJsS HtmlView.HtmlView Page: declaration of element 'trail3D28'
      .setProperty("LineColor","orange") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'trail3D28'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'trail3D28'
      ;

    _view._addElement(EJSS_DRAWING3D.trail,"trail3D24", _view.group3D) // EJsS HtmlView.HtmlView Page: declaration of element 'trail3D24'
      .setProperty("LineColor","orange") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'trail3D24'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'trail3D24'
      ;

    _view._addElement(EJSS_DRAWING3D.trail,"trail3D25", _view.group3D) // EJsS HtmlView.HtmlView Page: declaration of element 'trail3D25'
      .setProperty("LineColor","orange") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'trail3D25'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'trail3D25'
      ;

    _view._addElement(EJSS_DRAWING3D.trail,"trail3D26", _view.group3D) // EJsS HtmlView.HtmlView Page: declaration of element 'trail3D26'
      .setProperty("LineColor","orange") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'trail3D26'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'trail3D26'
      ;

    _view._addElement(EJSS_DRAWING3D.trail,"trail3D27", _view.group3D) // EJsS HtmlView.HtmlView Page: declaration of element 'trail3D27'
      .setProperty("LineColor","orange") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'trail3D27'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'trail3D27'
      ;

    _view._addElement(EJSS_DRAWING3D.trail,"trail3D272", _view.group3D) // EJsS HtmlView.HtmlView Page: declaration of element 'trail3D272'
      .setProperty("LineColor","orange") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'trail3D272'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'trail3D272'
      ;

    _view._addElement(EJSS_DRAWING3D.trail,"trail3D2722", _view.group3D) // EJsS HtmlView.HtmlView Page: declaration of element 'trail3D2722'
      .setProperty("LineColor","orange") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'trail3D2722'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'trail3D2722'
      ;

    _view._addElement(EJSS_DRAWING3D.trail,"trail3D2723", _view.group3D) // EJsS HtmlView.HtmlView Page: declaration of element 'trail3D2723'
      .setProperty("LineColor","orange") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'trail3D2723'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'trail3D2723'
      ;

    _view._addElement(EJSS_DRAWING3D.trail,"trail3D2724", _view.group3D) // EJsS HtmlView.HtmlView Page: declaration of element 'trail3D2724'
      .setProperty("LineColor","orange") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'trail3D2724'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'trail3D2724'
      ;

    _view._addElement(EJSS_DRAWING3D.trail,"trail3D2725", _view.group3D) // EJsS HtmlView.HtmlView Page: declaration of element 'trail3D2725'
      .setProperty("LineColor","orange") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'trail3D2725'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'trail3D2725'
      ;

    _view._addElement(EJSS_DRAWING3D.trail,"trail3D27252", _view.group3D) // EJsS HtmlView.HtmlView Page: declaration of element 'trail3D27252'
      .setProperty("LineColor","orange") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'trail3D27252'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'trail3D27252'
      ;

  };

  return _view;
}


//--><!]]></script>
  </head>
  <body>
    <div role="button" id="_topFrame" style="text-align:center"></div>
  <div id="metadata" class="metadata">
    <br />
    <div id="title_author">
      <hr />
      <b>Title and author:</b>
      <p>
      3D visualization of Magnetic Field from a Bar Magnet<br />
     <img alt="Logo" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/05electricitynmagnetism_20magnetism/fieldlines3Dwee/Screen Shot 2018-04-12 at 5.01.38 PM (2).png" />
      </p>
      <p>
      <img alt="author image" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/05electricitynmagnetism_20magnetism/01authorlookang50x50.png" />
      <img alt="author image" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/05electricitynmagnetism_20magnetism/01author_mikegallis.png" />
      <img alt="author image" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/05electricitynmagnetism_20magnetism/01authorwc_icon.png" />
 Wee Loo Kang, Mike Galis, Wolfgang Christian; Fremont Teng; Mike Gallis; Wolfgang Christian
      </p>
    </div>
    <hr />
    <p></p>
    <div id="copyright_message">
      <div class="cc_left"  style="float:left">&#169; 2018, Wee Loo Kang, Mike Galis, Wolfgang Christian; Fremont Teng; Mike Gallis; Wolfgang Christian.</div>
      <div class="cc_right" style="float:right">    Released under a <a rel="license" target="_blank" href="http://creativecommons.org/licenses/by-nc-sa/4.0/deed.en_US"> <img alt="Creative Commons Attribution-NonCommercial-ShareAlike" src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/images/cc_icon.png" /> </a> license.</div>
    </div>
  </div>
    <script type="text/javascript"><!--//--><![CDATA[//><!--
      var _model;
      var _scorm;
      window.addEventListener('load',
        function () { 
          _model =  new fieldlines3Dwee("_topFrame","file:/Users/lookang/Google%20Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/","file:/Users/lookang/Google%20Drive/PublicLawrence/workspace/source/EJSS/05electricitynmagnetism_20magnetism/");
          if (typeof _isApp !== "undefined" && _isApp) _model.setRunAlways(true);
          TextResizeDetector.TARGET_ELEMENT_ID = '_topFrame';
          TextResizeDetector.USER_INIT_FUNC = function () {
            var iBase = TextResizeDetector.addEventListener(function(e,args) {
              _model._fontResized(args[0].iBase,args[0].iSize,args[0].iDelta);
              },null);
            _model._fontResized(iBase);
          };
          _model.onload();
        }, false);
    //--><!]]></script>
  </body>
</html>
