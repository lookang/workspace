<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title></title>
    <link rel="stylesheet"  type="text/css" href="file:///Users/lookang/Google Drive/PublicLawrence/workspace/output/_ejs_library/css/ejss.css" />
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/scripts/common_script.js"></script>
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/scripts/textresizedetector.js"></script>
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/ejsS.v1.min.js"></script>
<script type="text/javascript"><!--//--><![CDATA[//><!--
/* _inputParameters: an object with different values for the model parameters */
function lookangtemplate2(_topFrame,_libraryPath,_codebasePath, _inputParameters) {
  var _model = EJSS_CORE.createAnimationLMS();
  var _view;
  var _isPlaying = false;
  var _isPaused = true;
  var _isMobile = (navigator===undefined) ? false : navigator.userAgent.match(/iPhone|iPad|iPod|Android|BlackBerry|Opera Mini|IEMobile/i);

var _stringProperties = {};
  var _tools = {
    showInputDialog : EJSS_INTERFACE.BoxPanel.showInputDialog,
    showOkDialog : EJSS_INTERFACE.BoxPanel.showOkDialog,
    showOkCancelDialog : EJSS_INTERFACE.BoxPanel.showOkCancelDialog,
    downloadText: EJSS_TOOLS.File.downloadText,
    uploadText: function(action) { EJSS_TOOLS.File.uploadText(_model,action); } 
  };

  function _play()  { _isPaused = false; _isPlaying = true;  _model.play();  }
  function _pause() { _isPaused = true;  _isPlaying = false; _model.pause(); }
  function _step()  { _pause();  _model.step(); }
  function _reset() { _model.reset();  _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); }
  _model._play  = _play;
  _model._pause = _pause;
  _model._step  = _step;
  _model._reset = _reset;
  function _update() { _model.update(); }
  function _initialize() { _model.initialize(); }
  function _setFPS(_fps) { _model.setFPS(_fps); }
  function _setDelay(_delay) { _model.setDelay(_delay); }
  function _setStepsPerDisplay(_spd) { _model.setStepsPerDisplay(_spd); }
  function _setUpdateView(_updateView) { _model.setUpdateView(_updateView); }
  function _setAutoplay(_auto) { _model.setAutoplay(_auto); }
  function _println(_message) { console.log(_message); }

  function _breakAfterThisPage() { _model.setShouldBreak(true); }

  function _resetSolvers() { if (_model.resetSolvers) _model.resetSolvers(); }

  function _saveText(name,type,content) { if (_model.saveText) _model.saveText(name,type,content); }

  function _saveState(name) { if (_model.saveState) _model.saveState(name); }

  function _saveImage(name,panelname) { if (_model.saveImage) _model.saveImage(name,panelname); }

  function _readState(url,type) { if (_model.readState) _model.readState(url,type); }

  function _readText(url,type,varname) { if (_model.readText) _model.readText(url,type,varname); }

  function _getStringProperty(propertyName) {
    var _value = _stringProperties[propertyName];
    if (_value===undefined) return propertyName;
    else return _value;
  }
  var __pagesEnabled = [];
  function _setPageEnabled(pageName,enabled) { __pagesEnabled[pageName] = enabled; }

  var xmin; // EjsS Model.Variables.Var Table.xmin
  var xmax; // EjsS Model.Variables.Var Table.xmax
  var ymin; // EjsS Model.Variables.Var Table.ymin
  var ymax; // EjsS Model.Variables.Var Table.ymax
  var rangex; // EjsS Model.Variables.Var Table.rangex
  var rangey; // EjsS Model.Variables.Var Table.rangey
  var sizex; // EjsS Model.Variables.Var Table.sizex
  var sizey; // EjsS Model.Variables.Var Table.sizey
  var selected; // EjsS Model.Variables.Var Table.selected
  var text; // EjsS Model.Variables.Var Table.text
  var questionanswer; // EjsS Model.Variables.Var Table.questionanswer
  var questionmorelessnumber; // EjsS Model.Variables.Var Table.questionmorelessnumber
  var questionthannumber; // EjsS Model.Variables.Var Table.questionthannumber
  var moreless; // EjsS Model.Variables.Var Table.moreless
  var textquestion; // EjsS Model.Variables.Var Table.textquestion
  var pi; // EjsS Model.Variables.Var Table.pi
  var y1; // EjsS Model.Variables.Var Table.y1
  var ysize; // EjsS Model.Variables.Var Table.ysize
  var counter; // EjsS Model.Variables.Var Table.counter
  var elementinteracted; // EjsS Model.Variables.Var Table.elementinteracted

  var Androidapp; // EjsS Model.Variables.layout.Androidapp
  var iOSapp; // EjsS Model.Variables.layout.iOSapp
  var iOS; // EjsS Model.Variables.layout.iOS
  var Android; // EjsS Model.Variables.layout.Android
  var iPad; // EjsS Model.Variables.layout.iPad
  var iPhone; // EjsS Model.Variables.layout.iPhone
  var Width; // EjsS Model.Variables.layout.Width
  var Height; // EjsS Model.Variables.layout.Height
  var Width1; // EjsS Model.Variables.layout.Width1
  var Width2; // EjsS Model.Variables.layout.Width2
  var world; // EjsS Model.Variables.layout.world
  var graph; // EjsS Model.Variables.layout.graph
  var disabledworld; // EjsS Model.Variables.layout.disabledworld
  var disabled; // EjsS Model.Variables.layout.disabled

  var m; // EjsS Model.Variables.simplespring.m
  var k; // EjsS Model.Variables.simplespring.k
  var l; // EjsS Model.Variables.simplespring.l
  var n; // EjsS Model.Variables.simplespring.n
  var x; // EjsS Model.Variables.simplespring.x
  var xs; // EjsS Model.Variables.simplespring.xs
  var y; // EjsS Model.Variables.simplespring.y
  var vx; // EjsS Model.Variables.simplespring.vx
  var vxs; // EjsS Model.Variables.simplespring.vxs
  var vxstored; // EjsS Model.Variables.simplespring.vxstored
  var t; // EjsS Model.Variables.simplespring.t
  var tcst; // EjsS Model.Variables.simplespring.tcst
  var X; // EjsS Model.Variables.simplespring.X
  var T; // EjsS Model.Variables.simplespring.T
  var dt; // EjsS Model.Variables.simplespring.dt
  var w; // EjsS Model.Variables.simplespring.w
  var nt; // EjsS Model.Variables.simplespring.nt
  var counterA; // EjsS Model.Variables.simplespring.counterA
  var counterB; // EjsS Model.Variables.simplespring.counterB
  var pointB; // EjsS Model.Variables.simplespring.pointB
  var arraypointB; // EjsS Model.Variables.simplespring.arraypointB
  var tpointB; // EjsS Model.Variables.simplespring.tpointB
  var tarraypointB; // EjsS Model.Variables.simplespring.tarraypointB
  var pointA; // EjsS Model.Variables.simplespring.pointA
  var tpointA; // EjsS Model.Variables.simplespring.tpointA
  var arraypointA; // EjsS Model.Variables.simplespring.arraypointA
  var tarraypointA; // EjsS Model.Variables.simplespring.tarraypointA
  var textA; // EjsS Model.Variables.simplespring.textA
  var textB; // EjsS Model.Variables.simplespring.textB

  var xline; // EjsS Model.Variables.line.xline
  var yline; // EjsS Model.Variables.line.yline
  var xmirror; // EjsS Model.Variables.line.xmirror
  var ymirror; // EjsS Model.Variables.line.ymirror
  var theta; // EjsS Model.Variables.line.theta
  var xdrag; // EjsS Model.Variables.line.xdrag
  var ydrag; // EjsS Model.Variables.line.ydrag
  var xdragmirror; // EjsS Model.Variables.line.xdragmirror
  var ydragmirror; // EjsS Model.Variables.line.ydragmirror

  var a; // EjsS Model.Variables.transformation.a
  var b; // EjsS Model.Variables.transformation.b
  var c; // EjsS Model.Variables.transformation.c
  var d; // EjsS Model.Variables.transformation.d
  var e; // EjsS Model.Variables.transformation.e
  var f; // EjsS Model.Variables.transformation.f

  var selectedmodel; // EjsS Model.Variables.functionY.selectedmodel
  var functionY; // EjsS Model.Variables.functionY.functionY
  var xmodel; // EjsS Model.Variables.functionY.xmodel
  var showmodel; // EjsS Model.Variables.functionY.showmodel

  var _privateOdesList;
  var _ODEi_evolution1;
  var userEvents1=[];

  _model.getOdes = function() { return [_ODEi_evolution1]; };

  _model.removeEvents = function(){
    userEvents1=[];
  };

  function _serialize() { return _model.serialize(); }

  _model._userSerialize = function() {
    return {
      xmin : xmin,
      xmax : xmax,
      ymin : ymin,
      ymax : ymax,
      rangex : rangex,
      rangey : rangey,
      sizex : sizex,
      sizey : sizey,
      selected : selected,
      text : text,
      questionanswer : questionanswer,
      questionmorelessnumber : questionmorelessnumber,
      questionthannumber : questionthannumber,
      moreless : moreless,
      textquestion : textquestion,
      pi : pi,
      y1 : y1,
      ysize : ysize,
      counter : counter,
      elementinteracted : elementinteracted,
      Androidapp : Androidapp,
      iOSapp : iOSapp,
      iOS : iOS,
      Android : Android,
      iPad : iPad,
      iPhone : iPhone,
      Width : Width,
      Height : Height,
      Width1 : Width1,
      Width2 : Width2,
      world : world,
      graph : graph,
      disabledworld : disabledworld,
      disabled : disabled,
      m : m,
      k : k,
      l : l,
      n : n,
      x : x,
      xs : xs,
      y : y,
      vx : vx,
      vxs : vxs,
      vxstored : vxstored,
      t : t,
      tcst : tcst,
      X : X,
      T : T,
      dt : dt,
      w : w,
      nt : nt,
      counterA : counterA,
      counterB : counterB,
      pointB : pointB,
      arraypointB : arraypointB,
      tpointB : tpointB,
      tarraypointB : tarraypointB,
      pointA : pointA,
      tpointA : tpointA,
      arraypointA : arraypointA,
      tarraypointA : tarraypointA,
      textA : textA,
      textB : textB,
      xline : xline,
      yline : yline,
      xmirror : xmirror,
      ymirror : ymirror,
      theta : theta,
      xdrag : xdrag,
      ydrag : ydrag,
      xdragmirror : xdragmirror,
      ydragmirror : ydragmirror,
      a : a,
      b : b,
      c : c,
      d : d,
      e : e,
      f : f,
      selectedmodel : selectedmodel,
      functionY : functionY,
      xmodel : xmodel,
      showmodel : showmodel
    };
  };

  _model._readParameters = function(json) {
    if(typeof json.xmin != "undefined") xmin = json.xmin;
    if(typeof json.xmax != "undefined") xmax = json.xmax;
    if(typeof json.ymin != "undefined") ymin = json.ymin;
    if(typeof json.ymax != "undefined") ymax = json.ymax;
    if(typeof json.rangex != "undefined") rangex = json.rangex;
    if(typeof json.rangey != "undefined") rangey = json.rangey;
    if(typeof json.sizex != "undefined") sizex = json.sizex;
    if(typeof json.sizey != "undefined") sizey = json.sizey;
    if(typeof json.selected != "undefined") selected = json.selected;
    if(typeof json.text != "undefined") text = json.text;
    if(typeof json.questionanswer != "undefined") questionanswer = json.questionanswer;
    if(typeof json.questionmorelessnumber != "undefined") questionmorelessnumber = json.questionmorelessnumber;
    if(typeof json.questionthannumber != "undefined") questionthannumber = json.questionthannumber;
    if(typeof json.moreless != "undefined") moreless = json.moreless;
    if(typeof json.textquestion != "undefined") textquestion = json.textquestion;
    if(typeof json.pi != "undefined") pi = json.pi;
    if(typeof json.y1 != "undefined") y1 = json.y1;
    if(typeof json.ysize != "undefined") ysize = json.ysize;
    if(typeof json.counter != "undefined") counter = json.counter;
    if(typeof json.elementinteracted != "undefined") elementinteracted = json.elementinteracted;
    if(typeof json.Androidapp != "undefined") Androidapp = json.Androidapp;
    if(typeof json.iOSapp != "undefined") iOSapp = json.iOSapp;
    if(typeof json.iOS != "undefined") iOS = json.iOS;
    if(typeof json.Android != "undefined") Android = json.Android;
    if(typeof json.iPad != "undefined") iPad = json.iPad;
    if(typeof json.iPhone != "undefined") iPhone = json.iPhone;
    if(typeof json.Width != "undefined") Width = json.Width;
    if(typeof json.Height != "undefined") Height = json.Height;
    if(typeof json.Width1 != "undefined") Width1 = json.Width1;
    if(typeof json.Width2 != "undefined") Width2 = json.Width2;
    if(typeof json.world != "undefined") world = json.world;
    if(typeof json.graph != "undefined") graph = json.graph;
    if(typeof json.disabledworld != "undefined") disabledworld = json.disabledworld;
    if(typeof json.disabled != "undefined") disabled = json.disabled;
    if(typeof json.m != "undefined") m = json.m;
    if(typeof json.k != "undefined") k = json.k;
    if(typeof json.l != "undefined") l = json.l;
    if(typeof json.n != "undefined") n = json.n;
    if(typeof json.x != "undefined") x = json.x;
    if(typeof json.xs != "undefined") xs = json.xs;
    if(typeof json.y != "undefined") y = json.y;
    if(typeof json.vx != "undefined") vx = json.vx;
    if(typeof json.vxs != "undefined") vxs = json.vxs;
    if(typeof json.vxstored != "undefined") vxstored = json.vxstored;
    if(typeof json.t != "undefined") t = json.t;
    if(typeof json.tcst != "undefined") tcst = json.tcst;
    if(typeof json.X != "undefined") X = json.X;
    if(typeof json.T != "undefined") T = json.T;
    if(typeof json.dt != "undefined") dt = json.dt;
    if(typeof json.w != "undefined") w = json.w;
    if(typeof json.nt != "undefined") nt = json.nt;
    if(typeof json.counterA != "undefined") counterA = json.counterA;
    if(typeof json.counterB != "undefined") counterB = json.counterB;
    if(typeof json.pointB != "undefined") pointB = json.pointB;
    if(typeof json.arraypointB != "undefined") arraypointB = json.arraypointB;
    if(typeof json.tpointB != "undefined") tpointB = json.tpointB;
    if(typeof json.tarraypointB != "undefined") tarraypointB = json.tarraypointB;
    if(typeof json.pointA != "undefined") pointA = json.pointA;
    if(typeof json.tpointA != "undefined") tpointA = json.tpointA;
    if(typeof json.arraypointA != "undefined") arraypointA = json.arraypointA;
    if(typeof json.tarraypointA != "undefined") tarraypointA = json.tarraypointA;
    if(typeof json.textA != "undefined") textA = json.textA;
    if(typeof json.textB != "undefined") textB = json.textB;
    if(typeof json.xline != "undefined") xline = json.xline;
    if(typeof json.yline != "undefined") yline = json.yline;
    if(typeof json.xmirror != "undefined") xmirror = json.xmirror;
    if(typeof json.ymirror != "undefined") ymirror = json.ymirror;
    if(typeof json.theta != "undefined") theta = json.theta;
    if(typeof json.xdrag != "undefined") xdrag = json.xdrag;
    if(typeof json.ydrag != "undefined") ydrag = json.ydrag;
    if(typeof json.xdragmirror != "undefined") xdragmirror = json.xdragmirror;
    if(typeof json.ydragmirror != "undefined") ydragmirror = json.ydragmirror;
    if(typeof json.a != "undefined") a = json.a;
    if(typeof json.b != "undefined") b = json.b;
    if(typeof json.c != "undefined") c = json.c;
    if(typeof json.d != "undefined") d = json.d;
    if(typeof json.e != "undefined") e = json.e;
    if(typeof json.f != "undefined") f = json.f;
    if(typeof json.selectedmodel != "undefined") selectedmodel = json.selectedmodel;
    if(typeof json.functionY != "undefined") functionY = json.functionY;
    if(typeof json.xmodel != "undefined") xmodel = json.xmodel;
    if(typeof json.showmodel != "undefined") showmodel = json.showmodel;
  };

  _model._inputAndPublicParameters = ["xmin",  "xmax",  "ymin",  "ymax",  "rangex",  "rangey",  "sizex",  "sizey",  "selected",  "text",  "questionanswer",  "questionmorelessnumber",  "questionthannumber",  "moreless",  "textquestion",  "pi",  "y1",  "ysize",  "counter",  "elementinteracted",  "Androidapp",  "iOSapp",  "iOS",  "Android",  "iPad",  "iPhone",  "Width",  "Height",  "Width1",  "Width2",  "world",  "graph",  "disabledworld",  "disabled",  "m",  "k",  "l",  "n",  "x",  "xs",  "y",  "vx",  "vxs",  "vxstored",  "t",  "tcst",  "X",  "T",  "dt",  "w",  "nt",  "counterA",  "counterB",  "pointB",  "arraypointB",  "tpointB",  "tarraypointB",  "pointA",  "tpointA",  "arraypointA",  "tarraypointA",  "textA",  "textB",  "xline",  "yline",  "xmirror",  "ymirror",  "theta",  "xdrag",  "ydrag",  "xdragmirror",  "ydragmirror",  "a",  "b",  "c",  "d",  "e",  "f",  "selectedmodel",  "functionY",  "xmodel",  "showmodel"]; 

  _model._outputAndPublicParameters = ["xmin",  "xmax",  "ymin",  "ymax",  "rangex",  "rangey",  "sizex",  "sizey",  "selected",  "text",  "questionanswer",  "questionmorelessnumber",  "questionthannumber",  "moreless",  "textquestion",  "pi",  "y1",  "ysize",  "counter",  "elementinteracted",  "Androidapp",  "iOSapp",  "iOS",  "Android",  "iPad",  "iPhone",  "Width",  "Height",  "Width1",  "Width2",  "world",  "graph",  "disabledworld",  "disabled",  "m",  "k",  "l",  "n",  "x",  "xs",  "y",  "vx",  "vxs",  "vxstored",  "t",  "tcst",  "X",  "T",  "dt",  "w",  "nt",  "counterA",  "counterB",  "pointB",  "arraypointB",  "tpointB",  "tarraypointB",  "pointA",  "tpointA",  "arraypointA",  "tarraypointA",  "textA",  "textB",  "xline",  "yline",  "xmirror",  "ymirror",  "theta",  "xdrag",  "ydrag",  "xdragmirror",  "ydragmirror",  "a",  "b",  "c",  "d",  "e",  "f",  "selectedmodel",  "functionY",  "xmodel",  "showmodel"];

  function _unserialize(json) { return _model.unserialize(json); }

  _model._userUnserialize = function(json) {
    _model._readParameters(json);
   _resetSolvers();
   _model.update();
  };

  _model.addToReset(function() {
    __pagesEnabled["svg"] = true;
    __pagesEnabled["Evol Page"] = true;
  });

  _model.addToReset(function() {
    xmin = 0; // EjsS Model.Variables.Var Table.xmin
    xmax = 40; // EjsS Model.Variables.Var Table.xmax
    ymin = -2; // EjsS Model.Variables.Var Table.ymin
    ymax = 2; // EjsS Model.Variables.Var Table.ymax
    rangex = xmax-xmin; // EjsS Model.Variables.Var Table.rangex
    rangey = ymax-ymin; // EjsS Model.Variables.Var Table.rangey
    sizex = rangex/20; // EjsS Model.Variables.Var Table.sizex
    sizey = rangey/20; // EjsS Model.Variables.Var Table.sizey
    selected = new Array(1); // EjsS Model.Variables.Var Table.selected
    (function () {
      var _i0;
      for (_i0=0; _i0<1; _i0+=1) {  // EjsS Model.Variables.Var Table.selected
        selected[_i0] = "shm_with_xo=0,vo=2";  // EjsS Model.Variables.Var Table.selected
      }
    }());
    text = "select dropdown menu and click play"; // EjsS Model.Variables.Var Table.text
    questionanswer = 21; // EjsS Model.Variables.Var Table.questionanswer
    questionmorelessnumber = 4; // EjsS Model.Variables.Var Table.questionmorelessnumber
    questionthannumber = 17; // EjsS Model.Variables.Var Table.questionthannumber
    moreless = ""; // EjsS Model.Variables.Var Table.moreless
    textquestion = "_______ more than 17 is 21"; // EjsS Model.Variables.Var Table.textquestion
    pi = Math.PI; // EjsS Model.Variables.Var Table.pi
    y1 = sizey*5/2; // EjsS Model.Variables.Var Table.y1
    ysize = 0.2; // EjsS Model.Variables.Var Table.ysize
    counter = 0; // EjsS Model.Variables.Var Table.counter
    elementinteracted = -1; // EjsS Model.Variables.Var Table.elementinteracted
  });

  _model.addToReset(function() {
    Androidapp = (typeof parent.device != 'undefined' && parent.device.platform == "Android"); // EjsS Model.Variables.layout.Androidapp
    iOSapp = (typeof parent.device != 'undefined' && parent.device.platform == "iOS"); // EjsS Model.Variables.layout.iOSapp
    iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream; // EjsS Model.Variables.layout.iOS
    Android = /Android|android/i.test(navigator.userAgent); // EjsS Model.Variables.layout.Android
    iPad = /iPad/.test(navigator.userAgent) && !window.MSStream; // EjsS Model.Variables.layout.iPad
    iPhone = /iPhone|iPod/.test(navigator.userAgent) && !window.MSStream; // EjsS Model.Variables.layout.iPhone
    Width = (_isEPub)?"400":"100%"; // EjsS Model.Variables.layout.Width
    Height = (_isEPub)?"500":"100%"; // EjsS Model.Variables.layout.Height
    Width1 = "100%"; // EjsS Model.Variables.layout.Width1
    Width2 = "50%"; // EjsS Model.Variables.layout.Width2
    world = true; // EjsS Model.Variables.layout.world
    graph = true; // EjsS Model.Variables.layout.graph
    disabledworld = false; // EjsS Model.Variables.layout.disabledworld
    disabled = false; // EjsS Model.Variables.layout.disabled
  });

  _model.addToReset(function() {
    m = 1; // EjsS Model.Variables.simplespring.m
    k = 1; // EjsS Model.Variables.simplespring.k
    l = 0; // EjsS Model.Variables.simplespring.l
    n = 100; // EjsS Model.Variables.simplespring.n
    x = new Array(n); // EjsS Model.Variables.simplespring.x
    (function () {
      var _i0;
      for (_i0=0; _i0<n; _i0+=1) {  // EjsS Model.Variables.simplespring.x
        x[_i0] = 0;  // EjsS Model.Variables.simplespring.x
      }
    }());
    xs = new Array(n); // EjsS Model.Variables.simplespring.xs
    (function () {
      var _i0;
      for (_i0=0; _i0<n; _i0+=1) {  // EjsS Model.Variables.simplespring.xs
        xs[_i0] = x[0];  // EjsS Model.Variables.simplespring.xs
      }
    }());
    y = new Array(n); // EjsS Model.Variables.simplespring.y
    (function () {
      var _i0;
      for (_i0=0; _i0<n; _i0+=1) {  // EjsS Model.Variables.simplespring.y
        y[_i0] = 0;  // EjsS Model.Variables.simplespring.y
      }
    }());
    vx = 0; // EjsS Model.Variables.simplespring.vx
    vxs = vx; // EjsS Model.Variables.simplespring.vxs
    vxstored = 0; // EjsS Model.Variables.simplespring.vxstored
    t = 0; // EjsS Model.Variables.simplespring.t
    X = x-l; // EjsS Model.Variables.simplespring.X
    T = 2*pi*Math.sqrt(m/k); // EjsS Model.Variables.simplespring.T
    dt = T/100; // EjsS Model.Variables.simplespring.dt
    w = 2*pi/T; // EjsS Model.Variables.simplespring.w
    nt = 10; // EjsS Model.Variables.simplespring.nt
    counterA = 0; // EjsS Model.Variables.simplespring.counterA
    counterB = 1; // EjsS Model.Variables.simplespring.counterB
    pointB = 0; // EjsS Model.Variables.simplespring.pointB
    arraypointB = new Array(nt); // EjsS Model.Variables.simplespring.arraypointB
    (function () {
      var _i0;
      for (_i0=0; _i0<nt; _i0+=1) {  // EjsS Model.Variables.simplespring.arraypointB
        arraypointB[_i0] = 0;  // EjsS Model.Variables.simplespring.arraypointB
      }
    }());
    tpointB = 0; // EjsS Model.Variables.simplespring.tpointB
    tarraypointB = new Array(nt); // EjsS Model.Variables.simplespring.tarraypointB
    (function () {
      var _i0;
      for (_i0=0; _i0<nt; _i0+=1) {  // EjsS Model.Variables.simplespring.tarraypointB
        tarraypointB[_i0] = 0;  // EjsS Model.Variables.simplespring.tarraypointB
      }
    }());
    pointA = 0; // EjsS Model.Variables.simplespring.pointA
    tpointA = 0; // EjsS Model.Variables.simplespring.tpointA
    arraypointA = new Array(nt); // EjsS Model.Variables.simplespring.arraypointA
    (function () {
      var _i0;
      for (_i0=0; _i0<nt; _i0+=1) {  // EjsS Model.Variables.simplespring.arraypointA
        arraypointA[_i0] = 0;  // EjsS Model.Variables.simplespring.arraypointA
      }
    }());
    tarraypointA = new Array(nt); // EjsS Model.Variables.simplespring.tarraypointA
    (function () {
      var _i0;
      for (_i0=0; _i0<nt; _i0+=1) {  // EjsS Model.Variables.simplespring.tarraypointA
        tarraypointA[_i0] = 0;  // EjsS Model.Variables.simplespring.tarraypointA
      }
    }());
    textA = new Array(nt); // EjsS Model.Variables.simplespring.textA
    (function () {
      var _i0;
      for (_i0=0; _i0<nt; _i0+=1) {  // EjsS Model.Variables.simplespring.textA
        textA[_i0] = "";  // EjsS Model.Variables.simplespring.textA
      }
    }());
    textB = new Array(nt); // EjsS Model.Variables.simplespring.textB
    (function () {
      var _i0;
      for (_i0=0; _i0<nt; _i0+=1) {  // EjsS Model.Variables.simplespring.textB
        textB[_i0] = "";  // EjsS Model.Variables.simplespring.textB
      }
    }());
  });

  _model.addToReset(function() {
    xline = 0; // EjsS Model.Variables.line.xline
    yline = 0; // EjsS Model.Variables.line.yline
    xmirror = new Array(n); // EjsS Model.Variables.line.xmirror
    (function () {
      var _i0;
      for (_i0=0; _i0<n; _i0+=1) {  // EjsS Model.Variables.line.xmirror
        xmirror[_i0] = -x;  // EjsS Model.Variables.line.xmirror
      }
    }());
    ymirror = new Array(n); // EjsS Model.Variables.line.ymirror
    (function () {
      var _i0;
      for (_i0=0; _i0<n; _i0+=1) {  // EjsS Model.Variables.line.ymirror
        ymirror[_i0] = -y;  // EjsS Model.Variables.line.ymirror
      }
    }());
    theta = 0; // EjsS Model.Variables.line.theta
    xdrag = 1; // EjsS Model.Variables.line.xdrag
    ydrag = 0; // EjsS Model.Variables.line.ydrag
    xdragmirror = 1; // EjsS Model.Variables.line.xdragmirror
    ydragmirror = 0; // EjsS Model.Variables.line.ydragmirror
  });

  _model.addToReset(function() {
    a = 1; // EjsS Model.Variables.transformation.a
    b = 1; // EjsS Model.Variables.transformation.b
    c = 1; // EjsS Model.Variables.transformation.c
    d = 1; // EjsS Model.Variables.transformation.d
    e = 0; // EjsS Model.Variables.transformation.e
    f = 0; // EjsS Model.Variables.transformation.f
  });

  _model.addToReset(function() {
    selectedmodel = new Array(1); // EjsS Model.Variables.functionY.selectedmodel
    (function () {
      var _i0;
      for (_i0=0; _i0<1; _i0+=1) {  // EjsS Model.Variables.functionY.selectedmodel
        selectedmodel[_i0] = "2*sin(t)";  // EjsS Model.Variables.functionY.selectedmodel
      }
    }());
    functionY = selectedmodel+""; // EjsS Model.Variables.functionY.functionY
    showmodel = false; // EjsS Model.Variables.functionY.showmodel
  });

  if (_inputParameters) {
    _inputParameters = _model.parseInputParameters(_inputParameters);
    if (_inputParameters) _model.addToReset(function() { _model._readParameters(_inputParameters); });
  }

  _model.addToReset(function() {
    _privateOdesList=[];
    _ODEi_evolution1 = _ODE_evolution1();
    _privateOdesList.push(_ODEi_evolution1);
  });

  _model.addToReset(function() {
    _model.setAutoplay(false);
    _model.setPauseOnPageExit(true);
    _model.setFPS(20);
    _model.setStepsPerDisplay(1);
  });

  //https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Using_full_screen_mode  // > CustomCode.fullscreen:1
  // does not work for iOS   // > CustomCode.fullscreen:2
  /*jslint browser:true */  // > CustomCode.fullscreen:3
  function toggleFullScreen() {  // > CustomCode.fullscreen:4
    if (!document.fullscreenElement &&    // alternative standard method  // > CustomCode.fullscreen:5
        !document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement ) {  // current working methods  // > CustomCode.fullscreen:6
      if (document.documentElement.requestFullscreen) {  // > CustomCode.fullscreen:7
        document.documentElement.requestFullscreen();  // > CustomCode.fullscreen:8
      } else if (document.documentElement.msRequestFullscreen) {  // > CustomCode.fullscreen:9
        document.documentElement.msRequestFullscreen();  // > CustomCode.fullscreen:10
      } else if (document.documentElement.mozRequestFullScreen) {  // > CustomCode.fullscreen:11
        document.documentElement.mozRequestFullScreen();  // > CustomCode.fullscreen:12
      } else if (document.documentElement.webkitRequestFullscreen) {  // > CustomCode.fullscreen:13
        document.documentElement.webkitRequestFullscreen();  // > CustomCode.fullscreen:14
      }  // > CustomCode.fullscreen:15
    } else {  // > CustomCode.fullscreen:16
      if (document.exitFullscreen) {  // > CustomCode.fullscreen:17
        document.exitFullscreen();  // > CustomCode.fullscreen:18
      } else if (document.msExitFullscreen) {  // > CustomCode.fullscreen:19
        document.msExitFullscreen();  // > CustomCode.fullscreen:20
      } else if (document.mozCancelFullScreen) {  // > CustomCode.fullscreen:21
        document.mozCancelFullScreen();  // > CustomCode.fullscreen:22
      } else if (document.webkitExitFullscreen) {  // > CustomCode.fullscreen:23
        document.webkitExitFullscreen();  // > CustomCode.fullscreen:24
      }  // > CustomCode.fullscreen:25
    }  // > CustomCode.fullscreen:26
  }  // > CustomCode.fullscreen:27

  function changeOrientation() {  // > CustomCode.changeOrientation:1
  //if(typeof parent.device != 'undefined')  // > CustomCode.changeOrientation:2
  //  _view.mytext.setText(parent.device.platform)  // > CustomCode.changeOrientation:3
  //else  // > CustomCode.changeOrientation:4
   // _view.mytext.setText("nada:");  // > CustomCode.changeOrientation:5
  // check platform for Apps  // > CustomCode.changeOrientation:6
  var iOSapp =  (typeof parent.device != 'undefined' && parent.device.platform == "iOS");  // > CustomCode.changeOrientation:7
  var Androidapp = (typeof parent.device != 'undefined' && parent.device.platform == "Android");  // > CustomCode.changeOrientation:8
  // check platform for web browsers  // > CustomCode.changeOrientation:9
  var iOS =/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;  // > CustomCode.changeOrientation:10
  var iPad =/iPad/.test(navigator.userAgent) && !window.MSStream;  // > CustomCode.changeOrientation:11
  var iPhone = /iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;  // > CustomCode.changeOrientation:12
  var Android= /Android|android/i.test(navigator.userAgent);  // > CustomCode.changeOrientation:13
  //_view.mytext.setText(_view.mytext.getText() + "-orient:" + window.orientation + "-" + iOSapp + "-" + Androidapp);  // > CustomCode.changeOrientation:14
  switch (window.orientation) {  // > CustomCode.changeOrientation:15
    case 0:  // > CustomCode.changeOrientation:16
    case 180:  // > CustomCode.changeOrientation:17
      this.screenOrientation = 'portrait';  // > CustomCode.changeOrientation:18
      if (iOSapp){ // does not seems to work  // > CustomCode.changeOrientation:19
        //   return Math.max(window.screen.width,window.screen.height)*0.9;  // > CustomCode.changeOrientation:20
        return window.screen.height*0.7;  //0.1 for app and 0.1 for nonfullscreenapp    // > CustomCode.changeOrientation:21
        // return window.screen.height;  // > CustomCode.changeOrientation:22
        //  return window.innerHeight;  // > CustomCode.changeOrientation:23
        // return document.documentElement.clientHeight;  // > CustomCode.changeOrientation:24
      }  // > CustomCode.changeOrientation:25
        // > CustomCode.changeOrientation:26
      else {  // > CustomCode.changeOrientation:27
        // return Math.max(window.innerWidth,window.innerHeight)*0.9;  // > CustomCode.changeOrientation:28
        return window.innerHeight*0.9;  // > CustomCode.changeOrientation:29
      }  // > CustomCode.changeOrientation:30
      break;  // > CustomCode.changeOrientation:31
    case 90:  // > CustomCode.changeOrientation:32
    case -90:  // > CustomCode.changeOrientation:33
      this.screenOrientation = 'landscape';  // > CustomCode.changeOrientation:34
      if (iOSapp){ // App  // > CustomCode.changeOrientation:35
        return window.screen.width*0.7;    // > CustomCode.changeOrientation:36
        // return window.screen.height;  // > CustomCode.changeOrientation:37
        //  return window.innerHeight;  // > CustomCode.changeOrientation:38
        //  return document.documentElement.clientHeight;  // > CustomCode.changeOrientation:39
      }  // > CustomCode.changeOrientation:40
        // > CustomCode.changeOrientation:41
      else { // browser Android and PC  // > CustomCode.changeOrientation:42
        // return Math.min(window.innerWidth,window.innerHeight)*0.9;  // > CustomCode.changeOrientation:43
        // alert("browser Android and PC");  // > CustomCode.changeOrientation:44
        return window.innerHeight*0.9;  // > CustomCode.changeOrientation:45
      }  // > CustomCode.changeOrientation:46
      break;  // > CustomCode.changeOrientation:47
    default:  // > CustomCode.changeOrientation:48
      this.screenOrientation = 'unknown';  // > CustomCode.changeOrientation:49
      //       return (iPad)?""+(window.screen.width+window.screen.height)*0.4:((iPhone)?""+window.screen.width:_view._format(window.innerHeight*0.9,"0"));  // > CustomCode.changeOrientation:50
      return window.innerHeight*0.9;  // > CustomCode.changeOrientation:51
  }  // > CustomCode.changeOrientation:52
  }  // > CustomCode.changeOrientation:53

  function changeOrientationfullscreen() {  // > CustomCode.changeOrientation 2:1
  //if(typeof parent.device != 'undefined')  // > CustomCode.changeOrientation 2:2
  //  _view.mytext.setText(parent.device.platform)  // > CustomCode.changeOrientation 2:3
  //else  // > CustomCode.changeOrientation 2:4
   // _view.mytext.setText("nada:");  // > CustomCode.changeOrientation 2:5
  // check platform for Apps  // > CustomCode.changeOrientation 2:6
  var iOSapp =  (typeof parent.device != 'undefined' && parent.device.platform == "iOS");  // > CustomCode.changeOrientation 2:7
  var Androidapp = (typeof parent.device != 'undefined' && parent.device.platform == "Android");  // > CustomCode.changeOrientation 2:8
  // check platform for web browsers  // > CustomCode.changeOrientation 2:9
  var iOS =/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;  // > CustomCode.changeOrientation 2:10
  var iPad =/iPad/.test(navigator.userAgent) && !window.MSStream;  // > CustomCode.changeOrientation 2:11
  var iPhone = /iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;  // > CustomCode.changeOrientation 2:12
  var Android= /Android|android/i.test(navigator.userAgent);  // > CustomCode.changeOrientation 2:13
  //_view.mytext.setText(_view.mytext.getText() + "-orient:" + window.orientation + "-" + iOSapp + "-" + Androidapp);  // > CustomCode.changeOrientation 2:14
  switch (window.orientation) {  // > CustomCode.changeOrientation 2:15
    case 0:  // > CustomCode.changeOrientation 2:16
    case 180:  // > CustomCode.changeOrientation 2:17
      this.screenOrientation = 'portrait';  // > CustomCode.changeOrientation 2:18
      if (iOSapp){ // does not seems to work  // > CustomCode.changeOrientation 2:19
        //   return Math.max(window.screen.width,window.screen.height)*0.9;  // > CustomCode.changeOrientation 2:20
        return window.screen.height*0.7;  //0.1 for app and 0.1 for nonfullscreenapp    // > CustomCode.changeOrientation 2:21
        // return window.screen.height;  // > CustomCode.changeOrientation 2:22
        //  return window.innerHeight;  // > CustomCode.changeOrientation 2:23
        // return document.documentElement.clientHeight;  // > CustomCode.changeOrientation 2:24
      }  // > CustomCode.changeOrientation 2:25
        // > CustomCode.changeOrientation 2:26
      else {  // > CustomCode.changeOrientation 2:27
        // return Math.max(window.innerWidth,window.innerHeight)*0.9;  // > CustomCode.changeOrientation 2:28
        return window.innerHeight*0.9;  // > CustomCode.changeOrientation 2:29
      }  // > CustomCode.changeOrientation 2:30
      break;  // > CustomCode.changeOrientation 2:31
    case 90:  // > CustomCode.changeOrientation 2:32
    case -90:  // > CustomCode.changeOrientation 2:33
      this.screenOrientation = 'landscape';  // > CustomCode.changeOrientation 2:34
      if (iOSapp){ // App  // > CustomCode.changeOrientation 2:35
        return window.screen.width*0.7;    // > CustomCode.changeOrientation 2:36
        // return window.screen.height;  // > CustomCode.changeOrientation 2:37
        //  return window.innerHeight;  // > CustomCode.changeOrientation 2:38
        //  return document.documentElement.clientHeight;  // > CustomCode.changeOrientation 2:39
      }  // > CustomCode.changeOrientation 2:40
        // > CustomCode.changeOrientation 2:41
      else { // browser Android and PC  // > CustomCode.changeOrientation 2:42
        // return Math.min(window.innerWidth,window.innerHeight)*0.9;  // > CustomCode.changeOrientation 2:43
        // alert("browser Android and PC");  // > CustomCode.changeOrientation 2:44
        return window.innerHeight*0.9;  // > CustomCode.changeOrientation 2:45
      }  // > CustomCode.changeOrientation 2:46
      break;  // > CustomCode.changeOrientation 2:47
    default:  // > CustomCode.changeOrientation 2:48
      this.screenOrientation = 'unknown';  // > CustomCode.changeOrientation 2:49
      //       return (iPad)?""+(window.screen.width+window.screen.height)*0.4:((iPhone)?""+window.screen.width:_view._format(window.innerHeight*0.9,"0"));  // > CustomCode.changeOrientation 2:50
      return window.innerHeight*0.9;  // > CustomCode.changeOrientation 2:51
  }  // > CustomCode.changeOrientation 2:52
  }  // > CustomCode.changeOrientation 2:53

  function gcd () {  // > CustomCode.gcd:1
  // JavaScript: Greatest Common Divisor  // > CustomCode.gcd:2
  var gcd = function (n, m) {  // > CustomCode.gcd:3
    var r = 0;  // > CustomCode.gcd:4
    while (n !== 0) {  // > CustomCode.gcd:5
      r = m % n;  // > CustomCode.gcd:6
      m = n;  // > CustomCode.gcd:7
      n = r;  // > CustomCode.gcd:8
    }  // > CustomCode.gcd:9
    return m;  // > CustomCode.gcd:10
  };  // > CustomCode.gcd:11
  }  // > CustomCode.gcd:12

  _model.addToInitialization(function() {
    if (!__pagesEnabled["svg"]) return;
    var container = document.createElement('div');  // > Initialization.svg:1
    var svggradient = '<svg xmlns="http://www.w3.org/2000/svg" version="1.1"><defs>'+  // > Initialization.svg:2
      '  <radialGradient id="mygrandient" cx="50%" cy="50%" r="80%" fx="50%" fy="50%">'+  // > Initialization.svg:3
      '    <stop offset="0%" style="stop-color:rgb(255,255,255); stop-opacity:1" />'+  // > Initialization.svg:4
      '    <stop offset="100%" style="stop-color:rgb(0,0,0);stop-opacity:0" />'+  // > Initialization.svg:5
      '  </radialGradient>'+  // > Initialization.svg:6
      '</defs></svg>';  // > Initialization.svg:7
    container.innerHTML = svggradient;  // > Initialization.svg:8
    document.body.appendChild(container);  // > Initialization.svg:9
    //"url(#mygrandient)"  // > Initialization.svg:10
  });

  _model.addToInitialization(function() {
    _initializeSolvers();
  });

  _model.addToEvolution(function() {
    if (!__pagesEnabled["Evol Page"]) return;
    _ODEi_evolution1.step();
  });

  _model.addToFixedRelations(function() { _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); });

  _model.addToFixedRelations(function() { _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); });

  function _initializeSolvers() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].initializeSolver();
  }

  function _automaticResetSolvers() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].automaticResetSolver();
  }

  _model.resetSolvers = function() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].resetSolver();
  };

  _getODE = function (_odeName) {
    if (_odeName=="Evol Page") return _ODEi_evolution1;
    return null;
  }

  function _getEventSolver(_odeName) {
    var ode = _getODE(_odeName);
    if (ode===null) return null;
    return ode.getEventSolver();
  }

  function _setSolverClass(_odeName, _engine) {
    var ode = _getODE(_odeName);
    if (ode===null) return;
    if (!_engine.setODE) {
      var classname = _engine.toLowerCase();
      if      (classname.indexOf("boga")>=0)   _engine = EJSS_ODE_SOLVERS.bogackiShampine23;
      else if (classname.indexOf("cash")>=0)   _engine = EJSS_ODE_SOLVERS.cashKarp45;
      else if (classname.indexOf("dopri5")>=0) _engine = EJSS_ODE_SOLVERS.dopri5;
      else if (classname.indexOf("dopri8")>=0) _engine = EJSS_ODE_SOLVERS.dopri853;
      else if (classname.indexOf("richa")>=0)  _engine = EJSS_ODE_SOLVERS.eulerRichardson;
      else if (classname.indexOf("euler")>=0)  _engine = EJSS_ODE_SOLVERS.euler;
      else if (classname.indexOf("fehlberg87")>=0) _engine = EJSS_ODE_SOLVERS.fehlberg87;
      else if (classname.indexOf("fehlberg8")>=0)  _engine = EJSS_ODE_SOLVERS.fehlberg8;
      else if (classname.indexOf("radau")>=0)   _engine = EJSS_ODE_SOLVERS.radau5;
      else if (classname.indexOf("runge")>=0)  _engine = EJSS_ODE_SOLVERS.rungeKutta4;
      else if (classname.indexOf("rk4")>=0)    _engine = EJSS_ODE_SOLVERS.rungeKutta4;
      else if (classname.indexOf("verlet")>=0) _engine = EJSS_ODE_SOLVERS.velocityVerlet;
    }
    if (_engine) ode.setSolverClass(_engine);
  }

  function _ODE_evolution1() {
    var __odeSelf = {};
    var __eventSolver;
    var __solverClass = EJSS_ODE_SOLVERS.cashKarp45;
    var __state=[];
    var __ignoreErrors=false;
    var __mustInitialize=true;
    var __isEnabled=true;
    var __mustUserReinitialize=false;
    var __mustReinitialize=true;


    __odeSelf._getOdeVars = function (){ return["t"]};

    __odeSelf.setSolverClass = function(__aSolverClass) {
      __solverClass = __aSolverClass;
      __instantiateSolver();
    };

    function __instantiateSolver() {
      __state=[];
      __pushState();
      __eventSolver = EJSS_ODE_SOLVERS.interpolatorEventSolver(__solverClass(),__odeSelf);
      __mustInitialize = true;
    }

    __odeSelf.setEnabled = function(_enabled) { __isEnabled = _enabled; };

    __odeSelf.getIndependentVariableValue = function() { return __eventSolver.getIndependentVariableValue(); };

    __odeSelf.getInternalStepSize = function() { return __eventSolver.getInternalStepSize(); };

    __odeSelf.isAccelerationIndependentOfVelocity = function() { return false; };

    __odeSelf.initializeSolver = function() {
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); return; }
      __pushState();
      __eventSolver.initialize(dt);
      __eventSolver.setBestInterpolation(false);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.removeAllEvents();
      for(k in userEvents1){__eventSolver.addEvent(userEvents1[k]);}
      __eventSolver.setEstimateFirstStep(false);
      __eventSolver.setEnableExceptions(false);
      __eventSolver.setTolerances(0.00001,0.00001);
      __mustReinitialize = true;
      __mustInitialize = false;
    };

    function __pushState() {
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        if (__state[__cIn]!=t) __mustReinitialize = true;
        __state[__cIn++] = t;
    }

    function __arraysChanged () {
      return false;
    }

    __odeSelf.getEventSolver = function() {
      return __eventSolver;
    };

    __odeSelf.resetSolver = function() {
      __mustUserReinitialize = true;
    };

    __odeSelf.automaticResetSolver = function() {
      __mustReinitialize = true;
    };

    function __errorAction () {
      if (__ignoreErrors) return;
      console.log (__eventSolver.getErrorMessage());
      _pause();
      // Make sure the solver is reinitialized;
      __mustReinitialize = true;
    }

    __odeSelf.step = function() { return __privateStep(false); };

    __odeSelf.solverStep = function() { return __privateStep(true); };

    function __privateStep(__takeMaximumStep) {
      if (!__isEnabled) return 0;
      if (dt===0) return 0;
      if (__mustInitialize) __odeSelf.initializeSolver();
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); }
      __eventSolver.setStepSize(dt);
      __eventSolver.setInternalStepSize(dt);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.setTolerances(0.00001,0.00001);
      __pushState();
      if (__mustUserReinitialize) { 
        __eventSolver.userReinitialize();
        __mustUserReinitialize = false;
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      else if (__mustReinitialize) { 
        __eventSolver.reinitialize();
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      var __stepTaken = __takeMaximumStep ? __eventSolver.maxStep() : __eventSolver.step();
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        t = __state[__cOut++];
      // Check for error
      if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      return __stepTaken;
    }

    __odeSelf.getState = function() { return __state; };

    __odeSelf.getRate = function(_aState,_aRate) {
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var t = _aState[__cOut++];
      // Compute the rate
        var __cRate=0;
        _aRate[__cRate++] = 1; // independent variable
        return _aRate;
    }; //end of getRate

    __odeSelf._addEvent = function(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent){
    var User_Event = function (userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent) {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return eventType; };

      _eventSelf.getRootFindingMethod = function() { return eventMethod; };

      _eventSelf.getMaxIterations = function() { return maxIter; };

      _eventSelf.getTolerance = function() { return eventTolerance; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var t = _aState[__cOut++];
      return eval(userCondition);
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        if (undefined != functions) eval(functions.toString());
        eval(userAction);
        return endAtEvent;
      }

      return _eventSelf;
    }; // End of event

   userEvents1.push(User_Event(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent));
   }

    __instantiateSolver();

    return __odeSelf;
  }

    _model._fontResized = function(iBase,iSize,iDelta) {
      _view._fontResized(iBase,iSize,iDelta);
  }; // end of _fontResized

  function _getViews() {
    var _viewsInfo = [];
    var _counter = 0;
    _viewsInfo[_counter++] = { name : "HtmlView Page", width : 800, height : 600 };
    return _viewsInfo;
  } // end of _getViews

  function _selectView(_viewNumber) {
    _view = null;
    _view = new lookangtemplate2_View(_topFrame,_viewNumber,_libraryPath,_codebasePath);
    var _view_super_reset = _view._reset;
    _view._reset = function() {
      _view_super_reset();
      switch(_viewNumber) {
        case -10 : break; // make Lint happy
        default :
        case 0:
          _view.fullscreen.linkProperty("Height",  function() { return changeOrientationfullscreen(); }, function(_v) { changeOrientationfullscreen() = _v; } ); // HtmlView Page linking property 'Height' for element 'fullscreen'
          _view.fullscreen.linkProperty("Width",  function() { return Width; }, function(_v) { Width = _v; } ); // HtmlView Page linking property 'Width' for element 'fullscreen'
          _view.playPauseButton2.setAction("OffClick", function(_data,_info) {
  text="paused";
  _pause();

}); // HtmlView Page setting action 'OffClick' for element 'playPauseButton2'
          _view.playPauseButton2.linkProperty("State",  function() { return _isPaused; } ); // HtmlView Page linking property 'State' for element 'playPauseButton2'
          _view.playPauseButton2.setAction("OnClick", function(_data,_info) {
  _play();
  text="playing";

}); // HtmlView Page setting action 'OnClick' for element 'playPauseButton2'
          _view.stepButton22.setAction("OnClick", function(_data,_info) {
  _step();

}); // HtmlView Page setting action 'OnClick' for element 'stepButton22'
          _view.stepButton2.setAction("OnClick", function(_data,_info) {
  _step();

}); // HtmlView Page setting action 'OnClick' for element 'stepButton2'
          _view.resetButton3.setAction("OnClick", function(_data,_info) {
  _initialize();

}); // HtmlView Page setting action 'OnClick' for element 'resetButton3'
          _view.plottingPanel.linkProperty("Height",  function() { return changeOrientation(); }, function(_v) { changeOrientation() = _v; } ); // HtmlView Page linking property 'Height' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("Width",  function() { return Width1; }, function(_v) { Width1 = _v; } ); // HtmlView Page linking property 'Width' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("MaximumY",  function() { return ymax; }, function(_v) { ymax = _v; } ); // HtmlView Page linking property 'MaximumY' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("MinimumY",  function() { return ymin; }, function(_v) { ymin = _v; } ); // HtmlView Page linking property 'MinimumY' for element 'plottingPanel'
          _view.plottingPanel.setAction("OnPress", function(_data,_info) {
  var position = _view.plottingPanel.getInteraction().getInteractionPoint();
  //x = position[0];
  //y = position[1];
  counter = counter+1;
  x[counter]=position[0];
  y[counter]=position[1];
  xmirror[counter]=-x[counter];
  ymirror[counter]=y[counter];

}); // HtmlView Page setting action 'OnPress' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("Visibility",  function() { return world===true; } ); // HtmlView Page linking property 'Visibility' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("TLMessage",  function() { return text; }, function(_v) { text = _v; } ); // HtmlView Page linking property 'TLMessage' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("BRMessage",  function() { return ", t = "+_view._format(t,"0.00")+ " s "; } ); // HtmlView Page linking property 'BRMessage' for element 'plottingPanel'
          break;
      } // end of switch
    }; // end of new reset

    _model.setView(_view);
    _model.reset();
    _view._enableEPub();
  } // end of _selectView

  _model.setAutoplay(false);
  _model.setFPS(20);
  _model.setStepsPerDisplay(1);
  _selectView(-1); // this includes _model.reset()
  return _model;
}

function lookangtemplate2_View (_topFrame,_viewNumber,_libraryPath,_codebasePath) {
  var _view;
  switch(_viewNumber) {
    case -10 : break; // make Lint happy
    default :
    case 0: _view = lookangtemplate2_View_0 (_topFrame); break;
  } // end of switch

  if (_codebasePath) _view._setResourcePath(_codebasePath);

  if (_libraryPath) _view._setLibraryPath(_libraryPath);


  return _view;
} // end of main function

function lookangtemplate2_View_0 (_topFrame) {
  var _view = EJSS_CORE.createView(_topFrame);

  _view._reset = function() {
    _view._clearAll();
    _view._addElement(EJSS_INTERFACE.panel,"fullscreen", _view._topFrame) // EJsS HtmlView.HtmlView Page: declaration of element 'fullscreen'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"control", _view.fullscreen) // EJsS HtmlView.HtmlView Page: declaration of element 'control'
      .setProperty("BorderWidth",1) // EJsS HtmlView.HtmlView Page: setting property 'BorderWidth' for element 'control'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controlPanel", _view.control) // EJsS HtmlView.HtmlView Page: declaration of element 'controlPanel'
      .setProperty("CSS",{"display":"inline"}) // EJsS HtmlView.HtmlView Page: setting property 'CSS' for element 'controlPanel'
      ;

    _view._addElement(EJSS_INTERFACE.twoStateButton,"playPauseButton2", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'playPauseButton2'
      .setProperty("TextOn","▶") // EJsS HtmlView.HtmlView Page: setting property 'TextOn' for element 'playPauseButton2'
      .setProperty("Tooltip","Play/Pause") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'playPauseButton2'
      .setProperty("TextOff","❚❚") // EJsS HtmlView.HtmlView Page: setting property 'TextOff' for element 'playPauseButton2'
      .setProperty("Font","normal normal 3.6vw ") // EJsS HtmlView.HtmlView Page: setting property 'Font' for element 'playPauseButton2'
      ;

    _view._addElement(EJSS_INTERFACE.button,"stepButton22", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'stepButton22'
      .setProperty("Text","⥆") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'stepButton22'
      .setProperty("Font","normal normal 3vw ") // EJsS HtmlView.HtmlView Page: setting property 'Font' for element 'stepButton22'
      ;

    _view._addElement(EJSS_INTERFACE.button,"stepButton2", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'stepButton2'
      .setProperty("Text","⥅") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'stepButton2'
      .setProperty("Font","normal normal 3vw ") // EJsS HtmlView.HtmlView Page: setting property 'Font' for element 'stepButton2'
      ;

    _view._addElement(EJSS_INTERFACE.button,"resetButton3", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'resetButton3'
      .setProperty("CSS",{   "transform":"scaleY(-1)"   }) // EJsS HtmlView.HtmlView Page: setting property 'CSS' for element 'resetButton3'
      .setProperty("Text","↩") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'resetButton3'
      .setProperty("Font","normal normal 3.5vw ") // EJsS HtmlView.HtmlView Page: setting property 'Font' for element 'resetButton3'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"panel", _view.fullscreen) // EJsS HtmlView.HtmlView Page: declaration of element 'panel'
      .setProperty("Height","100%") // EJsS HtmlView.HtmlView Page: setting property 'Height' for element 'panel'
      .setProperty("Width","100%") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'panel'
      ;

    _view._addElement(EJSS_DRAWING2D.plottingPanel,"plottingPanel", _view.panel) // EJsS HtmlView.HtmlView Page: declaration of element 'plottingPanel'
      .setProperty("Gutters",[0,0,0,50]) // EJsS HtmlView.HtmlView Page: setting property 'Gutters' for element 'plottingPanel'
      .setProperty("ShowAreaRectangle",false) // EJsS HtmlView.HtmlView Page: setting property 'ShowAreaRectangle' for element 'plottingPanel'
      .setProperty("YScalePrecision",0) // EJsS HtmlView.HtmlView Page: setting property 'YScalePrecision' for element 'plottingPanel'
      .setProperty("XFixedTick",0) // EJsS HtmlView.HtmlView Page: setting property 'XFixedTick' for element 'plottingPanel'
      .setProperty("Enabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Enabled' for element 'plottingPanel'
      .setProperty("MaximumX",5) // EJsS HtmlView.HtmlView Page: setting property 'MaximumX' for element 'plottingPanel'
      .setProperty("EnabledDragging","ENABLED_X") // EJsS HtmlView.HtmlView Page: setting property 'EnabledDragging' for element 'plottingPanel'
      .setProperty("YFixedTick",0) // EJsS HtmlView.HtmlView Page: setting property 'YFixedTick' for element 'plottingPanel'
      .setProperty("YAutoTicks",false) // EJsS HtmlView.HtmlView Page: setting property 'YAutoTicks' for element 'plottingPanel'
      .setProperty("MinimumX",-5) // EJsS HtmlView.HtmlView Page: setting property 'MinimumX' for element 'plottingPanel'
      .setProperty("XTickStep",1) // EJsS HtmlView.HtmlView Page: setting property 'XTickStep' for element 'plottingPanel'
      .setProperty("YTickStep",1) // EJsS HtmlView.HtmlView Page: setting property 'YTickStep' for element 'plottingPanel'
      .setProperty("AutoScaleY",false) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleY' for element 'plottingPanel'
      .setProperty("AutoScaleX",false) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleX' for element 'plottingPanel'
      .setProperty("XAutoTicks",false) // EJsS HtmlView.HtmlView Page: setting property 'XAutoTicks' for element 'plottingPanel'
      .setProperty("XScalePrecision",0) // EJsS HtmlView.HtmlView Page: setting property 'XScalePrecision' for element 'plottingPanel'
      ;

  };

  return _view;
}


//--><!]]></script>
  </head>
  <body>
    <div role="button" id="_topFrame" style="text-align:center"></div>
  <div id="metadata" class="metadata">
    <br />
    <div id="title_author">
      <hr />
      <b>Title and author:</b>
      <p>
      </p>
      <p>
      <img alt="author image" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/1authorlookangphoto5050.png" />
      <img alt="author image" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/01authorPacoEsquembre2011.png" />
      <img alt="author image" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/01authorFelix_J_Garcia_Clemente.png" />
 weelookang@gmail.com; Francisco Esquembre; Felix J. Garcia Clemente
      </p>
    </div>
    <hr />
    <p></p>
    <div id="copyright_message">
      <div class="cc_left"  style="float:left">&#169; 2018, weelookang@gmail.com; Francisco Esquembre; Felix J. Garcia Clemente.</div>
      <div class="cc_right" style="float:right">    Released under a <a rel="license" target="_blank" href="http://creativecommons.org/licenses/by-nc-sa/4.0/deed.en_US"> <img alt="Creative Commons Attribution-NonCommercial-ShareAlike" src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/images/cc_icon.png" /> </a> license.</div>
    </div>
  </div>
    <script type="text/javascript"><!--//--><![CDATA[//><!--
      var _model;
      var _scorm;
      window.addEventListener('load',
        function () { 
          _model =  new lookangtemplate2("_topFrame","file:/Users/lookang/Google%20Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/","file:/Users/lookang/Google%20Drive/PublicLawrence/workspace/source/EJSS/");
          if (typeof _isApp !== "undefined" && _isApp) _model.setRunAlways(true);
          TextResizeDetector.TARGET_ELEMENT_ID = '_topFrame';
          TextResizeDetector.USER_INIT_FUNC = function () {
            var iBase = TextResizeDetector.addEventListener(function(e,args) {
              _model._fontResized(args[0].iBase,args[0].iSize,args[0].iDelta);
              },null);
            _model._fontResized(iBase);
          };
          _model.onload();
        }, false);
    //--><!]]></script>
  </body>
</html>
