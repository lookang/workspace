<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Scalars and Vectors: Vector Addition by Graphical Method</title>
    <link rel="stylesheet"  type="text/css" href="file:///Users/lookang/Google Drive/PublicLawrence/workspace/output/_ejs_library/css/ejss.css" />
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_6.0_beta/bin/javascript/lib/scripts/common_script.js"></script>
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_6.0_beta/bin/javascript/lib/scripts/textresizedetector.js"></script>
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_6.0_beta/bin/javascript/lib/ejsS.v1.min.js"></script>
<script type="text/javascript"><!--//--><![CDATA[//><!--
/* _inputParameters: an object with different values for the model parameters */
function vectorsum05(_topFrame,_libraryPath,_codebasePath, _inputParameters) {
  var _model = EJSS_CORE.createAnimationLMS();
  var _view;
  var _isPlaying = false;
  var _isPaused = true;
  var _isMobile = (navigator===undefined) ? false : navigator.userAgent.match(/iPhone|iPad|iPod|Android|BlackBerry|Opera Mini|IEMobile/i);

var _stringProperties = {};
  var _tools = {
    showInputDialog : EJSS_INTERFACE.BoxPanel.showInputDialog,
    showOkDialog : EJSS_INTERFACE.BoxPanel.showOkDialog,
    showOkCancelDialog : EJSS_INTERFACE.BoxPanel.showOkCancelDialog,
    downloadText: EJSS_TOOLS.File.downloadText,
    uploadText: function(action) { EJSS_TOOLS.File.uploadText(_model,action); } 
  };

  function _play()  { _isPaused = false; _isPlaying = true;  _model.play();  }
  function _pause() { _isPaused = true;  _isPlaying = false; _model.pause(); }
  function _step()  { _pause();  _model.step(); }
  function _reset() { _model.reset();  _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); }
  _model._play  = _play;
  _model._pause = _pause;
  _model._step  = _step;
  _model._reset = _reset;
  function _update() { _model.update(); }
  function _initialize() { _model.initialize(); }
  function _setFPS(_fps) { _model.setFPS(_fps); }
  function _setDelay(_delay) { _model.setDelay(_delay); }
  function _setStepsPerDisplay(_spd) { _model.setStepsPerDisplay(_spd); }
  function _setUpdateView(_updateView) { _model.setUpdateView(_updateView); }
  function _setAutoplay(_auto) { _model.setAutoplay(_auto); }
  function _println(_message) { console.log(_message); }

  function _breakAfterThisPage() { _model.setShouldBreak(true); }

  function _resetSolvers() { if (_model.resetSolvers) _model.resetSolvers(); }

  function _saveText(name,type,content) { if (_model.saveText) _model.saveText(name,type,content); }

  function _saveState(name) { if (_model.saveState) _model.saveState(name); }

  function _saveImage(name,panelname) { if (_model.saveImage) _model.saveImage(name,panelname); }

  function _readState(url,type) { if (_model.readState) _model.readState(url,type); }

  function _readText(url,type,varname) { if (_model.readText) _model.readText(url,type,varname); }

  function _getStringProperty(propertyName) {
    var _value = _stringProperties[propertyName];
    if (_value===undefined) return propertyName;
    else return _value;
  }
  var __pagesEnabled = [];
  function _setPageEnabled(pageName,enabled) { __pagesEnabled[pageName] = enabled; }

  var range; // EjsS Model.Variables.coordinate.range
  var testrangex; // EjsS Model.Variables.coordinate.testrangex
  var testrangey; // EjsS Model.Variables.coordinate.testrangey
  var xmin; // EjsS Model.Variables.coordinate.xmin
  var xmax; // EjsS Model.Variables.coordinate.xmax
  var ymin; // EjsS Model.Variables.coordinate.ymin
  var ymax; // EjsS Model.Variables.coordinate.ymax
  var t; // EjsS Model.Variables.coordinate.t
  var dt; // EjsS Model.Variables.coordinate.dt
  var size; // EjsS Model.Variables.coordinate.size
  var label; // EjsS Model.Variables.coordinate.label
  var stroke; // EjsS Model.Variables.coordinate.stroke
  var pi; // EjsS Model.Variables.coordinate.pi
  var showComponent1; // EjsS Model.Variables.coordinate.showComponent1
  var showComponent2; // EjsS Model.Variables.coordinate.showComponent2
  var showComponent3; // EjsS Model.Variables.coordinate.showComponent3

  var l_play; // EjsS Model.Variables.language.l_play
  var l_pause; // EjsS Model.Variables.language.l_pause
  var l_reset; // EjsS Model.Variables.language.l_reset
  var l_init; // EjsS Model.Variables.language.l_init
  var l_showsum; // EjsS Model.Variables.language.l_showsum
  var l_size; // EjsS Model.Variables.language.l_size
  var selected; // EjsS Model.Variables.language.selected
  var selecteds; // EjsS Model.Variables.language.selecteds
  var l_componentnone; // EjsS Model.Variables.language.l_componentnone
  var l_component1; // EjsS Model.Variables.language.l_component1
  var l_component2; // EjsS Model.Variables.language.l_component2
  var l_component3; // EjsS Model.Variables.language.l_component3

  var nmax; // EjsS Model.Variables.basic.nmax
  var n; // EjsS Model.Variables.basic.n
  var n1; // EjsS Model.Variables.basic.n1
  var X; // EjsS Model.Variables.basic.X
  var Y; // EjsS Model.Variables.basic.Y
  var X2; // EjsS Model.Variables.basic.X2
  var Y2; // EjsS Model.Variables.basic.Y2
  var DX; // EjsS Model.Variables.basic.DX
  var DY; // EjsS Model.Variables.basic.DY
  var DXone; // EjsS Model.Variables.basic.DXone
  var DYone; // EjsS Model.Variables.basic.DYone
  var Dmag; // EjsS Model.Variables.basic.Dmag
  var Dmagone; // EjsS Model.Variables.basic.Dmagone
  var Dmagtwo; // EjsS Model.Variables.basic.Dmagtwo
  var Dmagthree; // EjsS Model.Variables.basic.Dmagthree
  var Dmagslider; // EjsS Model.Variables.basic.Dmagslider
  var angle; // EjsS Model.Variables.basic.angle
  var angleone; // EjsS Model.Variables.basic.angleone
  var angletwo; // EjsS Model.Variables.basic.angletwo
  var anglethree; // EjsS Model.Variables.basic.anglethree
  var angleslider; // EjsS Model.Variables.basic.angleslider
  var VX; // EjsS Model.Variables.basic.VX
  var midX; // EjsS Model.Variables.basic.midX
  var midY; // EjsS Model.Variables.basic.midY
  var VY; // EjsS Model.Variables.basic.VY
  var Xstartdotline; // EjsS Model.Variables.basic.Xstartdotline
  var Ystartdotline; // EjsS Model.Variables.basic.Ystartdotline
  var Xenddotline; // EjsS Model.Variables.basic.Xenddotline
  var Yenddotline; // EjsS Model.Variables.basic.Yenddotline
  var VIEW; // EjsS Model.Variables.basic.VIEW
  var VIEW2; // EjsS Model.Variables.basic.VIEW2
  var VIEW3; // EjsS Model.Variables.basic.VIEW3
  var VIEW4; // EjsS Model.Variables.basic.VIEW4
  var rVIEW; // EjsS Model.Variables.basic.rVIEW
  var clr; // EjsS Model.Variables.basic.clr
  var dragable; // EjsS Model.Variables.basic.dragable
  var changesize; // EjsS Model.Variables.basic.changesize
  var TX; // EjsS Model.Variables.basic.TX
  var TY; // EjsS Model.Variables.basic.TY
  var rTX; // EjsS Model.Variables.basic.rTX
  var rTY; // EjsS Model.Variables.basic.rTY
  var PX; // EjsS Model.Variables.basic.PX
  var PY; // EjsS Model.Variables.basic.PY
  var TEXT; // EjsS Model.Variables.basic.TEXT
  var dTEXT; // EjsS Model.Variables.basic.dTEXT
  var rText; // EjsS Model.Variables.basic.rText
  var angleTEXT; // EjsS Model.Variables.basic.angleTEXT
  var texti; // EjsS Model.Variables.basic.texti
  var time; // EjsS Model.Variables.basic.time
  var showsum; // EjsS Model.Variables.basic.showsum
  var zero; // EjsS Model.Variables.basic.zero

  var iOS; // EjsS Model.Variables.layout.iOS
  var iPad; // EjsS Model.Variables.layout.iPad
  var iPhone; // EjsS Model.Variables.layout.iPhone
  var Android; // EjsS Model.Variables.layout.Android
  var j; // EjsS Model.Variables.layout.j
  var text; // EjsS Model.Variables.layout.text
  var textsum; // EjsS Model.Variables.layout.textsum
  var Width; // EjsS Model.Variables.layout.Width
  var Height; // EjsS Model.Variables.layout.Height
  var Width1; // EjsS Model.Variables.layout.Width1
  var Width2; // EjsS Model.Variables.layout.Width2
  var xvst; // EjsS Model.Variables.layout.xvst
  var world; // EjsS Model.Variables.layout.world
  var graph; // EjsS Model.Variables.layout.graph
  var disabledworld; // EjsS Model.Variables.layout.disabledworld
  var disabled; // EjsS Model.Variables.layout.disabled

  var _privateOdesList;
  var _ODEi_evolution1;
  var userEvents1=[];

  _model.getOdes = function() { return [_ODEi_evolution1]; };

  _model.removeEvents = function(){
    userEvents1=[];
  };

  function _serialize() { return _model.serialize(); }

  _model._userSerialize = function() {
    return {
      range : range,
      testrangex : testrangex,
      testrangey : testrangey,
      xmin : xmin,
      xmax : xmax,
      ymin : ymin,
      ymax : ymax,
      t : t,
      dt : dt,
      size : size,
      label : label,
      stroke : stroke,
      pi : pi,
      showComponent1 : showComponent1,
      showComponent2 : showComponent2,
      showComponent3 : showComponent3,
      l_play : l_play,
      l_pause : l_pause,
      l_reset : l_reset,
      l_init : l_init,
      l_showsum : l_showsum,
      l_size : l_size,
      selected : selected,
      selecteds : selecteds,
      l_componentnone : l_componentnone,
      l_component1 : l_component1,
      l_component2 : l_component2,
      l_component3 : l_component3,
      nmax : nmax,
      n : n,
      n1 : n1,
      X : X,
      Y : Y,
      X2 : X2,
      Y2 : Y2,
      DX : DX,
      DY : DY,
      DXone : DXone,
      DYone : DYone,
      Dmag : Dmag,
      Dmagone : Dmagone,
      Dmagtwo : Dmagtwo,
      Dmagthree : Dmagthree,
      Dmagslider : Dmagslider,
      angle : angle,
      angleone : angleone,
      angletwo : angletwo,
      anglethree : anglethree,
      angleslider : angleslider,
      VX : VX,
      midX : midX,
      midY : midY,
      VY : VY,
      Xstartdotline : Xstartdotline,
      Ystartdotline : Ystartdotline,
      Xenddotline : Xenddotline,
      Yenddotline : Yenddotline,
      VIEW : VIEW,
      VIEW2 : VIEW2,
      VIEW3 : VIEW3,
      VIEW4 : VIEW4,
      rVIEW : rVIEW,
      clr : clr,
      dragable : dragable,
      changesize : changesize,
      TX : TX,
      TY : TY,
      rTX : rTX,
      rTY : rTY,
      PX : PX,
      PY : PY,
      TEXT : TEXT,
      dTEXT : dTEXT,
      rText : rText,
      angleTEXT : angleTEXT,
      texti : texti,
      time : time,
      showsum : showsum,
      zero : zero,
      iOS : iOS,
      iPad : iPad,
      iPhone : iPhone,
      Android : Android,
      j : j,
      text : text,
      textsum : textsum,
      Width : Width,
      Height : Height,
      Width1 : Width1,
      Width2 : Width2,
      xvst : xvst,
      world : world,
      graph : graph,
      disabledworld : disabledworld,
      disabled : disabled
    };
  };

  function _serializePublic() { return _model.serializePublic(); }

  _model._userSerializePublic = function() {
    return {

    };
  };

  _model._readParameters = function(json) {
    if(typeof json.range != "undefined") range = json.range;
    if(typeof json.testrangex != "undefined") testrangex = json.testrangex;
    if(typeof json.testrangey != "undefined") testrangey = json.testrangey;
    if(typeof json.xmin != "undefined") xmin = json.xmin;
    if(typeof json.xmax != "undefined") xmax = json.xmax;
    if(typeof json.ymin != "undefined") ymin = json.ymin;
    if(typeof json.ymax != "undefined") ymax = json.ymax;
    if(typeof json.t != "undefined") t = json.t;
    if(typeof json.dt != "undefined") dt = json.dt;
    if(typeof json.size != "undefined") size = json.size;
    if(typeof json.label != "undefined") label = json.label;
    if(typeof json.stroke != "undefined") stroke = json.stroke;
    if(typeof json.pi != "undefined") pi = json.pi;
    if(typeof json.showComponent1 != "undefined") showComponent1 = json.showComponent1;
    if(typeof json.showComponent2 != "undefined") showComponent2 = json.showComponent2;
    if(typeof json.showComponent3 != "undefined") showComponent3 = json.showComponent3;
    if(typeof json.l_play != "undefined") l_play = json.l_play;
    if(typeof json.l_pause != "undefined") l_pause = json.l_pause;
    if(typeof json.l_reset != "undefined") l_reset = json.l_reset;
    if(typeof json.l_init != "undefined") l_init = json.l_init;
    if(typeof json.l_showsum != "undefined") l_showsum = json.l_showsum;
    if(typeof json.l_size != "undefined") l_size = json.l_size;
    if(typeof json.selected != "undefined") selected = json.selected;
    if(typeof json.selecteds != "undefined") selecteds = json.selecteds;
    if(typeof json.l_componentnone != "undefined") l_componentnone = json.l_componentnone;
    if(typeof json.l_component1 != "undefined") l_component1 = json.l_component1;
    if(typeof json.l_component2 != "undefined") l_component2 = json.l_component2;
    if(typeof json.l_component3 != "undefined") l_component3 = json.l_component3;
    if(typeof json.nmax != "undefined") nmax = json.nmax;
    if(typeof json.n != "undefined") n = json.n;
    if(typeof json.n1 != "undefined") n1 = json.n1;
    if(typeof json.X != "undefined") X = json.X;
    if(typeof json.Y != "undefined") Y = json.Y;
    if(typeof json.X2 != "undefined") X2 = json.X2;
    if(typeof json.Y2 != "undefined") Y2 = json.Y2;
    if(typeof json.DX != "undefined") DX = json.DX;
    if(typeof json.DY != "undefined") DY = json.DY;
    if(typeof json.DXone != "undefined") DXone = json.DXone;
    if(typeof json.DYone != "undefined") DYone = json.DYone;
    if(typeof json.Dmag != "undefined") Dmag = json.Dmag;
    if(typeof json.Dmagone != "undefined") Dmagone = json.Dmagone;
    if(typeof json.Dmagtwo != "undefined") Dmagtwo = json.Dmagtwo;
    if(typeof json.Dmagthree != "undefined") Dmagthree = json.Dmagthree;
    if(typeof json.Dmagslider != "undefined") Dmagslider = json.Dmagslider;
    if(typeof json.angle != "undefined") angle = json.angle;
    if(typeof json.angleone != "undefined") angleone = json.angleone;
    if(typeof json.angletwo != "undefined") angletwo = json.angletwo;
    if(typeof json.anglethree != "undefined") anglethree = json.anglethree;
    if(typeof json.angleslider != "undefined") angleslider = json.angleslider;
    if(typeof json.VX != "undefined") VX = json.VX;
    if(typeof json.midX != "undefined") midX = json.midX;
    if(typeof json.midY != "undefined") midY = json.midY;
    if(typeof json.VY != "undefined") VY = json.VY;
    if(typeof json.Xstartdotline != "undefined") Xstartdotline = json.Xstartdotline;
    if(typeof json.Ystartdotline != "undefined") Ystartdotline = json.Ystartdotline;
    if(typeof json.Xenddotline != "undefined") Xenddotline = json.Xenddotline;
    if(typeof json.Yenddotline != "undefined") Yenddotline = json.Yenddotline;
    if(typeof json.VIEW != "undefined") VIEW = json.VIEW;
    if(typeof json.VIEW2 != "undefined") VIEW2 = json.VIEW2;
    if(typeof json.VIEW3 != "undefined") VIEW3 = json.VIEW3;
    if(typeof json.VIEW4 != "undefined") VIEW4 = json.VIEW4;
    if(typeof json.rVIEW != "undefined") rVIEW = json.rVIEW;
    if(typeof json.clr != "undefined") clr = json.clr;
    if(typeof json.dragable != "undefined") dragable = json.dragable;
    if(typeof json.changesize != "undefined") changesize = json.changesize;
    if(typeof json.TX != "undefined") TX = json.TX;
    if(typeof json.TY != "undefined") TY = json.TY;
    if(typeof json.rTX != "undefined") rTX = json.rTX;
    if(typeof json.rTY != "undefined") rTY = json.rTY;
    if(typeof json.PX != "undefined") PX = json.PX;
    if(typeof json.PY != "undefined") PY = json.PY;
    if(typeof json.TEXT != "undefined") TEXT = json.TEXT;
    if(typeof json.dTEXT != "undefined") dTEXT = json.dTEXT;
    if(typeof json.rText != "undefined") rText = json.rText;
    if(typeof json.angleTEXT != "undefined") angleTEXT = json.angleTEXT;
    if(typeof json.texti != "undefined") texti = json.texti;
    if(typeof json.time != "undefined") time = json.time;
    if(typeof json.showsum != "undefined") showsum = json.showsum;
    if(typeof json.zero != "undefined") zero = json.zero;
    if(typeof json.iOS != "undefined") iOS = json.iOS;
    if(typeof json.iPad != "undefined") iPad = json.iPad;
    if(typeof json.iPhone != "undefined") iPhone = json.iPhone;
    if(typeof json.Android != "undefined") Android = json.Android;
    if(typeof json.j != "undefined") j = json.j;
    if(typeof json.text != "undefined") text = json.text;
    if(typeof json.textsum != "undefined") textsum = json.textsum;
    if(typeof json.Width != "undefined") Width = json.Width;
    if(typeof json.Height != "undefined") Height = json.Height;
    if(typeof json.Width1 != "undefined") Width1 = json.Width1;
    if(typeof json.Width2 != "undefined") Width2 = json.Width2;
    if(typeof json.xvst != "undefined") xvst = json.xvst;
    if(typeof json.world != "undefined") world = json.world;
    if(typeof json.graph != "undefined") graph = json.graph;
    if(typeof json.disabledworld != "undefined") disabledworld = json.disabledworld;
    if(typeof json.disabled != "undefined") disabled = json.disabled;
  };

  _model._readParametersPublic = function(json) {
  };

  function _unserializePublic(json) { return _model.unserializePublic(json); }

  _model._userUnserializePublic = function(json) {
    _model._readParametersPublic(json);
   _resetSolvers();
   _model.update();
  };

  function _unserialize(json) { return _model.unserialize(json); }

  _model._userUnserialize = function(json) {
    _model._readParameters(json);
   _resetSolvers();
   _model.update();
  };

  _model.addToReset(function() {
    __pagesEnabled["menu"] = true;
    __pagesEnabled["scenes"] = true;
    __pagesEnabled["Init Page"] = true;
    __pagesEnabled["svgradial"] = true;
    __pagesEnabled["axes"] = true;
    __pagesEnabled["Evol Page"] = true;
    __pagesEnabled["Event"] = true;
    __pagesEnabled["FixRel Page"] = true;
    __pagesEnabled["Component3dotline"] = true;
  });

  _model.addToReset(function() {
    range = 200; // EjsS Model.Variables.coordinate.range
    testrangex = 20; // EjsS Model.Variables.coordinate.testrangex
    testrangey = 20; // EjsS Model.Variables.coordinate.testrangey
    xmin = -range/2; // EjsS Model.Variables.coordinate.xmin
    xmax = range/2; // EjsS Model.Variables.coordinate.xmax
    ymin = -range/2; // EjsS Model.Variables.coordinate.ymin
    ymax = range/2; // EjsS Model.Variables.coordinate.ymax
    t = 0.0; // EjsS Model.Variables.coordinate.t
    dt = 0.05; // EjsS Model.Variables.coordinate.dt
    size = range/40; // EjsS Model.Variables.coordinate.size
    label = "play"; // EjsS Model.Variables.coordinate.label
    stroke = 1; // EjsS Model.Variables.coordinate.stroke
    pi = Math.PI; // EjsS Model.Variables.coordinate.pi
    showComponent1 = false; // EjsS Model.Variables.coordinate.showComponent1
    showComponent2 = false; // EjsS Model.Variables.coordinate.showComponent2
    showComponent3 = false; // EjsS Model.Variables.coordinate.showComponent3
  });

  _model.addToReset(function() {
    l_play = "play"; // EjsS Model.Variables.language.l_play
    l_pause = "pause"; // EjsS Model.Variables.language.l_pause
    l_reset = "reset"; // EjsS Model.Variables.language.l_reset
    l_init = "initialize"; // EjsS Model.Variables.language.l_init
    l_showsum = "show sum"; // EjsS Model.Variables.language.l_showsum
    l_size = "change size"; // EjsS Model.Variables.language.l_size
    selected = new Array(1); // EjsS Model.Variables.language.selected
    (function () {
      var _i0;
      for (_i0=0; _i0<1; _i0+=1) {  // EjsS Model.Variables.language.selected
        selected[_i0] = "None";  // EjsS Model.Variables.language.selected
      }
    }());
    selecteds = new Array(1); // EjsS Model.Variables.language.selecteds
    (function () {
      var _i0;
      for (_i0=0; _i0<1; _i0+=1) {  // EjsS Model.Variables.language.selecteds
        selecteds[_i0] = "Examples by Mr Ezzy Chan";  // EjsS Model.Variables.language.selecteds
      }
    }());
    l_componentnone = "None"; // EjsS Model.Variables.language.l_componentnone
    l_component1 = "component style 1"; // EjsS Model.Variables.language.l_component1
    l_component2 = "component style 2"; // EjsS Model.Variables.language.l_component2
    l_component3 = "component style 3"; // EjsS Model.Variables.language.l_component3
  });

  _model.addToReset(function() {
    nmax = 10; // EjsS Model.Variables.basic.nmax
    n = 3; // EjsS Model.Variables.basic.n
    n1 = n-1; // EjsS Model.Variables.basic.n1
    X = new Array(nmax); // EjsS Model.Variables.basic.X
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.X
        X[_i0] = 0.0;  // EjsS Model.Variables.basic.X
      }
    }());
    Y = new Array(nmax); // EjsS Model.Variables.basic.Y
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.Y
        Y[_i0] = 0.0;  // EjsS Model.Variables.basic.Y
      }
    }());
    X2 = new Array(nmax); // EjsS Model.Variables.basic.X2
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.X2
        X2[_i0] = 0.0;  // EjsS Model.Variables.basic.X2
      }
    }());
    Y2 = new Array(nmax); // EjsS Model.Variables.basic.Y2
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.Y2
        Y2[_i0] = 0.0;  // EjsS Model.Variables.basic.Y2
      }
    }());
    DX = new Array(nmax); // EjsS Model.Variables.basic.DX
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.DX
        DX[_i0] = 0.4*range*(0.8*Math.random()-0.2);  // EjsS Model.Variables.basic.DX
      }
    }());
    DY = new Array(nmax); // EjsS Model.Variables.basic.DY
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.DY
        DY[_i0] = 0.4*range*(0.8*Math.random()-0.2);  // EjsS Model.Variables.basic.DY
      }
    }());
    DXone = 0; // EjsS Model.Variables.basic.DXone
    DYone = 0; // EjsS Model.Variables.basic.DYone
    Dmag = new Array(nmax); // EjsS Model.Variables.basic.Dmag
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.Dmag
        Dmag[_i0] = 0.0;  // EjsS Model.Variables.basic.Dmag
      }
    }());
    Dmagone = 0; // EjsS Model.Variables.basic.Dmagone
    Dmagtwo = 0; // EjsS Model.Variables.basic.Dmagtwo
    Dmagthree = 0; // EjsS Model.Variables.basic.Dmagthree
    Dmagslider = new Array(nmax); // EjsS Model.Variables.basic.Dmagslider
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.Dmagslider
        Dmagslider[_i0] = 0.0;  // EjsS Model.Variables.basic.Dmagslider
      }
    }());
    angle = new Array(nmax); // EjsS Model.Variables.basic.angle
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.angle
        angle[_i0] = 0.0;  // EjsS Model.Variables.basic.angle
      }
    }());
    angleone = 0; // EjsS Model.Variables.basic.angleone
    angletwo = 0; // EjsS Model.Variables.basic.angletwo
    anglethree = 0; // EjsS Model.Variables.basic.anglethree
    angleslider = new Array(nmax); // EjsS Model.Variables.basic.angleslider
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.angleslider
        angleslider[_i0] = 0.0;  // EjsS Model.Variables.basic.angleslider
      }
    }());
    VX = new Array(nmax); // EjsS Model.Variables.basic.VX
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.VX
        VX[_i0] = 0.0;  // EjsS Model.Variables.basic.VX
      }
    }());
    midX = new Array(nmax); // EjsS Model.Variables.basic.midX
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.midX
        midX[_i0] = 0.0;  // EjsS Model.Variables.basic.midX
      }
    }());
    midY = new Array(nmax); // EjsS Model.Variables.basic.midY
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.midY
        midY[_i0] = 0.0;  // EjsS Model.Variables.basic.midY
      }
    }());
    VY = new Array(nmax); // EjsS Model.Variables.basic.VY
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.VY
        VY[_i0] = 0.0;  // EjsS Model.Variables.basic.VY
      }
    }());
    Xstartdotline = new Array(nmax); // EjsS Model.Variables.basic.Xstartdotline
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.Xstartdotline
        Xstartdotline[_i0] = 0.0;  // EjsS Model.Variables.basic.Xstartdotline
      }
    }());
    Ystartdotline = new Array(nmax); // EjsS Model.Variables.basic.Ystartdotline
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.Ystartdotline
        Ystartdotline[_i0] = 0.0;  // EjsS Model.Variables.basic.Ystartdotline
      }
    }());
    Xenddotline = new Array(nmax); // EjsS Model.Variables.basic.Xenddotline
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.Xenddotline
        Xenddotline[_i0] = 0.0;  // EjsS Model.Variables.basic.Xenddotline
      }
    }());
    Yenddotline = new Array(nmax); // EjsS Model.Variables.basic.Yenddotline
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.Yenddotline
        Yenddotline[_i0] = 0.0;  // EjsS Model.Variables.basic.Yenddotline
      }
    }());
    VIEW = new Array(nmax); // EjsS Model.Variables.basic.VIEW
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.VIEW
        VIEW[_i0] = true;  // EjsS Model.Variables.basic.VIEW
      }
    }());
    VIEW2 = new Array(nmax); // EjsS Model.Variables.basic.VIEW2
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.VIEW2
        VIEW2[_i0] = false;  // EjsS Model.Variables.basic.VIEW2
      }
    }());
    VIEW3 = new Array(nmax); // EjsS Model.Variables.basic.VIEW3
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.VIEW3
        VIEW3[_i0] = false;  // EjsS Model.Variables.basic.VIEW3
      }
    }());
    VIEW4 = new Array(nmax); // EjsS Model.Variables.basic.VIEW4
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.VIEW4
        VIEW4[_i0] = false;  // EjsS Model.Variables.basic.VIEW4
      }
    }());
    rVIEW = false; // EjsS Model.Variables.basic.rVIEW
    clr = new Array(nmax); // EjsS Model.Variables.basic.clr
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.clr
        clr[_i0] = "";  // EjsS Model.Variables.basic.clr
      }
    }());
    dragable = new Array(nmax); // EjsS Model.Variables.basic.dragable
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.dragable
        dragable[_i0] = false;  // EjsS Model.Variables.basic.dragable
      }
    }());
    changesize = new Array(nmax); // EjsS Model.Variables.basic.changesize
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.changesize
        changesize[_i0] = false;  // EjsS Model.Variables.basic.changesize
      }
    }());
    TX = new Array(nmax); // EjsS Model.Variables.basic.TX
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.TX
        TX[_i0] = 0;  // EjsS Model.Variables.basic.TX
      }
    }());
    TY = new Array(nmax); // EjsS Model.Variables.basic.TY
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.TY
        TY[_i0] = 0;  // EjsS Model.Variables.basic.TY
      }
    }());
    rTX = 0; // EjsS Model.Variables.basic.rTX
    rTY = 0; // EjsS Model.Variables.basic.rTY
    PX = new Array(nmax); // EjsS Model.Variables.basic.PX
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.PX
        PX[_i0] = 0.0;  // EjsS Model.Variables.basic.PX
      }
    }());
    PY = new Array(nmax); // EjsS Model.Variables.basic.PY
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.PY
        PY[_i0] = 0.0;  // EjsS Model.Variables.basic.PY
      }
    }());
    TEXT = ["R","V₁","V₂","V₃","D","E","F","G","H","I"]; // EjsS Model.Variables.basic.TEXT
    dTEXT = new Array(nmax); // EjsS Model.Variables.basic.dTEXT
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.dTEXT
        dTEXT[_i0] = "";  // EjsS Model.Variables.basic.dTEXT
      }
    }());
    rText = ""; // EjsS Model.Variables.basic.rText
    angleTEXT = new Array(nmax); // EjsS Model.Variables.basic.angleTEXT
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.angleTEXT
        angleTEXT[_i0] = "";  // EjsS Model.Variables.basic.angleTEXT
      }
    }());
    texti = new Array(nmax); // EjsS Model.Variables.basic.texti
    (function () {
      var _i0;
      for (_i0=0; _i0<nmax; _i0+=1) {  // EjsS Model.Variables.basic.texti
        texti[_i0] = "";  // EjsS Model.Variables.basic.texti
      }
    }());
    time = 5; // EjsS Model.Variables.basic.time
    zero = 0; // EjsS Model.Variables.basic.zero
  });

  _model.addToReset(function() {
    iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream; // EjsS Model.Variables.layout.iOS
    iPad = /iPad/.test(navigator.userAgent) && !window.MSStream; // EjsS Model.Variables.layout.iPad
    iPhone = /iPhone|iPod/.test(navigator.userAgent) && !window.MSStream; // EjsS Model.Variables.layout.iPhone
    Android = /Android|android/i.test(navigator.userAgent); // EjsS Model.Variables.layout.Android
    j = 0; // EjsS Model.Variables.layout.j
    text = "drag vector centre to move, drag arrowhead to resize and click play"; // EjsS Model.Variables.layout.text
    textsum = ""; // EjsS Model.Variables.layout.textsum
    Width = (_isEPub)?"400":"100%"; // EjsS Model.Variables.layout.Width
    Height = (_isEPub)?"500":"100%"; // EjsS Model.Variables.layout.Height
    Width1 = "100%"; // EjsS Model.Variables.layout.Width1
    Width2 = "0%"; // EjsS Model.Variables.layout.Width2
    xvst = true; // EjsS Model.Variables.layout.xvst
    world = true; // EjsS Model.Variables.layout.world
    graph = true; // EjsS Model.Variables.layout.graph
    disabledworld = false; // EjsS Model.Variables.layout.disabledworld
    disabled = false; // EjsS Model.Variables.layout.disabled
  });

  if (_inputParameters) {
    _inputParameters = _model.parseInputParameters(_inputParameters);
    if (_inputParameters) _model.addToReset(function() { _model._readParameters(_inputParameters); });
  }

  _model.addToReset(function() {
    _privateOdesList=[];
    _ODEi_evolution1 = _ODE_evolution1();
    _privateOdesList.push(_ODEi_evolution1);
  });

  _model.addToReset(function() {
    _model.setAutoplay(false);
    _model.setPauseOnPageExit(true);
    _model.setFPS(20);
    _model.setStepsPerDisplay(5);
  });

  function rgb(r, g, b) {  // > CustomCode.rgb:1
    return "rgb("+r+","+g+","+b+")";  // > CustomCode.rgb:2
  }  // > CustomCode.rgb:3

  function showsumfunction() {  // > CustomCode.showsumfunction:1
    //resultant start X-Y coordinates  // > CustomCode.showsumfunction:2
    X[0]=X[1];  // > CustomCode.showsumfunction:3
    Y[0]=Y[1];   // > CustomCode.showsumfunction:4
      // > CustomCode.showsumfunction:5
    //resultant end X-Y coordinates  // > CustomCode.showsumfunction:6
    X2[0]=X[0]+DX[0];  // > CustomCode.showsumfunction:7
    Y2[0]=Y[0]+DY[0];  // > CustomCode.showsumfunction:8
      // > CustomCode.showsumfunction:9
    //resultant display text X-Y position  // > CustomCode.showsumfunction:10
    rTX=X[0]+DX[0]/2;  // > CustomCode.showsumfunction:11
    rTY=Y[0]+DY[0]/2;  // > CustomCode.showsumfunction:12
    //resultant display toggle  // > CustomCode.showsumfunction:13
    VIEW[0] = showsum; //arrow  // > CustomCode.showsumfunction:14
    rVIEW = showsum; //text  // > CustomCode.showsumfunction:15
      // > CustomCode.showsumfunction:16
    dragaction();  // > CustomCode.showsumfunction:17
  }  // > CustomCode.showsumfunction:18

  function dragaction () {  // > CustomCode.dragaction:1
    //resultant start X-Y coordinates  // > CustomCode.dragaction:2
    X[0]=X[1];  // > CustomCode.dragaction:3
    Y[0]=Y[1];  // > CustomCode.dragaction:4
      // > CustomCode.dragaction:5
    //resultant delta X-Y coordinates initialised to zero  // > CustomCode.dragaction:6
    DX[0]=0;  // > CustomCode.dragaction:7
    DY[0]=0;  // > CustomCode.dragaction:8
      // > CustomCode.dragaction:9
    //to make integers values when drag not working  // > CustomCode.dragaction:10
    DX[0] = Math.round(DX[0] );  // > CustomCode.dragaction:11
  DY[0] = Math.round(DY[0] );  // > CustomCode.dragaction:12
  DX[1] = Math.round(DX[1] );  // > CustomCode.dragaction:13
  DY[1] = Math.round(DY[1] );  // > CustomCode.dragaction:14
      // > CustomCode.dragaction:15
    // sync sliders  // > CustomCode.dragaction:16
    Dmagone = Math.sqrt(DX[1]*DX[1]+DY[1]*DY[1]);  // > CustomCode.dragaction:17
  angleone = 180/pi*Math.atan2(DY[1],DX[1]);  // > CustomCode.dragaction:18
  Dmagtwo = Math.sqrt(DX[2]*DX[2]+DY[2]*DY[2]);  // > CustomCode.dragaction:19
  angletwo = 180/pi*Math.atan2(DY[2],DX[2]);  // > CustomCode.dragaction:20
  Dmagthree = Math.sqrt(DX[3]*DX[3]+DY[3]*DY[3]);  // > CustomCode.dragaction:21
  anglethree = 180/pi*Math.atan2(DY[3],DX[3]);  // > CustomCode.dragaction:22
    for(var i=1;i<n;i++) {  // > CustomCode.dragaction:23
      //sum of all vectors' delta X-Y coordinates to obtain resultant delta X-Y coordinates  // > CustomCode.dragaction:24
      DX[0]+=DX[i];  // > CustomCode.dragaction:25
      DY[0]+=DY[i];  // > CustomCode.dragaction:26
      //vector display text X-Y position  // > CustomCode.dragaction:27
      TX[i]=X[i]+DX[i]/2;  // > CustomCode.dragaction:28
      TY[i]=Y[i]+DY[i]/2;  // > CustomCode.dragaction:29
    }  // > CustomCode.dragaction:30
      // > CustomCode.dragaction:31
    //resultant display text X-Y position  // > CustomCode.dragaction:32
    rTX=X[0]+DX[0]/2;  // > CustomCode.dragaction:33
    rTY=Y[0]+DY[0]/2;  // > CustomCode.dragaction:34
      // > CustomCode.dragaction:35
    setup();  // > CustomCode.dragaction:36
      // > CustomCode.dragaction:37
    //reset current time to zero  // > CustomCode.dragaction:38
    t=0;  // > CustomCode.dragaction:39
  }  // > CustomCode.dragaction:40

  var x; // need to define  // > CustomCode.setup:1
  var y;  // > CustomCode.setup:2
  function setup() {  // > CustomCode.setup:3
  //set to 1st vector's X-Y coordinates  // > CustomCode.setup:4
    x=X[1]+DX[1];  // > CustomCode.setup:5
    y=Y[1]+DY[1];  // > CustomCode.setup:6
  //simulate animation through change of X-Y coordinates values for 2nd vectors onwards  // > CustomCode.setup:7
    for(var i=2;i<n;i++) {  // > CustomCode.setup:8
      VX[i]=(x-X[i])/time;  // > CustomCode.setup:9
      VY[i]=(y-Y[i])/time;  // > CustomCode.setup:10
      x=x+DX[i];  // > CustomCode.setup:11
      y=y+DY[i];  // > CustomCode.setup:12
    }  // > CustomCode.setup:13
    //t=0;  // > CustomCode.setup:14
    //if(label==="pause")_play();  // > CustomCode.setup:15
  }  // > CustomCode.setup:16

  function showComponentfunction () {  // > CustomCode.showComponent:1
    var i;  // > CustomCode.showComponent:2
  /*  if (selectedcomponent === l_component1){  // > CustomCode.showComponent:3
        showComponent1 = true;  // > CustomCode.showComponent:4
        showComponent2 = showComponent3 = false;  // > CustomCode.showComponent:5
    }  // > CustomCode.showComponent:6
    else if (selectedcomponent === l_component2){  // > CustomCode.showComponent:7
        showComponent2 = true;  // > CustomCode.showComponent:8
        showComponent1 = showComponent3 = false;  // > CustomCode.showComponent:9
    }  // > CustomCode.showComponent:10
    else if (selectedcomponent === l_component3){  // > CustomCode.showComponent:11
        showComponent3 = true;  // > CustomCode.showComponent:12
        showComponent1 = showComponent2 = false;  // > CustomCode.showComponent:13
    }  // > CustomCode.showComponent:14
    else   // > CustomCode.showComponent:15
        showComponent1 = showComponent2 = showComponent3 = false;  // > CustomCode.showComponent:16
  */  // > CustomCode.showComponent:17
  for( i=1;i<n;i++){  // > CustomCode.showComponent:18
        VIEW2[i]=showComponent1;  // > CustomCode.showComponent:19
        VIEW3[i]=showComponent2;       // > CustomCode.showComponent:20
        VIEW4[i]=showComponent3;  // > CustomCode.showComponent:21
    }  // > CustomCode.showComponent:22
  }  // > CustomCode.showComponent:23

  function playpause () {  // > CustomCode.playpause:1
    if(label===l_play) {  // > CustomCode.playpause:2
      label=l_pause;  // > CustomCode.playpause:3
      _play();  // > CustomCode.playpause:4
    } else {  // > CustomCode.playpause:5
      label=l_play;  // > CustomCode.playpause:6
      _pause();  // > CustomCode.playpause:7
      setup();  // > CustomCode.playpause:8
    }  // > CustomCode.playpause:9
  }  // > CustomCode.playpause:10

  //https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Using_full_screen_mode  // > CustomCode.fullscreen:1
  // does not work for iOS   // > CustomCode.fullscreen:2
  /*jslint browser:true */  // > CustomCode.fullscreen:3
  function toggleFullScreen() {  // > CustomCode.fullscreen:4
    if (!document.fullscreenElement &&    // alternative standard method  // > CustomCode.fullscreen:5
        !document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement ) {  // current working methods  // > CustomCode.fullscreen:6
      if (document.documentElement.requestFullscreen) {  // > CustomCode.fullscreen:7
        document.documentElement.requestFullscreen();  // > CustomCode.fullscreen:8
      } else if (document.documentElement.msRequestFullscreen) {  // > CustomCode.fullscreen:9
        document.documentElement.msRequestFullscreen();  // > CustomCode.fullscreen:10
      } else if (document.documentElement.mozRequestFullScreen) {  // > CustomCode.fullscreen:11
        document.documentElement.mozRequestFullScreen();  // > CustomCode.fullscreen:12
      } else if (document.documentElement.webkitRequestFullscreen) {  // > CustomCode.fullscreen:13
        document.documentElement.webkitRequestFullscreen();  // > CustomCode.fullscreen:14
      }  // > CustomCode.fullscreen:15
    } else {  // > CustomCode.fullscreen:16
      if (document.exitFullscreen) {  // > CustomCode.fullscreen:17
        document.exitFullscreen();  // > CustomCode.fullscreen:18
      } else if (document.msExitFullscreen) {  // > CustomCode.fullscreen:19
        document.msExitFullscreen();  // > CustomCode.fullscreen:20
      } else if (document.mozCancelFullScreen) {  // > CustomCode.fullscreen:21
        document.mozCancelFullScreen();  // > CustomCode.fullscreen:22
      } else if (document.webkitExitFullscreen) {  // > CustomCode.fullscreen:23
        document.webkitExitFullscreen();  // > CustomCode.fullscreen:24
      }  // > CustomCode.fullscreen:25
    }  // > CustomCode.fullscreen:26
  }  // > CustomCode.fullscreen:27

  function changeOrientation() {  // > CustomCode.changeOrientation:1
          switch (window.orientation) {  // > CustomCode.changeOrientation:2
              case 0:  // > CustomCode.changeOrientation:3
                  this.screenOrientation = 'portrait';  // > CustomCode.changeOrientation:4
                  if (iPad){  // > CustomCode.changeOrientation:5
                  return Math.max(window.screen.width,window.screen.height)*0.8;  // > CustomCode.changeOrientation:6
                  }  // > CustomCode.changeOrientation:7
                  else if (iPhone){  // > CustomCode.changeOrientation:8
                  return Math.max(window.screen.width,window.screen.height)*0.7;  // > CustomCode.changeOrientation:9
                  }  // > CustomCode.changeOrientation:10
                  else if (Android&&parent.cordova){  // > CustomCode.changeOrientation:11
                    return Math.max(window.innerWidth,window.innerHeight)*0.8;  // > CustomCode.changeOrientation:12
                    }  // > CustomCode.changeOrientation:13
                  else {  // > CustomCode.changeOrientation:14
                    return Math.max(window.innerWidth,window.innerHeight)*0.85;  // > CustomCode.changeOrientation:15
                    }  // > CustomCode.changeOrientation:16
                  break;  // > CustomCode.changeOrientation:17
              case 90:  // > CustomCode.changeOrientation:18
                  this.screenOrientation = 'landscape';  // > CustomCode.changeOrientation:19
                  if (iPad){  // > CustomCode.changeOrientation:20
                    return Math.min(window.screen.width,window.screen.height)*0.8;  // > CustomCode.changeOrientation:21
                  }  // > CustomCode.changeOrientation:22
                  else if (iPhone){  // > CustomCode.changeOrientation:23
                    return Math.min(window.screen.width,window.screen.height)*0.7;  // > CustomCode.changeOrientation:24
                    }  // > CustomCode.changeOrientation:25
                  else if (Android&&parent.cordova){  // > CustomCode.changeOrientation:26
                    return Math.min(window.innerWidth,window.innerHeight)*0.8;  // > CustomCode.changeOrientation:27
                    }  // > CustomCode.changeOrientation:28
                    else {  // > CustomCode.changeOrientation:29
                    return Math.min(window.innerWidth,window.innerHeight)*0.85;  // > CustomCode.changeOrientation:30
                    }  // > CustomCode.changeOrientation:31
                    // > CustomCode.changeOrientation:32
                  break;  // > CustomCode.changeOrientation:33
              case 180:  // > CustomCode.changeOrientation:34
                  this.screenOrientation = 'portrait';  // > CustomCode.changeOrientation:35
                  if (iPad){  // > CustomCode.changeOrientation:36
                    return Math.max(window.screen.width,window.screen.height)*0.8;  // > CustomCode.changeOrientation:37
                 }  // > CustomCode.changeOrientation:38
                 else if (iPhone){  // > CustomCode.changeOrientation:39
                   return Math.max(window.screen.width,window.screen.height)*0.7;  // > CustomCode.changeOrientation:40
                   }  // > CustomCode.changeOrientation:41
                   else if (Android&&parent.cordova){  // > CustomCode.changeOrientation:42
                     return Math.max(window.innerWidth,window.innerHeight)*0.8;  // > CustomCode.changeOrientation:43
                     }  // > CustomCode.changeOrientation:44
                 else{  // > CustomCode.changeOrientation:45
                   return Math.max(window.innerWidth,window.innerHeight)*0.9;  // > CustomCode.changeOrientation:46
                   }  // > CustomCode.changeOrientation:47
                 break;  // > CustomCode.changeOrientation:48
              case -90:  // > CustomCode.changeOrientation:49
                  this.screenOrientation = 'landscape';  // > CustomCode.changeOrientation:50
                  if (iPad){  // > CustomCode.changeOrientation:51
                    return Math.min(window.screen.width,window.screen.height)*0.8;  // > CustomCode.changeOrientation:52
                  }  // > CustomCode.changeOrientation:53
                  else if (iPhone){  // > CustomCode.changeOrientation:54
                    return Math.min(window.screen.width,window.screen.height)*0.7;  // > CustomCode.changeOrientation:55
                    }  // > CustomCode.changeOrientation:56
                    else if (Android&&parent.cordova){  // > CustomCode.changeOrientation:57
                          return Math.min(window.innerWidth,window.innerHeight)*0.8;  // > CustomCode.changeOrientation:58
                      }  // > CustomCode.changeOrientation:59
                  else {  // > CustomCode.changeOrientation:60
                    return Math.min(window.innerWidth,window.innerHeight)*0.85;  // > CustomCode.changeOrientation:61
                    }  // > CustomCode.changeOrientation:62
                  break;  // > CustomCode.changeOrientation:63
              default:  // > CustomCode.changeOrientation:64
                  this.screenOrientation = 'unknown';  // > CustomCode.changeOrientation:65
           //       return (iPad)?""+(window.screen.width+window.screen.height)*0.4:((iPhone)?""+window.screen.width:_view._format(window.innerHeight*0.9,"0"));  // > CustomCode.changeOrientation:66
         return window.innerHeight*0.85;  // > CustomCode.changeOrientation:67
         }  // > CustomCode.changeOrientation:68
      }  // > CustomCode.changeOrientation:69

  _model.addToInitialization(function() {
    if (!__pagesEnabled["menu"]) return;
    if ( selected[0]==="none"){  // > Initialization.menu:1
     showComponent1 = false;  // > Initialization.menu:2
    showComponent2 = false;  // > Initialization.menu:3
    showComponent3 = false;  // > Initialization.menu:4
    showComponentfunction();  // > Initialization.menu:5
      }  // > Initialization.menu:6
    else if ( selected[0]==="component style 1"){  // > Initialization.menu:7
    showComponent1 = true;  // > Initialization.menu:8
    showComponent2 = false;  // > Initialization.menu:9
    showComponent3 = false;  // > Initialization.menu:10
    showComponentfunction();  // > Initialization.menu:11
      }  // > Initialization.menu:12
      else if ( selected[0]==="component style 2"){  // > Initialization.menu:13
    showComponent1 = false;  // > Initialization.menu:14
    showComponent2 = true;  // > Initialization.menu:15
    showComponent3 = false;  // > Initialization.menu:16
    showComponentfunction();  // > Initialization.menu:17
      }  // > Initialization.menu:18
      else if ( selected[0]==="component style 3"){  // > Initialization.menu:19
    showComponent1 = false;  // > Initialization.menu:20
    showComponent2 = false;  // > Initialization.menu:21
    showComponent3 = true;  // > Initialization.menu:22
    showComponentfunction();  // > Initialization.menu:23
      }  // > Initialization.menu:24
  });

  _model.addToInitialization(function() {
    if (!__pagesEnabled["scenes"]) return;
    if ( selecteds[0]==="|V₁|=120,ϑ₁=60°,|V₂|=80,ϑ₂=105°"){  // > Initialization.scenes:1
    n1=2;  // > Initialization.scenes:2
    DX[1]=120*Math.cos(60/180*pi);  // > Initialization.scenes:3
    DY[1]=120*Math.sin(60/180*pi);  // > Initialization.scenes:4
    DX[2]=80*Math.cos(105/180*pi);  // > Initialization.scenes:5
    DY[2]=80*Math.sin(105/180*pi);  // > Initialization.scenes:6
    // sync sliders  // > Initialization.scenes:7
      Dmagone = Math.sqrt(DX[1]*DX[1]+DY[1]*DY[1]);  // > Initialization.scenes:8
    angleone = 180/pi*Math.atan2(DY[1],DX[1]);  // > Initialization.scenes:9
    Dmagtwo = Math.sqrt(DX[2]*DX[2]+DY[2]*DY[2]);  // > Initialization.scenes:10
    angletwo = 180/pi*Math.atan2(DY[2],DX[2]);  // > Initialization.scenes:11
    Dmagthree = Math.sqrt(DX[3]*DX[3]+DY[3]*DY[3]);  // > Initialization.scenes:12
    anglethree = 180/pi*Math.atan2(DY[3],DX[3]);  // > Initialization.scenes:13
    xmin = -100;  // > Initialization.scenes:14
    xmax = 100;  // > Initialization.scenes:15
    ymin = -20;  // > Initialization.scenes:16
    ymax = 180;  // > Initialization.scenes:17
    midX[0]=  X[0]; // starting point  // > Initialization.scenes:18
     midY[0]= Y[0];  // > Initialization.scenes:19
    }  // > Initialization.scenes:20
    else if ( selecteds[0]==="|V₁|=12,ϑ₁=0°,|V₂|=9,ϑ₂=90°"){  // > Initialization.scenes:21
    n1=2;  // > Initialization.scenes:22
    DX[1]=12*Math.cos(0/180*pi);  // > Initialization.scenes:23
    DY[1]=12*Math.sin(0/180*pi);  // > Initialization.scenes:24
    DX[2]=9*Math.cos(90/180*pi);  // > Initialization.scenes:25
    DY[2]=9*Math.sin(90/180*pi);  // > Initialization.scenes:26
    // sync sliders  // > Initialization.scenes:27
      Dmagone = Math.sqrt(DX[1]*DX[1]+DY[1]*DY[1]);  // > Initialization.scenes:28
    angleone = 180/pi*Math.atan2(DY[1],DX[1]);  // > Initialization.scenes:29
    Dmagtwo = Math.sqrt(DX[2]*DX[2]+DY[2]*DY[2]);  // > Initialization.scenes:30
    angletwo = 180/pi*Math.atan2(DY[2],DX[2]);  // > Initialization.scenes:31
    Dmagthree = Math.sqrt(DX[3]*DX[3]+DY[3]*DY[3]);  // > Initialization.scenes:32
    anglethree = 180/pi*Math.atan2(DY[3],DX[3]);  // > Initialization.scenes:33
    xmin = -2;  // > Initialization.scenes:34
    xmax = 14;  // > Initialization.scenes:35
    ymin = -2;  // > Initialization.scenes:36
    ymax = 10;  // > Initialization.scenes:37
    midX[0]=  X[0]; // starting point  // > Initialization.scenes:38
     midY[0]= Y[0];  // > Initialization.scenes:39
      }  // > Initialization.scenes:40
      else if ( selecteds[0]==="|V₁|=400,ϑ₁=-90°,|V₂|=500,ϑ₂=60°,|V₃|=500,ϑ₃=120°"){  // > Initialization.scenes:41
    n1=3;  // > Initialization.scenes:42
    DX[1]=400*Math.cos(-90/180*pi);  // > Initialization.scenes:43
    DY[1]=400*Math.sin(-90/180*pi);  // > Initialization.scenes:44
    DX[2]=500*Math.cos(60/180*pi);  // > Initialization.scenes:45
    DY[2]=500*Math.sin(60/180*pi);  // > Initialization.scenes:46
    DX[3]=500*Math.cos(120/180*pi);  // > Initialization.scenes:47
    DY[3]=500*Math.sin(120/180*pi);  // > Initialization.scenes:48
    // sync sliders  // > Initialization.scenes:49
      Dmagone = Math.sqrt(DX[1]*DX[1]+DY[1]*DY[1]);  // > Initialization.scenes:50
    angleone = 180/pi*Math.atan2(DY[1],DX[1]);  // > Initialization.scenes:51
    Dmagtwo = Math.sqrt(DX[2]*DX[2]+DY[2]*DY[2]);  // > Initialization.scenes:52
    angletwo = 180/pi*Math.atan2(DY[2],DX[2]);  // > Initialization.scenes:53
    Dmagthree = Math.sqrt(DX[3]*DX[3]+DY[3]*DY[3]);  // > Initialization.scenes:54
    anglethree = 180/pi*Math.atan2(DY[3],DX[3]);  // > Initialization.scenes:55
    xmin = -500;  // > Initialization.scenes:56
    xmax = 500;  // > Initialization.scenes:57
    ymin = -500;  // > Initialization.scenes:58
    ymax = 500;  // > Initialization.scenes:59
    midX[0]=  X[0]; // starting point  // > Initialization.scenes:60
     midY[0]= Y[0];  // > Initialization.scenes:61
      }  // > Initialization.scenes:62
      else if ( selecteds[0]==="Examples by Mr Ezzy Chan"){  // > Initialization.scenes:63
      }  // > Initialization.scenes:64
  });

  _model.addToInitialization(function() {
    if (!__pagesEnabled["Init Page"]) return;
    //VIEW[0]=true; // force resultant to be false by default  // > Initialization.Init Page:1
    //update n based on the slider value n1  // > Initialization.Init Page:2
    n=n1+1;   // > Initialization.Init Page:3
    for(var i=1;i<n;i++) {  // > Initialization.Init Page:4
    //Generate random values for vectors' start coordinates and deltas  // > Initialization.Init Page:5
      //X[i]=0.5*range*(Math.random()-0.5);  // > Initialization.Init Page:6
     // Y[i]=0.5*range*(Math.random()-0.5);  // > Initialization.Init Page:7
     //   X[i]=0;  // > Initialization.Init Page:8
     //Y[i]=0;  // > Initialization.Init Page:9
     // DX[i]=0.4*range*(0.8*Math.random()-0.2); // move to variable page  // > Initialization.Init Page:10
     // DY[i]=0.4*range*(0.8*Math.random()-0.2);   // > Initialization.Init Page:11
    //calculate the values for the vectors' end coordinates  // > Initialization.Init Page:12
      X2[i]=X[i]+DX[i];  // > Initialization.Init Page:13
      Y2[i]=Y[i]+DY[i];  // > Initialization.Init Page:14
        // > Initialization.Init Page:15
    //initialise display variables  // > Initialization.Init Page:16
      texti[i] = i+"";  // > Initialization.Init Page:17
      dragable[i]=true;  // > Initialization.Init Page:18
      VIEW[i]=true;  // > Initialization.Init Page:19
      //clr[i]=rgb(0,0,255);  // > Initialization.Init Page:20
      clr[i]= i; // new way to assign different colors  // > Initialization.Init Page:21
    //initialise animation variables  // > Initialization.Init Page:22
      VX[i]=VY[i]=0;  // > Initialization.Init Page:23
      PX[i]=PY[i]=0; //?? Variable not used  // > Initialization.Init Page:24
    }  // > Initialization.Init Page:25
    //Initialise resultant variables  // > Initialization.Init Page:26
    VIEW2[0]=false;  // > Initialization.Init Page:27
    PX[0]=PY[0]=0.; //?? Variable not used  // > Initialization.Init Page:28
    //X[1]=0.3*range*(Math.random()-0.5); //Why the 1st vector start coordinates need to regenerate?  // > Initialization.Init Page:29
    //Y[1]=0.3*range*(Math.random()-0.5); //Why the 1st vector start coordinates need to regenerate?  // > Initialization.Init Page:30
    t=0; // reset time  // > Initialization.Init Page:31
    //Initialise resultant display variables  // > Initialization.Init Page:32
    showsumfunction(); //change to avoid showsum function same name  // > Initialization.Init Page:33
    dragable[0]=false;  // > Initialization.Init Page:34
    clr[0]=rgb(255,0,0);  // > Initialization.Init Page:35
    //Initialise component display variables  // > Initialization.Init Page:36
    showComponentfunction();  // > Initialization.Init Page:37
    setup(); // allow vectors to move  // > Initialization.Init Page:38
  });

  _model.addToInitialization(function() {
    if (!__pagesEnabled["svgradial"]) return;
    var container = document.createElement('div');  // > Initialization.svgradial:1
    var svggradient = '<svg xmlns="http://www.w3.org/2000/svg" version="1.1"><defs>'+  // > Initialization.svgradial:2
      '  <radialGradient id="mygrandient" cx="50%" cy="50%" r="50%" fx="50%" fy="50%">'+  // > Initialization.svgradial:3
      '    <stop offset="0%" style="stop-color:rgb(0,0,0); stop-opacity:1" />'+  // > Initialization.svgradial:4
      '    <stop offset="100%" style="stop-color:rgb(255,255,255);stop-opacity:0.5" />'+  // > Initialization.svgradial:5
      '  </radialGradient>'+  // > Initialization.svgradial:6
      '</defs></svg>';  // > Initialization.svgradial:7
    container.innerHTML = svggradient;  // > Initialization.svgradial:8
    document.body.appendChild(container);  // > Initialization.svgradial:9
    var container = document.createElement('div');  // > Initialization.svgradial:10
    var svggradient = '<svg xmlns="http://www.w3.org/2000/svg" version="1.1"><defs>'+  // > Initialization.svgradial:11
      '  <radialGradient id="mygrandient1" cx="50%" cy="50%" r="80%" fx="30%" fy="30%">'+  // > Initialization.svgradial:12
      '    <stop offset="0%" style="stop-color:rgb(0,0,0); stop-opacity:0.5" />'+  // > Initialization.svgradial:13
      '    <stop offset="100%" style="stop-color:rgb(255,255,255);stop-opacity:1" />'+  // > Initialization.svgradial:14
      '  </radialGradient>'+  // > Initialization.svgradial:15
      '</defs></svg>';  // > Initialization.svgradial:16
    container.innerHTML = svggradient;  // > Initialization.svgradial:17
    document.body.appendChild(container);  // > Initialization.svgradial:18
    //"url(#mygrandient1)"  // > Initialization.svgradial:19
    var container = document.createElement('div');  // > Initialization.svgradial:20
    var svggradient = '<svg xmlns="http://www.w3.org/2000/svg" version="1.1"><defs>'+  // > Initialization.svgradial:21
      '  <radialGradient id="mygrandient2" cx="50%" cy="50%" r="70%" fx="90%" fy="50%">'+  // > Initialization.svgradial:22
      '    <stop offset="0%" style="stop-color:rgb(0,255,0); stop-opacity:0.5" />'+  // > Initialization.svgradial:23
      '    <stop offset="100%" style="stop-color:rgb(255,255,255);stop-opacity:0.5" />'+  // > Initialization.svgradial:24
      '  </radialGradient>'+  // > Initialization.svgradial:25
      '</defs></svg>';  // > Initialization.svgradial:26
    container.innerHTML = svggradient;  // > Initialization.svgradial:27
    document.body.appendChild(container);  // > Initialization.svgradial:28
    //"url(#mygrandient2)"  // > Initialization.svgradial:29
  });

  _model.addToInitialization(function() {
    if (!__pagesEnabled["axes"]) return;
    _view.plottingPanel.getAxisX().setPosition([0,0.5]);  // > Initialization.axes:1
    _view.plottingPanel.getTitleX().setPosition([0.95,0.5]);  // > Initialization.axes:2
    _view.plottingPanel.getAxisY().setPosition([0.5,0]);  // > Initialization.axes:3
    _view.plottingPanel.getTitleY().setPosition([0.5,0.9]);  // > Initialization.axes:4
  });

  _model.addToInitialization(function() {
    _initializeSolvers();
  });

  _model.addToEvolution(function() {
    if (!__pagesEnabled["Evol Page"]) return;
    _ODEi_evolution1.step();
  });

  _model.addToFixedRelations(function() { _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); });

  _model.addToFixedRelations(function() {
    if (!__pagesEnabled["FixRel Page"]) return;
    /* // replace by events lookang  // > FixedRelations.FixRel Page:1
    if(t>=time) {  // > FixedRelations.FixRel Page:2
      playpause();  // > FixedRelations.FixRel Page:3
      PX[0]=X[1];  // > FixedRelations.FixRel Page:4
      PY[0]=Y[1];  // > FixedRelations.FixRel Page:5
      for(var i=1;i<n;i++) {  // > FixedRelations.FixRel Page:6
        PX[i]=X[i]+DX[i];  // > FixedRelations.FixRel Page:7
        PY[i]=Y[i]+DY[i];  // > FixedRelations.FixRel Page:8
        VIEW2[i]=showComponent;  // > FixedRelations.FixRel Page:9
      }  // > FixedRelations.FixRel Page:10
    }  // > FixedRelations.FixRel Page:11
    */  // > FixedRelations.FixRel Page:12
    // fix error of resultant wrong, need to compute  // > FixedRelations.FixRel Page:13
    X[0]=X[1]; // move the resultant to the start of vector A  // > FixedRelations.FixRel Page:14
    Y[0]=Y[1];  // > FixedRelations.FixRel Page:15
    DX[0]=0; // set initial length of R to zero  // > FixedRelations.FixRel Page:16
    DY[0]=0;  // > FixedRelations.FixRel Page:17
     midX[0]=  X[0]; // starting point  // > FixedRelations.FixRel Page:18
     midY[0]= Y[0];  // > FixedRelations.FixRel Page:19
       // > FixedRelations.FixRel Page:20
    for(var i=1;i<n;i++) {  // > FixedRelations.FixRel Page:21
      DX[0]+=DX[i]; // add length in loop  // > FixedRelations.FixRel Page:22
      DY[0]+=DY[i];  // > FixedRelations.FixRel Page:23
      TX[i]=X[i]+DX[i]/2; //position text  // > FixedRelations.FixRel Page:24
      TY[i]=Y[i]+DY[i]/2;  // > FixedRelations.FixRel Page:25
        // > FixedRelations.FixRel Page:26
    }  // > FixedRelations.FixRel Page:27
    for(var i=1;i<n;i++) { // start 0 to include R  // > FixedRelations.FixRel Page:28
    // text X-Y position  // > FixedRelations.FixRel Page:29
      TX[i]=X[i]+DX[i]/2;  // > FixedRelations.FixRel Page:30
      TY[i]=Y[i]+DY[i]/2;  // > FixedRelations.FixRel Page:31
        // > FixedRelations.FixRel Page:32
      // position circles to show draggable  // > FixedRelations.FixRel Page:33
     midX[i]=  X[i]+DX[i]/2;  // > FixedRelations.FixRel Page:34
     midY[i]= Y[i]+DY[i]/2;  // > FixedRelations.FixRel Page:35
    // display text values    // > FixedRelations.FixRel Page:36
      Dmag[i] = _view._format(Math.sqrt(DX[i]*DX[i]+DY[i]*DY[i]),"0.00");  // > FixedRelations.FixRel Page:37
      dTEXT[i] = "|"+TEXT[i] +"| = " + _view._format(Dmag[i],"0.00");  // > FixedRelations.FixRel Page:38
      angle[i] =  Math.atan2(DY[i],DX[i]);  // > FixedRelations.FixRel Page:39
      angleTEXT[i] ="∠" + TEXT[i] +" = "+_view._format(180*angle[i]/pi,"0")+"°";  // > FixedRelations.FixRel Page:40
    //vectors' end X-Y coordinates  // > FixedRelations.FixRel Page:41
      X2[i]=X[i]+DX[i];  // > FixedRelations.FixRel Page:42
      Y2[i]=Y[i]+DY[i];  // > FixedRelations.FixRel Page:43
    }  // > FixedRelations.FixRel Page:44
    //calculate and store the resultant |R| display value  // > FixedRelations.FixRel Page:45
    Dmag[0] = _view._format(Math.sqrt(DX[0]*DX[0]+DY[0]*DY[0]),"0.00");  // > FixedRelations.FixRel Page:46
    angle[0] =  Math.atan2(DY[0],DX[0]);  // > FixedRelations.FixRel Page:47
    rText = "|"+TEXT[0] +"| = " +_view._format(Dmag[0],"0.00")+"∠ R ="+_view._format(180/pi*angle[0],"0.0")+"°";  // > FixedRelations.FixRel Page:48
    //rText = "|"+TEXT[0] +"| = " +_view._format(Dmag[0],"0.00")+"∠ R ="+_view._format(Math.atan2(DY[0],DX[0])+"°";  // > FixedRelations.FixRel Page:49
    //?? variable not used  // > FixedRelations.FixRel Page:50
    zero=0.;  // > FixedRelations.FixRel Page:51
  });

  _model.addToFixedRelations(function() {
    if (!__pagesEnabled["Component3dotline"]) return;
    // precalculate the vertical & horizontal lines X-Y coordinates for component style 3  // > FixedRelations.Component3dotline:1
    for(var i=1;i<n;i++) {  // > FixedRelations.Component3dotline:2
      Ystartdotline[i] = Y[i]-(ymin + size);    // > FixedRelations.Component3dotline:3
      Yenddotline[i] = Y[i] - (ymin + size) + DY[i];  // > FixedRelations.Component3dotline:4
        // > FixedRelations.Component3dotline:5
      Xstartdotline[i] = X[i] - (xmin+size);  // > FixedRelations.Component3dotline:6
      Xenddotline[i] = X[i] - (xmin + size) + DX[i];  // > FixedRelations.Component3dotline:7
    }  // > FixedRelations.Component3dotline:8
  });

  _model.addToFixedRelations(function() { _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); });

  function _initializeSolvers() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].initializeSolver();
  }

  function _automaticResetSolvers() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].automaticResetSolver();
  }

  _model.resetSolvers = function() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].resetSolver();
  };

  _getODE = function (_odeName) {
    if (_odeName=="Evol Page") return _ODEi_evolution1;
    return null;
  }

  function _getEventSolver(_odeName) {
    var ode = _getODE(_odeName);
    if (ode===null) return null;
    return ode.getEventSolver();
  }

  function _setSolverClass(_odeName, _engine) {
    var ode = _getODE(_odeName);
    if (ode===null) return;
    if (!_engine.setODE) {
      var classname = _engine.toLowerCase();
      if      (classname.indexOf("boga")>=0)   _engine = EJSS_ODE_SOLVERS.bogackiShampine23;
      else if (classname.indexOf("cash")>=0)   _engine = EJSS_ODE_SOLVERS.cashKarp45;
      else if (classname.indexOf("dopri5")>=0) _engine = EJSS_ODE_SOLVERS.dopri5;
      else if (classname.indexOf("dopri8")>=0) _engine = EJSS_ODE_SOLVERS.dopri853;
      else if (classname.indexOf("richa")>=0)  _engine = EJSS_ODE_SOLVERS.eulerRichardson;
      else if (classname.indexOf("euler")>=0)  _engine = EJSS_ODE_SOLVERS.euler;
      else if (classname.indexOf("fehlberg87")>=0) _engine = EJSS_ODE_SOLVERS.fehlberg87;
      else if (classname.indexOf("fehlberg8")>=0)  _engine = EJSS_ODE_SOLVERS.fehlberg8;
      else if (classname.indexOf("radau")>=0)   _engine = EJSS_ODE_SOLVERS.radau5;
      else if (classname.indexOf("runge")>=0)  _engine = EJSS_ODE_SOLVERS.rungeKutta4;
      else if (classname.indexOf("rk4")>=0)    _engine = EJSS_ODE_SOLVERS.rungeKutta4;
      else if (classname.indexOf("verlet")>=0) _engine = EJSS_ODE_SOLVERS.velocityVerlet;
    }
    if (_engine) ode.setSolverClass(_engine);
  }

  function _ODE_evolution1() {
    var __odeSelf = {};
    var __eventSolver;
    var __solverClass = EJSS_ODE_SOLVERS.rungeKutta4;
    var __state=[];
    var _ODE_evolution1_Event1;
    var __ignoreErrors=false;
    var __mustInitialize=true;
    var __isEnabled=true;
    var __mustUserReinitialize=false;
    var __mustReinitialize=true;

    var _XLength;
    var _YLength;

    __odeSelf._getOdeVars = function (){ return["X","Y","t"]};

    __odeSelf.setSolverClass = function(__aSolverClass) {
      __solverClass = __aSolverClass;
      __instantiateSolver();
    };

    function __instantiateSolver() {
      __state=[];
      _XLength = X.length;
      _YLength = Y.length;
      __pushState();
      __eventSolver = EJSS_ODE_SOLVERS.interpolatorEventSolver(__solverClass(),__odeSelf);
      __mustInitialize = true;
    }

    __odeSelf.setEnabled = function(_enabled) { __isEnabled = _enabled; };

    __odeSelf.getIndependentVariableValue = function() { return __eventSolver.getIndependentVariableValue(); };

    __odeSelf.getInternalStepSize = function() { return __eventSolver.getInternalStepSize(); };

    __odeSelf.isAccelerationIndependentOfVelocity = function() { return false; };

    __odeSelf.initializeSolver = function() {
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); return; }
      __pushState();
      __eventSolver.initialize(dt);
      __eventSolver.setBestInterpolation(false);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.removeAllEvents();
      if (__pagesEnabled["Event"]) __eventSolver.addEvent(_ODE_evolution1_Event1());
      for(k in userEvents1){__eventSolver.addEvent(userEvents1[k]);}
      __eventSolver.setEstimateFirstStep(false);
      __eventSolver.setEnableExceptions(false);
      __mustReinitialize = true;
      __mustInitialize = false;
    };

    function __pushState() {
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
      if (!__mustReinitialize)
        for (__j=0,__n=__cIn; __j<_XLength; __j++)
           if (__state[__n++]!=X[__j]) { __mustReinitialize = true; break; }
        for (__j=0;__j<_XLength; __j++) {
          __state[__cIn++] = X[__j];
        }
      if (!__mustReinitialize)
        for (__j=0,__n=__cIn; __j<_YLength; __j++)
           if (__state[__n++]!=Y[__j]) { __mustReinitialize = true; break; }
        for (__j=0;__j<_YLength; __j++) {
          __state[__cIn++] = Y[__j];
        }
        if (__state[__cIn]!=t) __mustReinitialize = true;
        __state[__cIn++] = t;
    }

    function __arraysChanged () {
      if (_XLength != X.length) return true;
      if (_YLength != Y.length) return true;
      return false;
    }

    __odeSelf.getEventSolver = function() {
      return __eventSolver;
    };

    __odeSelf.resetSolver = function() {
      __mustUserReinitialize = true;
    };

    __odeSelf.automaticResetSolver = function() {
      __mustReinitialize = true;
    };

    function __errorAction () {
      if (__ignoreErrors) return;
      console.log (__eventSolver.getErrorMessage());
      _pause();
      // Make sure the solver is reinitialized;
      __mustReinitialize = true;
    }

    __odeSelf.step = function() { return __privateStep(false); };

    __odeSelf.solverStep = function() { return __privateStep(true); };

    function __privateStep(__takeMaximumStep) {
      if (!__isEnabled) return 0;
      if (dt===0) return 0;
      if (__mustInitialize) __odeSelf.initializeSolver();
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); }
      __eventSolver.setStepSize(dt);
      __eventSolver.setInternalStepSize(dt);
      __eventSolver.setMaximumInternalSteps(10000);
      __pushState();
      if (__mustUserReinitialize) { 
        __eventSolver.userReinitialize();
        __mustUserReinitialize = false;
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      else if (__mustReinitialize) { 
        __eventSolver.reinitialize();
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      var __stepTaken = __takeMaximumStep ? __eventSolver.maxStep() : __eventSolver.step();
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        for (__i=0;__i<_XLength; __i++) {
          X[__i] = __state[__cOut++];
        }
        for (__i=0;__i<_YLength; __i++) {
          Y[__i] = __state[__cOut++];
        }
        t = __state[__cOut++];
      // Check for error
      if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      return __stepTaken;
    }

    __odeSelf.getState = function() { return __state; };

    __odeSelf.getRate = function(_aState,_aRate) {
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var X = [];
        for (__i=0;__i<_XLength; __i++) {
          X[__i] = _aState[__cOut++];
        }
        var Y = [];
        for (__i=0;__i<_YLength; __i++) {
          Y[__i] = _aState[__cOut++];
        }
        var t = _aState[__cOut++];
      // Compute the rate
        var __cRate=0;
        var i;
        for (i=0;i<_XLength;i++) {
          _aRate[__cRate++] = Array.isArray(VX[i]) ? VX[i][i] : VX[i]; // Rate for ODE: Evol Page:X
        }
        for (i=0;i<_YLength;i++) {
          _aRate[__cRate++] = Array.isArray(VY[i]) ? VY[i][i] : VY[i]; // Rate for ODE: Evol Page:Y
        }
        _aRate[__cRate++] = 1; // independent variable
        return _aRate;
    }; //end of getRate

    __odeSelf._addEvent = function(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent){
    var User_Event = function (userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent) {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return eventType; };

      _eventSelf.getRootFindingMethod = function() { return eventMethod; };

      _eventSelf.getMaxIterations = function() { return maxIter; };

      _eventSelf.getTolerance = function() { return eventTolerance; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var X = [];
        for (__i=0;__i<_XLength; __i++) {
          X[__i] = _aState[__cOut++];
        }
        var Y = [];
        for (__i=0;__i<_YLength; __i++) {
          Y[__i] = _aState[__cOut++];
        }
        var t = _aState[__cOut++];
      return eval(userCondition);
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        for (__i=0;__i<_XLength; __i++) {
          X[__i] = __state[__cOut++];
        }
        for (__i=0;__i<_YLength; __i++) {
          Y[__i] = __state[__cOut++];
        }
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        for (__j=0;__j<_XLength; __j++) {
          __state[__cIn++] = X[__j];
        }
        for (__j=0;__j<_YLength; __j++) {
          __state[__cIn++] = Y[__j];
        }
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        if (undefined != functions) eval(functions.toString());
        eval(userAction);
        return endAtEvent;
      }

      return _eventSelf;
    }; // End of event

   userEvents1.push(User_Event(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent));
   }

    _ODE_evolution1_Event1 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var X = [];
        for (__i=0;__i<_XLength; __i++) {
          X[__i] = _aState[__cOut++];
        }
        var Y = [];
        for (__i=0;__i<_YLength; __i++) {
          Y[__i] = _aState[__cOut++];
        }
        var t = _aState[__cOut++];
        return t-time;  // > Event zero-condition for page Evol Page:1
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        for (__i=0;__i<_XLength; __i++) {
          X[__i] = __state[__cOut++];
        }
        for (__i=0;__i<_YLength; __i++) {
          Y[__i] = __state[__cOut++];
        }
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        for (__j=0;__j<_XLength; __j++) {
          __state[__cIn++] = X[__j];
        }
        for (__j=0;__j<_YLength; __j++) {
          __state[__cIn++] = Y[__j];
        }
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        _pause();  // > Event action for page Evol Page:1
        VIEW[0]=true; // force resultant line to appear  // > Event action for page Evol Page:2
        rVIEW=true;   //force resultant text to appear  // > Event action for page Evol Page:3
        text = "paused";  // > Event action for page Evol Page:4
        return true;
      }

      return _eventSelf;
    }; // End of event

    __instantiateSolver();

    return __odeSelf;
  }

  function _historic_X(__time) {
    var __beginIndex = 0;
    return _ODEi_evolution1.getEventSolver().getStateHistory().interpolate(__time,new Array(X.length),__beginIndex,X.ength);
  }

  function _historic_Y(__time) {
    var __beginIndex = 0 + X.length;
    return _ODEi_evolution1.getEventSolver().getStateHistory().interpolate(__time,new Array(Y.length),__beginIndex,Y.ength);
  }

    _model._fontResized = function(iBase,iSize,iDelta) {
      _view._fontResized(iBase,iSize,iDelta);
  }; // end of _fontResized

  function _getViews() {
    var _viewsInfo = [];
    var _counter = 0;
    _viewsInfo[_counter++] = { name : "HtmlView Page", width : 800, height : 600 };
    return _viewsInfo;
  } // end of _getViews

  function _selectView(_viewNumber) {
    _view = null;
    _view = new vectorsum05_View(_topFrame,_viewNumber,_libraryPath,_codebasePath);
    var _view_super_reset = _view._reset;
    _view._reset = function() {
      _view_super_reset();
      switch(_viewNumber) {
        case -10 : break; // make Lint happy
        default :
        case 0:
          _view.panel.linkProperty("Height",  function() { return Height; }, function(_v) { Height = _v; } ); // HtmlView Page linking property 'Height' for element 'panel'
          _view.panel.linkProperty("Width",  function() { return Width; }, function(_v) { Width = _v; } ); // HtmlView Page linking property 'Width' for element 'panel'
          _view.comboBox.linkProperty("Options",  function() { return ["|V₁|=120,ϑ₁=60°,|V₂|=80,ϑ₂=105°","|V₁|=12,ϑ₁=0°,|V₂|=9,ϑ₂=90°","|V₁|=400,ϑ₁=-90°,|V₂|=500,ϑ₂=60°,|V₃|=500,ϑ₃=120°","Examples by Mr Ezzy Chan"]; } ); // HtmlView Page linking property 'Options' for element 'comboBox'
          _view.comboBox.setAction("OnChange", _initialize); // HtmlView Page setting action 'OnChange' for element 'comboBox'
          _view.comboBox.linkProperty("SelectedOptions",  function() { return selecteds; }, function(_v) { selecteds = _v; } ); // HtmlView Page linking property 'SelectedOptions' for element 'comboBox'
          _view.slider.linkProperty("Width",  function() { return (_isEPub)?"0":""; } ); // HtmlView Page linking property 'Width' for element 'slider'
          _view.slider.linkProperty("Maximum",  function() { return nmax-1; } ); // HtmlView Page linking property 'Maximum' for element 'slider'
          _view.slider.linkProperty("Value",  function() { return n1; }, function(_v) { n1 = _v; } ); // HtmlView Page linking property 'Value' for element 'slider'
          _view.slider.setAction("OnChange", function(_data,_info) {
  _initialize();

}); // HtmlView Page setting action 'OnChange' for element 'slider'
          _view.comboBox2.linkProperty("Options",  function() { return ["none","component style 1","component style 2","component style 3"]; } ); // HtmlView Page linking property 'Options' for element 'comboBox2'
          _view.comboBox2.setAction("OnChange", _initialize); // HtmlView Page setting action 'OnChange' for element 'comboBox2'
          _view.comboBox2.linkProperty("SelectedOptions",  function() { return selected; }, function(_v) { selected = _v; } ); // HtmlView Page linking property 'SelectedOptions' for element 'comboBox2'
          _view.playPauseButton.setAction("OffClick", function(_data,_info) {
  text="paused";
  _pause();
  setup();

}); // HtmlView Page setting action 'OffClick' for element 'playPauseButton'
          _view.playPauseButton.linkProperty("State",  function() { return _isPaused; } ); // HtmlView Page linking property 'State' for element 'playPauseButton'
          _view.playPauseButton.setAction("OnClick", function(_data,_info) {
  _play();
  text="playing";

}); // HtmlView Page setting action 'OnClick' for element 'playPauseButton'
          _view.stepButton.setAction("OnClick", function(_data,_info) {
  _step();

}); // HtmlView Page setting action 'OnClick' for element 'stepButton'
          _view.resetButton.linkProperty("Tooltip",  function() { return l_reset; }, function(_v) { l_reset = _v; } ); // HtmlView Page linking property 'Tooltip' for element 'resetButton'
          _view.resetButton.setAction("OnClick", _reset); // HtmlView Page setting action 'OnClick' for element 'resetButton'
          _view.FullScreen2Button.setAction("OffClick", function(_data,_info) {
  _pause();
  toggleFullScreen();

}); // HtmlView Page setting action 'OffClick' for element 'FullScreen2Button'
          _view.FullScreen2Button.linkProperty("Visibility",  function() { return (!parent.cordova&&!iOS); } ); // HtmlView Page linking property 'Visibility' for element 'FullScreen2Button'
          _view.FullScreen2Button.linkProperty("Disabled",  function() { return _isPlaying; } ); // HtmlView Page linking property 'Disabled' for element 'FullScreen2Button'
          _view.FullScreen2Button.setAction("OnClick", function(_data,_info) {
  _pause();
  toggleFullScreen();

}); // HtmlView Page setting action 'OnClick' for element 'FullScreen2Button'
          _view.plottingPanel.linkProperty("Height",  function() { return changeOrientation(); }, function(_v) { changeOrientation() = _v; } ); // HtmlView Page linking property 'Height' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("Width",  function() { return Width1; }, function(_v) { Width1 = _v; } ); // HtmlView Page linking property 'Width' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("MaximumY",  function() { return ymax; }, function(_v) { ymax = _v; } ); // HtmlView Page linking property 'MaximumY' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("MaximumX",  function() { return xmax; }, function(_v) { xmax = _v; } ); // HtmlView Page linking property 'MaximumX' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("MinimumX",  function() { return xmin; }, function(_v) { xmin = _v; } ); // HtmlView Page linking property 'MinimumX' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("XTickStep",  function() { return Dmag[0]<100?10:100; } ); // HtmlView Page linking property 'XTickStep' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("MinimumY",  function() { return ymin; }, function(_v) { ymin = _v; } ); // HtmlView Page linking property 'MinimumY' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("YTickStep",  function() { return Dmag[0]<100?10:100; } ); // HtmlView Page linking property 'YTickStep' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("TLMessage",  function() { return text; }, function(_v) { text = _v; } ); // HtmlView Page linking property 'TLMessage' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("BRMessage",  function() { return " t = "+_view._format(t,"0.00")+ "s "; } ); // HtmlView Page linking property 'BRMessage' for element 'plottingPanel'
          _view.velocitydrag222.linkProperty("X",  function() { return X[1]+DX[1]; } ); // HtmlView Page linking property 'X' for element 'velocitydrag222'
          _view.velocitydrag222.linkProperty("Y",  function() { return Y[1]+DY[1]; } ); // HtmlView Page linking property 'Y' for element 'velocitydrag222'
          _view.velocitydrag222.setAction("OnDrag", function(_data,_info) {
  //_view.comboBox.setSelectedOptions(["user defined"]);

}); // HtmlView Page setting action 'OnDrag' for element 'velocitydrag222'
          _view.velocitydrag22.linkProperty("X",  function() { return X[2]+DX[2]; } ); // HtmlView Page linking property 'X' for element 'velocitydrag22'
          _view.velocitydrag22.linkProperty("Y",  function() { return Y[2]+DY[2]; } ); // HtmlView Page linking property 'Y' for element 'velocitydrag22'
          _view.velocitydrag22.setAction("OnDrag", function(_data,_info) {
  //_view.comboBox.setSelectedOptions(["user defined"]);

}); // HtmlView Page setting action 'OnDrag' for element 'velocitydrag22'
          _view.arrowSet.linkProperty("NumberOfElements",  function() { return n; }, function(_v) { n = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'arrowSet'
          _view.arrowSet.linkProperty("SizeX",  function() { return DX; }, function(_v) { DX = _v; } ); // HtmlView Page linking property 'SizeX' for element 'arrowSet'
          _view.arrowSet.linkProperty("X",  function() { return X; }, function(_v) { X = _v; } ); // HtmlView Page linking property 'X' for element 'arrowSet'
          _view.arrowSet.linkProperty("LineColor",  function() { return clr; }, function(_v) { clr = _v; } ); // HtmlView Page linking property 'LineColor' for element 'arrowSet'
          _view.arrowSet.linkProperty("Y",  function() { return Y; }, function(_v) { Y = _v; } ); // HtmlView Page linking property 'Y' for element 'arrowSet'
          _view.arrowSet.linkProperty("Visibility",  function() { return VIEW; }, function(_v) { VIEW = _v; } ); // HtmlView Page linking property 'Visibility' for element 'arrowSet'
          _view.arrowSet.linkProperty("SizeY",  function() { return DY; }, function(_v) { DY = _v; } ); // HtmlView Page linking property 'SizeY' for element 'arrowSet'
          _view.arrowSet.setAction("OnDrag", function(_data,_info) {
  dragaction();

}); // HtmlView Page setting action 'OnDrag' for element 'arrowSet'
          _view.shapeSet.linkProperty("NumberOfElements",  function() { return n; }, function(_v) { n = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'shapeSet'
          _view.shapeSet.linkProperty("FillColor",  function() { return clr; }, function(_v) { clr = _v; } ); // HtmlView Page linking property 'FillColor' for element 'shapeSet'
          _view.shapeSet.linkProperty("X",  function() { return midX; }, function(_v) { midX = _v; } ); // HtmlView Page linking property 'X' for element 'shapeSet'
          _view.shapeSet.linkProperty("Y",  function() { return midY; }, function(_v) { midY = _v; } ); // HtmlView Page linking property 'Y' for element 'shapeSet'
          _view.n.linkProperty("NumberOfElements",  function() { return n; }, function(_v) { n = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'n'
          _view.n.linkProperty("X",  function() { return X; }, function(_v) { X = _v; } ); // HtmlView Page linking property 'X' for element 'n'
          _view.n.linkProperty("Y",  function() { return Y; }, function(_v) { Y = _v; } ); // HtmlView Page linking property 'Y' for element 'n'
          _view.n.linkProperty("Text",  function() { return texti; }, function(_v) { texti = _v; } ); // HtmlView Page linking property 'Text' for element 'n'
          _view.angle.linkProperty("NumberOfElements",  function() { return n; }, function(_v) { n = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'angle'
          _view.angle.linkProperty("X",  function() { return X; }, function(_v) { X = _v; } ); // HtmlView Page linking property 'X' for element 'angle'
          _view.angle.linkProperty("Y",  function() { return Y; }, function(_v) { Y = _v; } ); // HtmlView Page linking property 'Y' for element 'angle'
          _view.angle.linkProperty("Text",  function() { return angleTEXT; }, function(_v) { angleTEXT = _v; } ); // HtmlView Page linking property 'Text' for element 'angle'
          _view.AB.linkProperty("NumberOfElements",  function() { return n; }, function(_v) { n = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'AB'
          _view.AB.linkProperty("X",  function() { return TX; }, function(_v) { TX = _v; } ); // HtmlView Page linking property 'X' for element 'AB'
          _view.AB.linkProperty("Y",  function() { return TY; }, function(_v) { TY = _v; } ); // HtmlView Page linking property 'Y' for element 'AB'
          _view.AB.linkProperty("Text",  function() { return dTEXT; }, function(_v) { dTEXT = _v; } ); // HtmlView Page linking property 'Text' for element 'AB'
          _view.R.linkProperty("X",  function() { return rTX; }, function(_v) { rTX = _v; } ); // HtmlView Page linking property 'X' for element 'R'
          _view.R.linkProperty("Y",  function() { return rTY; }, function(_v) { rTY = _v; } ); // HtmlView Page linking property 'Y' for element 'R'
          _view.R.linkProperty("Text",  function() { return rText; }, function(_v) { rText = _v; } ); // HtmlView Page linking property 'Text' for element 'R'
          _view.R.linkProperty("Visibility",  function() { return rVIEW; }, function(_v) { rVIEW = _v; } ); // HtmlView Page linking property 'Visibility' for element 'R'
          _view.sky.linkProperty("SizeX",  function() { return xmax-xmin; } ); // HtmlView Page linking property 'SizeX' for element 'sky'
          _view.sky.linkProperty("SizeY",  function() { return ymax-ymin; } ); // HtmlView Page linking property 'SizeY' for element 'sky'
          _view.arrowSetX.linkProperty("NumberOfElements",  function() { return n; }, function(_v) { n = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'arrowSetX'
          _view.arrowSetX.linkProperty("SizeX",  function() { return DX; }, function(_v) { DX = _v; } ); // HtmlView Page linking property 'SizeX' for element 'arrowSetX'
          _view.arrowSetX.linkProperty("X",  function() { return X; }, function(_v) { X = _v; } ); // HtmlView Page linking property 'X' for element 'arrowSetX'
          _view.arrowSetX.linkProperty("Y",  function() { return Y; }, function(_v) { Y = _v; } ); // HtmlView Page linking property 'Y' for element 'arrowSetX'
          _view.arrowSetX.linkProperty("Visibility",  function() { return VIEW2; }, function(_v) { VIEW2 = _v; } ); // HtmlView Page linking property 'Visibility' for element 'arrowSetX'
          _view.arrowSetY.linkProperty("NumberOfElements",  function() { return n; }, function(_v) { n = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'arrowSetY'
          _view.arrowSetY.linkProperty("X",  function() { return X; }, function(_v) { X = _v; } ); // HtmlView Page linking property 'X' for element 'arrowSetY'
          _view.arrowSetY.linkProperty("Y",  function() { return Y; }, function(_v) { Y = _v; } ); // HtmlView Page linking property 'Y' for element 'arrowSetY'
          _view.arrowSetY.linkProperty("Visibility",  function() { return VIEW2; }, function(_v) { VIEW2 = _v; } ); // HtmlView Page linking property 'Visibility' for element 'arrowSetY'
          _view.arrowSetY.linkProperty("SizeY",  function() { return DY; }, function(_v) { DY = _v; } ); // HtmlView Page linking property 'SizeY' for element 'arrowSetY'
          _view.arrowSetX2.linkProperty("NumberOfElements",  function() { return n; }, function(_v) { n = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'arrowSetX2'
          _view.arrowSetX2.linkProperty("SizeX",  function() { return DX; }, function(_v) { DX = _v; } ); // HtmlView Page linking property 'SizeX' for element 'arrowSetX2'
          _view.arrowSetX2.linkProperty("X",  function() { return X; }, function(_v) { X = _v; } ); // HtmlView Page linking property 'X' for element 'arrowSetX2'
          _view.arrowSetX2.linkProperty("Y",  function() { return Y; }, function(_v) { Y = _v; } ); // HtmlView Page linking property 'Y' for element 'arrowSetX2'
          _view.arrowSetX2.linkProperty("Visibility",  function() { return VIEW3; }, function(_v) { VIEW3 = _v; } ); // HtmlView Page linking property 'Visibility' for element 'arrowSetX2'
          _view.arrowSetY2.linkProperty("NumberOfElements",  function() { return n; }, function(_v) { n = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'arrowSetY2'
          _view.arrowSetY2.linkProperty("X",  function() { return X2; }, function(_v) { X2 = _v; } ); // HtmlView Page linking property 'X' for element 'arrowSetY2'
          _view.arrowSetY2.linkProperty("Y",  function() { return Y; }, function(_v) { Y = _v; } ); // HtmlView Page linking property 'Y' for element 'arrowSetY2'
          _view.arrowSetY2.linkProperty("Visibility",  function() { return VIEW3; }, function(_v) { VIEW3 = _v; } ); // HtmlView Page linking property 'Visibility' for element 'arrowSetY2'
          _view.arrowSetY2.linkProperty("SizeY",  function() { return DY; }, function(_v) { DY = _v; } ); // HtmlView Page linking property 'SizeY' for element 'arrowSetY2'
          _view.arrowSetX3.linkProperty("NumberOfElements",  function() { return n; }, function(_v) { n = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'arrowSetX3'
          _view.arrowSetX3.linkProperty("SizeX",  function() { return DX; }, function(_v) { DX = _v; } ); // HtmlView Page linking property 'SizeX' for element 'arrowSetX3'
          _view.arrowSetX3.linkProperty("X",  function() { return X; }, function(_v) { X = _v; } ); // HtmlView Page linking property 'X' for element 'arrowSetX3'
          _view.arrowSetX3.linkProperty("Y",  function() { return ymin+size; } ); // HtmlView Page linking property 'Y' for element 'arrowSetX3'
          _view.arrowSetX3.linkProperty("Visibility",  function() { return VIEW4; }, function(_v) { VIEW4 = _v; } ); // HtmlView Page linking property 'Visibility' for element 'arrowSetX3'
          _view.segmentSetStartX.linkProperty("NumberOfElements",  function() { return n; }, function(_v) { n = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'segmentSetStartX'
          _view.segmentSetStartX.linkProperty("X",  function() { return X; }, function(_v) { X = _v; } ); // HtmlView Page linking property 'X' for element 'segmentSetStartX'
          _view.segmentSetStartX.linkProperty("Y",  function() { return ymin+size; } ); // HtmlView Page linking property 'Y' for element 'segmentSetStartX'
          _view.segmentSetStartX.linkProperty("Visibility",  function() { return VIEW4; }, function(_v) { VIEW4 = _v; } ); // HtmlView Page linking property 'Visibility' for element 'segmentSetStartX'
          _view.segmentSetStartX.linkProperty("SizeY",  function() { return Ystartdotline; }, function(_v) { Ystartdotline = _v; } ); // HtmlView Page linking property 'SizeY' for element 'segmentSetStartX'
          _view.segmentSetEndX.linkProperty("NumberOfElements",  function() { return n; }, function(_v) { n = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'segmentSetEndX'
          _view.segmentSetEndX.linkProperty("X",  function() { return X2; }, function(_v) { X2 = _v; } ); // HtmlView Page linking property 'X' for element 'segmentSetEndX'
          _view.segmentSetEndX.linkProperty("Y",  function() { return ymin+size; } ); // HtmlView Page linking property 'Y' for element 'segmentSetEndX'
          _view.segmentSetEndX.linkProperty("Visibility",  function() { return VIEW4; }, function(_v) { VIEW4 = _v; } ); // HtmlView Page linking property 'Visibility' for element 'segmentSetEndX'
          _view.segmentSetEndX.linkProperty("SizeY",  function() { return Yenddotline; }, function(_v) { Yenddotline = _v; } ); // HtmlView Page linking property 'SizeY' for element 'segmentSetEndX'
          _view.arrowSetY3.linkProperty("NumberOfElements",  function() { return n; }, function(_v) { n = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'arrowSetY3'
          _view.arrowSetY3.linkProperty("X",  function() { return xmin+size; } ); // HtmlView Page linking property 'X' for element 'arrowSetY3'
          _view.arrowSetY3.linkProperty("Y",  function() { return Y; }, function(_v) { Y = _v; } ); // HtmlView Page linking property 'Y' for element 'arrowSetY3'
          _view.arrowSetY3.linkProperty("Visibility",  function() { return VIEW4; }, function(_v) { VIEW4 = _v; } ); // HtmlView Page linking property 'Visibility' for element 'arrowSetY3'
          _view.arrowSetY3.linkProperty("SizeY",  function() { return DY; }, function(_v) { DY = _v; } ); // HtmlView Page linking property 'SizeY' for element 'arrowSetY3'
          _view.segmentSetStartY.linkProperty("NumberOfElements",  function() { return n; }, function(_v) { n = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'segmentSetStartY'
          _view.segmentSetStartY.linkProperty("SizeX",  function() { return Xstartdotline; }, function(_v) { Xstartdotline = _v; } ); // HtmlView Page linking property 'SizeX' for element 'segmentSetStartY'
          _view.segmentSetStartY.linkProperty("X",  function() { return xmin+size; } ); // HtmlView Page linking property 'X' for element 'segmentSetStartY'
          _view.segmentSetStartY.linkProperty("Y",  function() { return Y; }, function(_v) { Y = _v; } ); // HtmlView Page linking property 'Y' for element 'segmentSetStartY'
          _view.segmentSetStartY.linkProperty("Visibility",  function() { return VIEW4; }, function(_v) { VIEW4 = _v; } ); // HtmlView Page linking property 'Visibility' for element 'segmentSetStartY'
          _view.segmentSetEndY.linkProperty("NumberOfElements",  function() { return n; }, function(_v) { n = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'segmentSetEndY'
          _view.segmentSetEndY.linkProperty("SizeX",  function() { return Xenddotline; }, function(_v) { Xenddotline = _v; } ); // HtmlView Page linking property 'SizeX' for element 'segmentSetEndY'
          _view.segmentSetEndY.linkProperty("X",  function() { return xmin+size; } ); // HtmlView Page linking property 'X' for element 'segmentSetEndY'
          _view.segmentSetEndY.linkProperty("Y",  function() { return Y2; }, function(_v) { Y2 = _v; } ); // HtmlView Page linking property 'Y' for element 'segmentSetEndY'
          _view.segmentSetEndY.linkProperty("Visibility",  function() { return VIEW4; }, function(_v) { VIEW4 = _v; } ); // HtmlView Page linking property 'Visibility' for element 'segmentSetEndY'
          _view.one5.linkProperty("Background",  function() { return clr[1]; }, function(_v) { clr[1] = _v; } ); // HtmlView Page linking property 'Background' for element 'one5'
          _view.one22.linkProperty("Width",  function() { return (_isEPub)?"0":""; } ); // HtmlView Page linking property 'Width' for element 'one22'
          _view.one22.linkProperty("Background",  function() { return clr[1]; }, function(_v) { clr[1] = _v; } ); // HtmlView Page linking property 'Background' for element 'one22'
          _view.one22.linkProperty("Value",  function() { return Dmagone; }, function(_v) { Dmagone = _v; } ); // HtmlView Page linking property 'Value' for element 'one22'
          _view.one22.setAction("OnChange", function(_data,_info) {
  DX[1]= Dmagone*Math.cos(angle[1]);
  DY[1]= Dmagone*Math.sin(angle[1]);
  setup();

}); // HtmlView Page setting action 'OnChange' for element 'one22'
          _view.one33.linkProperty("Value",  function() { return Dmagone; }, function(_v) { Dmagone = _v; } ); // HtmlView Page linking property 'Value' for element 'one33'
          _view.one33.linkProperty("Editable",  function() { return _isPaused; } ); // HtmlView Page linking property 'Editable' for element 'one33'
          _view.one33.setAction("OnChange", function(_data,_info) {
  DX[1]= Dmagone*Math.cos(angle[1]);
  DY[1]= Dmagone*Math.sin(angle[1]);
  setup();

}); // HtmlView Page setting action 'OnChange' for element 'one33'
          _view.one44.linkProperty("Background",  function() { return clr[1]; }, function(_v) { clr[1] = _v; } ); // HtmlView Page linking property 'Background' for element 'one44'
          _view.one233.linkProperty("Width",  function() { return (_isEPub)?"0":""; } ); // HtmlView Page linking property 'Width' for element 'one233'
          _view.one233.linkProperty("Background",  function() { return clr[1]; }, function(_v) { clr[1] = _v; } ); // HtmlView Page linking property 'Background' for element 'one233'
          _view.one233.linkProperty("Value",  function() { return angleone; }, function(_v) { angleone = _v; } ); // HtmlView Page linking property 'Value' for element 'one233'
          _view.one233.setAction("OnChange", function(_data,_info) {
  DX[1]=Math.cos(angleone/180*pi)*Dmag[1];
  DY[1]=Math.sin(angleone/180*pi)*Dmag[1];
  setup();

}); // HtmlView Page setting action 'OnChange' for element 'one233'
          _view.one323.linkProperty("Value",  function() { return angleone; }, function(_v) { angleone = _v; } ); // HtmlView Page linking property 'Value' for element 'one323'
          _view.one323.linkProperty("Editable",  function() { return _isPaused; } ); // HtmlView Page linking property 'Editable' for element 'one323'
          _view.one323.setAction("OnChange", function(_data,_info) {
  DX[1]=Math.cos(angleone/180*pi)*Dmag[1];
  DY[1]=Math.sin(angleone/180*pi)*Dmag[1];
  setup();

}); // HtmlView Page setting action 'OnChange' for element 'one323'
          _view.one423.linkProperty("Background",  function() { return clr[1]; }, function(_v) { clr[1] = _v; } ); // HtmlView Page linking property 'Background' for element 'one423'
          _view.two4.linkProperty("Background",  function() { return clr[2]; }, function(_v) { clr[2] = _v; } ); // HtmlView Page linking property 'Background' for element 'two4'
          _view.two22.linkProperty("Width",  function() { return (_isEPub)?"0":""; } ); // HtmlView Page linking property 'Width' for element 'two22'
          _view.two22.linkProperty("Background",  function() { return clr[2]; }, function(_v) { clr[2] = _v; } ); // HtmlView Page linking property 'Background' for element 'two22'
          _view.two22.linkProperty("Value",  function() { return Dmagtwo; }, function(_v) { Dmagtwo = _v; } ); // HtmlView Page linking property 'Value' for element 'two22'
          _view.two22.setAction("OnChange", function(_data,_info) {
  DX[2]= Dmagtwo*Math.cos(angle[2]);
  DY[2]= Dmagtwo*Math.sin(angle[2]);

}); // HtmlView Page setting action 'OnChange' for element 'two22'
          _view.two32.linkProperty("Value",  function() { return Dmagtwo; }, function(_v) { Dmagtwo = _v; } ); // HtmlView Page linking property 'Value' for element 'two32'
          _view.two32.linkProperty("Editable",  function() { return _isPaused; } ); // HtmlView Page linking property 'Editable' for element 'two32'
          _view.two32.setAction("OnChange", function(_data,_info) {
  DX[2]= Dmagtwo*Math.cos(angle[2]);
  DY[2]= Dmagtwo*Math.sin(angle[2]);

}); // HtmlView Page setting action 'OnChange' for element 'two32'
          _view.one432.linkProperty("Background",  function() { return clr[2]; }, function(_v) { clr[2] = _v; } ); // HtmlView Page linking property 'Background' for element 'one432'
          _view.one2322.linkProperty("Width",  function() { return (_isEPub)?"0":""; } ); // HtmlView Page linking property 'Width' for element 'one2322'
          _view.one2322.linkProperty("Background",  function() { return clr[2]; }, function(_v) { clr[2] = _v; } ); // HtmlView Page linking property 'Background' for element 'one2322'
          _view.one2322.linkProperty("Value",  function() { return angletwo; }, function(_v) { angletwo = _v; } ); // HtmlView Page linking property 'Value' for element 'one2322'
          _view.one2322.setAction("OnChange", function(_data,_info) {
  DX[2]=Math.cos(angletwo/180*pi)*Dmag[2];
  DY[2]=Math.sin(angletwo/180*pi)*Dmag[2];

}); // HtmlView Page setting action 'OnChange' for element 'one2322'
          _view.one3222.linkProperty("Value",  function() { return angletwo; }, function(_v) { angletwo = _v; } ); // HtmlView Page linking property 'Value' for element 'one3222'
          _view.one3222.linkProperty("Editable",  function() { return _isPaused; } ); // HtmlView Page linking property 'Editable' for element 'one3222'
          _view.one3222.setAction("OnChange", function(_data,_info) {
  DX[2]=Math.cos(angletwo/180*pi)*Dmag[2];
  DY[2]=Math.sin(angletwo/180*pi)*Dmag[2];

}); // HtmlView Page setting action 'OnChange' for element 'one3222'
          _view.one4222.linkProperty("Background",  function() { return clr[2]; }, function(_v) { clr[2] = _v; } ); // HtmlView Page linking property 'Background' for element 'one4222'
          _view.showsum2.linkProperty("Checked",  function() { return rVIEW; }, function(_v) { rVIEW = _v; } ); // HtmlView Page linking property 'Checked' for element 'showsum2'
          _view.showsum2.setAction("OnCheckOff", function(_data,_info) {
  VIEW[0]=false;
  rVIEW = false;

}); // HtmlView Page setting action 'OnCheckOff' for element 'showsum2'
          _view.showsum2.linkProperty("TextOn",  function() { return l_showsum; }, function(_v) { l_showsum = _v; } ); // HtmlView Page linking property 'TextOn' for element 'showsum2'
          _view.showsum2.linkProperty("TextOff",  function() { return l_showsum; }, function(_v) { l_showsum = _v; } ); // HtmlView Page linking property 'TextOff' for element 'showsum2'
          _view.showsum2.linkProperty("Text",  function() { return l_showsum; }, function(_v) { l_showsum = _v; } ); // HtmlView Page linking property 'Text' for element 'showsum2'
          _view.showsum2.setAction("OnCheckOn", function(_data,_info) {
  X[0]=X[1]; // move the resultant to the start of vector A
  Y[0]=Y[1];
  DX[0]=0; // set initial length of R to zero
  DY[0]=0;
  for(var i=1;i<n;i++) {
    DX[0]+=DX[i]; // add length in loop
    DY[0]+=DY[i];
    TX[i]=X[i]+DX[i]/2; //position text
    TY[i]=Y[i]+DY[i]/2;
  }
  //TX[0]=X[0]+DX[0]/2;
  //TY[0]=Y[0]+DY[0]/2;
  rTX=X[0]+DX[0]/2;
  rTY=Y[0]+DY[0]/2;
  setup();
  VIEW[0]=true;
  rVIEW = true;

}); // HtmlView Page setting action 'OnCheckOn' for element 'showsum2'
          break;
      } // end of switch
    }; // end of new reset

    _model.setView(_view);
    _model.reset();
    _view._enableEPub();
  } // end of _selectView

  _model.setAutoplay(false);
  _model.setFPS(20);
  _model.setStepsPerDisplay(5);
  _selectView(-1); // this includes _model.reset()
  return _model;
}

function vectorsum05_View (_topFrame,_viewNumber,_libraryPath,_codebasePath) {
  var _view;
  switch(_viewNumber) {
    case -10 : break; // make Lint happy
    default :
    case 0: _view = vectorsum05_View_0 (_topFrame); break;
  } // end of switch

  if (_codebasePath) _view._setResourcePath(_codebasePath);

  if (_libraryPath) _view._setLibraryPath(_libraryPath);

  _view._addDescriptionPage('About','./vectorsum05_Intro_1.html');

  return _view;
} // end of main function

function vectorsum05_View_0 (_topFrame) {
  var _view = EJSS_CORE.createView(_topFrame);

  _view._reset = function() {
    _view._clearAll();
    _view._addElement(EJSS_INTERFACE.panel,"panel", _view._topFrame) // EJsS HtmlView.HtmlView Page: declaration of element 'panel'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"component", _view.panel) // EJsS HtmlView.HtmlView Page: declaration of element 'component'
      ;

    _view._addElement(EJSS_INTERFACE.comboBox,"comboBox", _view.component) // EJsS HtmlView.HtmlView Page: declaration of element 'comboBox'
      .setProperty("Tooltip","select examples") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'comboBox'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"label", _view.component) // EJsS HtmlView.HtmlView Page: declaration of element 'label'
      .setProperty("Background","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'label'
      .setProperty("Tooltip","number of vectors, N=") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'label'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'label'
      .setProperty("Text"," N=") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'label'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"slider", _view.component) // EJsS HtmlView.HtmlView Page: declaration of element 'slider'
      .setProperty("Minimum",2) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'slider'
      .setProperty("ShowText",true) // EJsS HtmlView.HtmlView Page: setting property 'ShowText' for element 'slider'
      .setProperty("Format","0") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'slider'
      .setProperty("Background","Blue") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'slider'
      .setProperty("Tooltip","number of vectors to add together") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'slider'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'slider'
      .setProperty("Step",1) // EJsS HtmlView.HtmlView Page: setting property 'Step' for element 'slider'
      ;

    _view._addElement(EJSS_INTERFACE.comboBox,"comboBox2", _view.component) // EJsS HtmlView.HtmlView Page: declaration of element 'comboBox2'
      .setProperty("Tooltip","select component visualization style") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'comboBox2'
      ;

    _view._addElement(EJSS_INTERFACE.twoStateButton,"playPauseButton", _view.component) // EJsS HtmlView.HtmlView Page: declaration of element 'playPauseButton'
      .setProperty("Tooltip","Play/Pause") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'playPauseButton'
      .setProperty("ImageOnUrl","/org/opensourcephysics/resources/controls/images/play.gif") // EJsS HtmlView.HtmlView Page: setting property 'ImageOnUrl' for element 'playPauseButton'
      .setProperty("ImageOffUrl","/org/opensourcephysics/resources/controls/images/pause.gif") // EJsS HtmlView.HtmlView Page: setting property 'ImageOffUrl' for element 'playPauseButton'
      ;

    _view._addElement(EJSS_INTERFACE.button,"stepButton", _view.component) // EJsS HtmlView.HtmlView Page: declaration of element 'stepButton'
      .setProperty("ImageUrl","/org/opensourcephysics/resources/controls/images/stepforward.gif") // EJsS HtmlView.HtmlView Page: setting property 'ImageUrl' for element 'stepButton'
      ;

    _view._addElement(EJSS_INTERFACE.button,"resetButton", _view.component) // EJsS HtmlView.HtmlView Page: declaration of element 'resetButton'
      .setProperty("ImageUrl","/org/opensourcephysics/resources/controls/images/reset.gif") // EJsS HtmlView.HtmlView Page: setting property 'ImageUrl' for element 'resetButton'
      ;

    _view._addElement(EJSS_INTERFACE.twoStateButton,"FullScreen2Button", _view.component) // EJsS HtmlView.HtmlView Page: declaration of element 'FullScreen2Button'
      .setProperty("Tooltip","Fullscreen ") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'FullScreen2Button'
      .setProperty("ImageOnUrl","/org/opensourcephysics/resources/controls/images/window.gif") // EJsS HtmlView.HtmlView Page: setting property 'ImageOnUrl' for element 'FullScreen2Button'
      .setProperty("ImageOffUrl","/org/opensourcephysics/resources/controls/images/close.gif") // EJsS HtmlView.HtmlView Page: setting property 'ImageOffUrl' for element 'FullScreen2Button'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"panel2", _view.panel) // EJsS HtmlView.HtmlView Page: declaration of element 'panel2'
      .setProperty("Width","100%") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'panel2'
      ;

    _view._addElement(EJSS_DRAWING2D.plottingPanel,"plottingPanel", _view.panel2) // EJsS HtmlView.HtmlView Page: declaration of element 'plottingPanel'
      .setProperty("Gutters",[0,0,0,0]) // EJsS HtmlView.HtmlView Page: setting property 'Gutters' for element 'plottingPanel'
      .setProperty("Background","url(#mygrandient2)") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'plottingPanel'
      .setProperty("YScalePrecision",0) // EJsS HtmlView.HtmlView Page: setting property 'YScalePrecision' for element 'plottingPanel'
      .setProperty("XFixedTick",0) // EJsS HtmlView.HtmlView Page: setting property 'XFixedTick' for element 'plottingPanel'
      .setProperty("Enabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Enabled' for element 'plottingPanel'
      .setProperty("SquareAspect",true) // EJsS HtmlView.HtmlView Page: setting property 'SquareAspect' for element 'plottingPanel'
      .setProperty("YFixedTick",0) // EJsS HtmlView.HtmlView Page: setting property 'YFixedTick' for element 'plottingPanel'
      .setProperty("TRMessage","Scalars and Vectors: Vector Addition by Graphical Method") // EJsS HtmlView.HtmlView Page: setting property 'TRMessage' for element 'plottingPanel'
      .setProperty("YAutoTicks",false) // EJsS HtmlView.HtmlView Page: setting property 'YAutoTicks' for element 'plottingPanel'
      .setProperty("AutoScaleY",false) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleY' for element 'plottingPanel'
      .setProperty("AutoScaleX",false) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleX' for element 'plottingPanel'
      .setProperty("XAutoTicks",false) // EJsS HtmlView.HtmlView Page: setting property 'XAutoTicks' for element 'plottingPanel'
      .setProperty("XScalePrecision",0) // EJsS HtmlView.HtmlView Page: setting property 'XScalePrecision' for element 'plottingPanel'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"always", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'always'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"velocitydrag222", _view.always) // EJsS HtmlView.HtmlView Page: declaration of element 'velocitydrag222'
      .setProperty("FillColor","rgba(0,255,255,0.0)") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'velocitydrag222'
      .setProperty("SizeX",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'velocitydrag222'
      .setProperty("ShapeType","WHEEL") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'velocitydrag222'
      .setProperty("LineColor","Magenta") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'velocitydrag222'
      .setProperty("SizeY",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'velocitydrag222'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'velocitydrag222'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"velocitydrag22", _view.always) // EJsS HtmlView.HtmlView Page: declaration of element 'velocitydrag22'
      .setProperty("FillColor","rgba(0,255,255,0.0)") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'velocitydrag22'
      .setProperty("SizeX",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'velocitydrag22'
      .setProperty("ShapeType","WHEEL") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'velocitydrag22'
      .setProperty("LineColor","Magenta") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'velocitydrag22'
      .setProperty("SizeY",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'velocitydrag22'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'velocitydrag22'
      ;

    _view._addElement(EJSS_DRAWING2D.arrowSet,"arrowSet", _view.always) // EJsS HtmlView.HtmlView Page: declaration of element 'arrowSet'
      .setProperty("EnabledSize","ENABLED_ANY") // EJsS HtmlView.HtmlView Page: setting property 'EnabledSize' for element 'arrowSet'
      .setProperty("LineWidth",4) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'arrowSet'
      .setProperty("EnabledPosition","ENABLED_ANY") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element 'arrowSet'
      ;

    _view._addElement(EJSS_DRAWING2D.shapeSet,"shapeSet", _view.always) // EJsS HtmlView.HtmlView Page: declaration of element 'shapeSet'
      .setProperty("SizeX",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'shapeSet'
      .setProperty("ShapeType","WHEEL") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'shapeSet'
      .setProperty("SizeY",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'shapeSet'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'shapeSet'
      ;

    _view._addElement(EJSS_DRAWING2D.textSet,"n", _view.always) // EJsS HtmlView.HtmlView Page: declaration of element 'n'
      .setProperty("SizeX",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'n'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'n'
      .setProperty("SizeY",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'n'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'n'
      ;

    _view._addElement(EJSS_DRAWING2D.textSet,"angle", _view.always) // EJsS HtmlView.HtmlView Page: declaration of element 'angle'
      .setProperty("SizeX",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'angle'
      .setProperty("RelativePosition","WEST") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element 'angle'
      .setProperty("SizeY",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'angle'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'angle'
      ;

    _view._addElement(EJSS_DRAWING2D.textSet,"AB", _view.always) // EJsS HtmlView.HtmlView Page: declaration of element 'AB'
      .setProperty("SizeX",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'AB'
      .setProperty("RelativePosition","WEST") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element 'AB'
      .setProperty("SizeY",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'AB'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'AB'
      ;

    _view._addElement(EJSS_DRAWING2D.text,"R", _view.always) // EJsS HtmlView.HtmlView Page: declaration of element 'R'
      .setProperty("RelativePosition","WEST") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element 'R'
      .setProperty("LineColor","Blue") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'R'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"sky", _view.always) // EJsS HtmlView.HtmlView Page: declaration of element 'sky'
      .setProperty("FillColor","url(#mygrandient2)") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'sky'
      .setProperty("ShapeType","RECTANGLE") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'sky'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'sky'
      .setProperty("Y",-0.1) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'sky'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'sky'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"Component1", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'Component1'
      ;

    _view._addElement(EJSS_DRAWING2D.arrowSet,"arrowSetX", _view.Component1) // EJsS HtmlView.HtmlView Page: declaration of element 'arrowSetX'
      .setProperty("MarkEnd","POINTED") // EJsS HtmlView.HtmlView Page: setting property 'MarkEnd' for element 'arrowSetX'
      .setProperty("LineColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'arrowSetX'
      .setProperty("SizeY",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'arrowSetX'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'arrowSetX'
      ;

    _view._addElement(EJSS_DRAWING2D.arrowSet,"arrowSetY", _view.Component1) // EJsS HtmlView.HtmlView Page: declaration of element 'arrowSetY'
      .setProperty("MarkEnd","POINTED") // EJsS HtmlView.HtmlView Page: setting property 'MarkEnd' for element 'arrowSetY'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'arrowSetY'
      .setProperty("LineColor","Magenta") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'arrowSetY'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'arrowSetY'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"Component2", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'Component2'
      ;

    _view._addElement(EJSS_DRAWING2D.arrowSet,"arrowSetX2", _view.Component2) // EJsS HtmlView.HtmlView Page: declaration of element 'arrowSetX2'
      .setProperty("MarkEnd","POINTED") // EJsS HtmlView.HtmlView Page: setting property 'MarkEnd' for element 'arrowSetX2'
      .setProperty("LineColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'arrowSetX2'
      .setProperty("SizeY",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'arrowSetX2'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'arrowSetX2'
      ;

    _view._addElement(EJSS_DRAWING2D.arrowSet,"arrowSetY2", _view.Component2) // EJsS HtmlView.HtmlView Page: declaration of element 'arrowSetY2'
      .setProperty("MarkEnd","POINTED") // EJsS HtmlView.HtmlView Page: setting property 'MarkEnd' for element 'arrowSetY2'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'arrowSetY2'
      .setProperty("LineColor","Magenta") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'arrowSetY2'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'arrowSetY2'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"Component3", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'Component3'
      ;

    _view._addElement(EJSS_DRAWING2D.arrowSet,"arrowSetX3", _view.Component3) // EJsS HtmlView.HtmlView Page: declaration of element 'arrowSetX3'
      .setProperty("MarkEnd","POINTED") // EJsS HtmlView.HtmlView Page: setting property 'MarkEnd' for element 'arrowSetX3'
      .setProperty("LineColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'arrowSetX3'
      .setProperty("SizeY",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'arrowSetX3'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'arrowSetX3'
      ;

    _view._addElement(EJSS_DRAWING2D.segmentSet,"segmentSetStartX", _view.Component3) // EJsS HtmlView.HtmlView Page: declaration of element 'segmentSetStartX'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'segmentSetStartX'
      .setProperty("LineColor","DarkGray") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'segmentSetStartX'
      .setProperty("Attributes",{ "stroke-dasharray":"1 1 1 1" }) // EJsS HtmlView.HtmlView Page: setting property 'Attributes' for element 'segmentSetStartX'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'segmentSetStartX'
      ;

    _view._addElement(EJSS_DRAWING2D.segmentSet,"segmentSetEndX", _view.Component3) // EJsS HtmlView.HtmlView Page: declaration of element 'segmentSetEndX'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'segmentSetEndX'
      .setProperty("LineColor","Orange") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'segmentSetEndX'
      .setProperty("Attributes",{ "stroke-dasharray":"3 3 3 3" }) // EJsS HtmlView.HtmlView Page: setting property 'Attributes' for element 'segmentSetEndX'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'segmentSetEndX'
      ;

    _view._addElement(EJSS_DRAWING2D.arrowSet,"arrowSetY3", _view.Component3) // EJsS HtmlView.HtmlView Page: declaration of element 'arrowSetY3'
      .setProperty("MarkEnd","POINTED") // EJsS HtmlView.HtmlView Page: setting property 'MarkEnd' for element 'arrowSetY3'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'arrowSetY3'
      .setProperty("LineColor","Magenta") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'arrowSetY3'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'arrowSetY3'
      ;

    _view._addElement(EJSS_DRAWING2D.segmentSet,"segmentSetStartY", _view.Component3) // EJsS HtmlView.HtmlView Page: declaration of element 'segmentSetStartY'
      .setProperty("LineColor","DarkGray") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'segmentSetStartY'
      .setProperty("Attributes",{ "stroke-dasharray":"1 1 1 1" }) // EJsS HtmlView.HtmlView Page: setting property 'Attributes' for element 'segmentSetStartY'
      .setProperty("SizeY",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'segmentSetStartY'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'segmentSetStartY'
      ;

    _view._addElement(EJSS_DRAWING2D.segmentSet,"segmentSetEndY", _view.Component3) // EJsS HtmlView.HtmlView Page: declaration of element 'segmentSetEndY'
      .setProperty("LineColor","Orange") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'segmentSetEndY'
      .setProperty("Attributes",{"stroke-dasharray":"3 3 3 3" }) // EJsS HtmlView.HtmlView Page: setting property 'Attributes' for element 'segmentSetEndY'
      .setProperty("SizeY",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'segmentSetEndY'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'segmentSetEndY'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"component2", _view.panel) // EJsS HtmlView.HtmlView Page: declaration of element 'component2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"one5", _view.component2) // EJsS HtmlView.HtmlView Page: declaration of element 'one5'
      .setProperty("Tooltip","magnitude of vector 1") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'one5'
      .setProperty("Text"," |V₁|=") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'one5'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"one22", _view.component2) // EJsS HtmlView.HtmlView Page: declaration of element 'one22'
      .setProperty("Maximum",150) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'one22'
      .setProperty("Minimum",0) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'one22'
      .setProperty("Tooltip","magnitude of vector 1") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'one22'
      .setProperty("Step",10) // EJsS HtmlView.HtmlView Page: setting property 'Step' for element 'one22'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"one33", _view.component2) // EJsS HtmlView.HtmlView Page: declaration of element 'one33'
      .setProperty("Width",30) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'one33'
      .setProperty("Format","00.0") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'one33'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"one44", _view.component2) // EJsS HtmlView.HtmlView Page: declaration of element 'one44'
      .setProperty("Tooltip","angle vector 1 with positive x axis") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'one44'
      .setProperty("Text"," ϑ₁=") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'one44'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"one233", _view.component2) // EJsS HtmlView.HtmlView Page: declaration of element 'one233'
      .setProperty("Maximum",180) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'one233'
      .setProperty("Minimum",-180) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'one233'
      .setProperty("Tooltip","angle with positive x axis of vector 1") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'one233'
      .setProperty("Step",5) // EJsS HtmlView.HtmlView Page: setting property 'Step' for element 'one233'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"one323", _view.component2) // EJsS HtmlView.HtmlView Page: declaration of element 'one323'
      .setProperty("Width",30) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'one323'
      .setProperty("Format","00.0") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'one323'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"one423", _view.component2) // EJsS HtmlView.HtmlView Page: declaration of element 'one423'
      .setProperty("Tooltip","degrees") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'one423'
      .setProperty("Text","°") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'one423'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"two4", _view.component2) // EJsS HtmlView.HtmlView Page: declaration of element 'two4'
      .setProperty("Tooltip","magnitude of vector 2") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'two4'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'two4'
      .setProperty("Text"," |V₂|=") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'two4'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"two22", _view.component2) // EJsS HtmlView.HtmlView Page: declaration of element 'two22'
      .setProperty("Maximum",150) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'two22'
      .setProperty("Minimum",0) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'two22'
      .setProperty("Tooltip","magnitude of vector 2") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'two22'
      .setProperty("Step",10) // EJsS HtmlView.HtmlView Page: setting property 'Step' for element 'two22'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"two32", _view.component2) // EJsS HtmlView.HtmlView Page: declaration of element 'two32'
      .setProperty("Width",30) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'two32'
      .setProperty("Format","00.0") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'two32'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"one432", _view.component2) // EJsS HtmlView.HtmlView Page: declaration of element 'one432'
      .setProperty("Tooltip","angle vector 2 with positive x axis") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'one432'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'one432'
      .setProperty("Text"," ϑ₂=") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'one432'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"one2322", _view.component2) // EJsS HtmlView.HtmlView Page: declaration of element 'one2322'
      .setProperty("Maximum",180) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'one2322'
      .setProperty("Minimum",-180) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'one2322'
      .setProperty("Tooltip","angle with positive x axis of vector 2") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'one2322'
      .setProperty("Step",5) // EJsS HtmlView.HtmlView Page: setting property 'Step' for element 'one2322'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"one3222", _view.component2) // EJsS HtmlView.HtmlView Page: declaration of element 'one3222'
      .setProperty("Width",30) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'one3222'
      .setProperty("Format","00.0") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'one3222'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"one4222", _view.component2) // EJsS HtmlView.HtmlView Page: declaration of element 'one4222'
      .setProperty("Tooltip","degrees") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'one4222'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'one4222'
      .setProperty("Text","°") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'one4222'
      ;

    _view._addElement(EJSS_INTERFACE.checkBox,"showsum2", _view.component2) // EJsS HtmlView.HtmlView Page: declaration of element 'showsum2'
      .setProperty("Background","Red") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'showsum2'
      ;

  };

  return _view;
}


//--><!]]></script>
  </head>
  <body>
    <div role="button" id="_topFrame" style="text-align:center"></div>
  <div id="metadata" class="metadata">
    <br />
    <div id="title_author">
      <hr />
      <b>Title and author:</b>
      <p>
      Scalars and Vectors: Vector Addition by Graphical Method<br />
     <img alt="Logo" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/01_measurement/ejss_src_vectorsum05/Vectors4/Updated Picture.PNG" />
      </p>
      <p>
      <img alt="author image" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/01_measurement/ejss_src_vectorsum05/01authorlookang50x50.png" />
 wee loo kang; tina
      </p>
    </div>
    <hr />
    <p></p>
    <div id="copyright_message">
      <div class="cc_left"  style="float:left">&#169; 2018, wee loo kang; tina. Compiled with EJS 6.0_beta (180814)
</div>
      <div class="cc_right" style="float:right">    Released under a <a rel="license" target="_blank" href="http://creativecommons.org/licenses/by-nc-sa/4.0/deed.en_US"> <img alt="Creative Commons Attribution-NonCommercial-ShareAlike" src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_6.0_beta/bin/javascript/lib/images/cc_icon.png" /> </a> license.</div>
    </div>
  </div>
    <script type="text/javascript"><!--//--><![CDATA[//><!--
      var _model;
      var _scorm;
      window.addEventListener('load',
        function () { 
          _model =  new vectorsum05("_topFrame","file:/Users/lookang/Google%20Drive/PublicLawrence/EjsS_6.0_beta/bin/javascript/lib/","file:/Users/lookang/Google%20Drive/PublicLawrence/workspace/source/EJSS/01_measurement/ejss_src_vectorsum05/");
          if (typeof _isApp !== "undefined" && _isApp) _model.setRunAlways(true);
          TextResizeDetector.TARGET_ELEMENT_ID = '_topFrame';
          TextResizeDetector.USER_INIT_FUNC = function () {
            var iBase = TextResizeDetector.addEventListener(function(e,args) {
              _model._fontResized(args[0].iBase,args[0].iSize,args[0].iDelta);
              },null);
            _model._fontResized(iBase);
          };
          _model.onload();
        }, false);
    //--><!]]></script>
  </body>
</html>
