<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>More than Less than Question Generator</title>
    <link rel="stylesheet"  type="text/css" href="file:///Users/lookang/Google Drive/PublicLawrence/workspace/output/_ejs_library/css/ejss.css" />
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/scripts/common_script.js"></script>
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/scripts/textresizedetector.js"></script>
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/ejsS.v1.min.js"></script>
<script type="text/javascript"><!--//--><![CDATA[//><!--
/* _inputParameters: an object with different values for the model parameters */
function morethanlessthan(_topFrame,_libraryPath,_codebasePath, _inputParameters) {
  var _model = EJSS_CORE.createAnimationLMS();
  var _view;
  var _isPlaying = false;
  var _isPaused = true;
  var _isMobile = (navigator===undefined) ? false : navigator.userAgent.match(/iPhone|iPad|iPod|Android|BlackBerry|Opera Mini|IEMobile/i);

var _stringProperties = {};
  var _tools = {
    showInputDialog : EJSS_INTERFACE.BoxPanel.showInputDialog,
    showOkDialog : EJSS_INTERFACE.BoxPanel.showOkDialog,
    showOkCancelDialog : EJSS_INTERFACE.BoxPanel.showOkCancelDialog,
    downloadText: EJSS_TOOLS.File.downloadText,
    uploadText: function(action) { EJSS_TOOLS.File.uploadText(_model,action); } 
  };

  function _play()  { _isPaused = false; _isPlaying = true;  _model.play();  }
  function _pause() { _isPaused = true;  _isPlaying = false; _model.pause(); }
  function _step()  { _pause();  _model.step(); }
  function _reset() { _model.reset();  _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); }
  _model._play  = _play;
  _model._pause = _pause;
  _model._step  = _step;
  _model._reset = _reset;
  function _update() { _model.update(); }
  function _initialize() { _model.initialize(); }
  function _setFPS(_fps) { _model.setFPS(_fps); }
  function _setDelay(_delay) { _model.setDelay(_delay); }
  function _setStepsPerDisplay(_spd) { _model.setStepsPerDisplay(_spd); }
  function _setUpdateView(_updateView) { _model.setUpdateView(_updateView); }
  function _setAutoplay(_auto) { _model.setAutoplay(_auto); }
  function _println(_message) { console.log(_message); }

  function _breakAfterThisPage() { _model.setShouldBreak(true); }

  function _resetSolvers() { if (_model.resetSolvers) _model.resetSolvers(); }

  function _saveText(name,type,content) { if (_model.saveText) _model.saveText(name,type,content); }

  function _saveState(name) { if (_model.saveState) _model.saveState(name); }

  function _saveImage(name,panelname) { if (_model.saveImage) _model.saveImage(name,panelname); }

  function _readState(url,type) { if (_model.readState) _model.readState(url,type); }

  function _readText(url,type,varname) { if (_model.readText) _model.readText(url,type,varname); }

  function _getStringProperty(propertyName) {
    var _value = _stringProperties[propertyName];
    if (_value===undefined) return propertyName;
    else return _value;
  }
  var __pagesEnabled = [];
  function _setPageEnabled(pageName,enabled) { __pagesEnabled[pageName] = enabled; }

  var Q1; // EjsS Model.Variables.Var Table.Q1
  var font; // EjsS Model.Variables.Var Table.font
  var xmin; // EjsS Model.Variables.Var Table.xmin
  var xmax; // EjsS Model.Variables.Var Table.xmax
  var ymin; // EjsS Model.Variables.Var Table.ymin
  var ymax; // EjsS Model.Variables.Var Table.ymax
  var rangex; // EjsS Model.Variables.Var Table.rangex
  var rangey; // EjsS Model.Variables.Var Table.rangey
  var sizex; // EjsS Model.Variables.Var Table.sizex
  var sizey; // EjsS Model.Variables.Var Table.sizey
  var selected; // EjsS Model.Variables.Var Table.selected
  var text; // EjsS Model.Variables.Var Table.text
  var questionmorelessnumber; // EjsS Model.Variables.Var Table.questionmorelessnumber
  var questionmorelessnumbers; // EjsS Model.Variables.Var Table.questionmorelessnumbers
  var questionthannumber; // EjsS Model.Variables.Var Table.questionthannumber
  var questionthannumbers; // EjsS Model.Variables.Var Table.questionthannumbers
  var moreless; // EjsS Model.Variables.Var Table.moreless
  var sign; // EjsS Model.Variables.Var Table.sign
  var questionanswer; // EjsS Model.Variables.Var Table.questionanswer
  var questionanswers; // EjsS Model.Variables.Var Table.questionanswers
  var textquestion; // EjsS Model.Variables.Var Table.textquestion
  var questionmorelessnumbershow; // EjsS Model.Variables.Var Table.questionmorelessnumbershow
  var questionthannumbershow; // EjsS Model.Variables.Var Table.questionthannumbershow
  var questionanswershow; // EjsS Model.Variables.Var Table.questionanswershow
  var score; // EjsS Model.Variables.Var Table.score
  var pi; // EjsS Model.Variables.Var Table.pi
  var y1; // EjsS Model.Variables.Var Table.y1
  var ysize; // EjsS Model.Variables.Var Table.ysize
  var question1type; // EjsS Model.Variables.Var Table.question1type
  var question2type; // EjsS Model.Variables.Var Table.question2type
  var question3type; // EjsS Model.Variables.Var Table.question3type
  var colorred; // EjsS Model.Variables.Var Table.colorred
  var colorblue; // EjsS Model.Variables.Var Table.colorblue
  var colorgreen; // EjsS Model.Variables.Var Table.colorgreen

  var iOS; // EjsS Model.Variables.layout.iOS
  var Android; // EjsS Model.Variables.layout.Android
  var iPad; // EjsS Model.Variables.layout.iPad
  var iPhone; // EjsS Model.Variables.layout.iPhone
  var Width; // EjsS Model.Variables.layout.Width
  var Height; // EjsS Model.Variables.layout.Height
  var Width1; // EjsS Model.Variables.layout.Width1
  var Width2; // EjsS Model.Variables.layout.Width2
  var world; // EjsS Model.Variables.layout.world
  var graph; // EjsS Model.Variables.layout.graph
  var disabledworld; // EjsS Model.Variables.layout.disabledworld
  var disabled; // EjsS Model.Variables.layout.disabled

  var spin; // EjsS Model.Variables.simplespring.spin
  var t; // EjsS Model.Variables.simplespring.t
  var dt; // EjsS Model.Variables.simplespring.dt

  var _privateOdesList;
  var _ODEi_evolution1;
  var userEvents1=[];

  _model.getOdes = function() { return [_ODEi_evolution1]; };

  _model.removeEvents = function(){
    userEvents1=[];
  };

  function _serialize() { return _model.serialize(); }

  _model._userSerialize = function() {
    return {
      Q1 : Q1,
      font : font,
      xmin : xmin,
      xmax : xmax,
      ymin : ymin,
      ymax : ymax,
      rangex : rangex,
      rangey : rangey,
      sizex : sizex,
      sizey : sizey,
      selected : selected,
      text : text,
      questionmorelessnumber : questionmorelessnumber,
      questionmorelessnumbers : questionmorelessnumbers,
      questionthannumber : questionthannumber,
      questionthannumbers : questionthannumbers,
      moreless : moreless,
      sign : sign,
      questionanswer : questionanswer,
      questionanswers : questionanswers,
      textquestion : textquestion,
      questionmorelessnumbershow : questionmorelessnumbershow,
      questionthannumbershow : questionthannumbershow,
      questionanswershow : questionanswershow,
      score : score,
      pi : pi,
      y1 : y1,
      ysize : ysize,
      question1type : question1type,
      question2type : question2type,
      question3type : question3type,
      colorred : colorred,
      colorblue : colorblue,
      colorgreen : colorgreen,
      iOS : iOS,
      Android : Android,
      iPad : iPad,
      iPhone : iPhone,
      Width : Width,
      Height : Height,
      Width1 : Width1,
      Width2 : Width2,
      world : world,
      graph : graph,
      disabledworld : disabledworld,
      disabled : disabled,
      spin : spin,
      t : t,
      dt : dt
    };
  };

  _model._readParameters = function(json) {
    if(typeof json.Q1 != "undefined") Q1 = json.Q1;
    if(typeof json.font != "undefined") font = json.font;
    if(typeof json.xmin != "undefined") xmin = json.xmin;
    if(typeof json.xmax != "undefined") xmax = json.xmax;
    if(typeof json.ymin != "undefined") ymin = json.ymin;
    if(typeof json.ymax != "undefined") ymax = json.ymax;
    if(typeof json.rangex != "undefined") rangex = json.rangex;
    if(typeof json.rangey != "undefined") rangey = json.rangey;
    if(typeof json.sizex != "undefined") sizex = json.sizex;
    if(typeof json.sizey != "undefined") sizey = json.sizey;
    if(typeof json.selected != "undefined") selected = json.selected;
    if(typeof json.text != "undefined") text = json.text;
    if(typeof json.questionmorelessnumber != "undefined") questionmorelessnumber = json.questionmorelessnumber;
    if(typeof json.questionmorelessnumbers != "undefined") questionmorelessnumbers = json.questionmorelessnumbers;
    if(typeof json.questionthannumber != "undefined") questionthannumber = json.questionthannumber;
    if(typeof json.questionthannumbers != "undefined") questionthannumbers = json.questionthannumbers;
    if(typeof json.moreless != "undefined") moreless = json.moreless;
    if(typeof json.sign != "undefined") sign = json.sign;
    if(typeof json.questionanswer != "undefined") questionanswer = json.questionanswer;
    if(typeof json.questionanswers != "undefined") questionanswers = json.questionanswers;
    if(typeof json.textquestion != "undefined") textquestion = json.textquestion;
    if(typeof json.questionmorelessnumbershow != "undefined") questionmorelessnumbershow = json.questionmorelessnumbershow;
    if(typeof json.questionthannumbershow != "undefined") questionthannumbershow = json.questionthannumbershow;
    if(typeof json.questionanswershow != "undefined") questionanswershow = json.questionanswershow;
    if(typeof json.score != "undefined") score = json.score;
    if(typeof json.pi != "undefined") pi = json.pi;
    if(typeof json.y1 != "undefined") y1 = json.y1;
    if(typeof json.ysize != "undefined") ysize = json.ysize;
    if(typeof json.question1type != "undefined") question1type = json.question1type;
    if(typeof json.question2type != "undefined") question2type = json.question2type;
    if(typeof json.question3type != "undefined") question3type = json.question3type;
    if(typeof json.colorred != "undefined") colorred = json.colorred;
    if(typeof json.colorblue != "undefined") colorblue = json.colorblue;
    if(typeof json.colorgreen != "undefined") colorgreen = json.colorgreen;
    if(typeof json.iOS != "undefined") iOS = json.iOS;
    if(typeof json.Android != "undefined") Android = json.Android;
    if(typeof json.iPad != "undefined") iPad = json.iPad;
    if(typeof json.iPhone != "undefined") iPhone = json.iPhone;
    if(typeof json.Width != "undefined") Width = json.Width;
    if(typeof json.Height != "undefined") Height = json.Height;
    if(typeof json.Width1 != "undefined") Width1 = json.Width1;
    if(typeof json.Width2 != "undefined") Width2 = json.Width2;
    if(typeof json.world != "undefined") world = json.world;
    if(typeof json.graph != "undefined") graph = json.graph;
    if(typeof json.disabledworld != "undefined") disabledworld = json.disabledworld;
    if(typeof json.disabled != "undefined") disabled = json.disabled;
    if(typeof json.spin != "undefined") spin = json.spin;
    if(typeof json.t != "undefined") t = json.t;
    if(typeof json.dt != "undefined") dt = json.dt;
  };

  _model._inputAndPublicParameters = ["Q1",  "font",  "xmin",  "xmax",  "ymin",  "ymax",  "rangex",  "rangey",  "sizex",  "sizey",  "selected",  "text",  "questionmorelessnumber",  "questionmorelessnumbers",  "questionthannumber",  "questionthannumbers",  "moreless",  "sign",  "questionanswer",  "questionanswers",  "textquestion",  "questionmorelessnumbershow",  "questionthannumbershow",  "questionanswershow",  "score",  "pi",  "y1",  "ysize",  "question1type",  "question2type",  "question3type",  "colorred",  "colorblue",  "colorgreen",  "iOS",  "Android",  "iPad",  "iPhone",  "Width",  "Height",  "Width1",  "Width2",  "world",  "graph",  "disabledworld",  "disabled",  "spin",  "t",  "dt"]; 

  _model._outputAndPublicParameters = ["Q1",  "font",  "xmin",  "xmax",  "ymin",  "ymax",  "rangex",  "rangey",  "sizex",  "sizey",  "selected",  "text",  "questionmorelessnumber",  "questionmorelessnumbers",  "questionthannumber",  "questionthannumbers",  "moreless",  "sign",  "questionanswer",  "questionanswers",  "textquestion",  "questionmorelessnumbershow",  "questionthannumbershow",  "questionanswershow",  "score",  "pi",  "y1",  "ysize",  "question1type",  "question2type",  "question3type",  "colorred",  "colorblue",  "colorgreen",  "iOS",  "Android",  "iPad",  "iPhone",  "Width",  "Height",  "Width1",  "Width2",  "world",  "graph",  "disabledworld",  "disabled",  "spin",  "t",  "dt"];

  function _unserialize(json) { return _model.unserialize(json); }

  _model._userUnserialize = function(json) {
    _model._readParameters(json);
   _resetSolvers();
   _model.update();
  };

  _model.addToReset(function() {
    __pagesEnabled["svg"] = true;
    __pagesEnabled["undefined"] = true;
    __pagesEnabled["generatequestion"] = true;
    __pagesEnabled["animationspeed"] = true;
    __pagesEnabled["Evol Page"] = true;
    __pagesEnabled["Event"] = true;
    __pagesEnabled["FixRel Page"] = true;
    __pagesEnabled["FixRel Page 3"] = true;
    __pagesEnabled["questionrandomiser"] = true;
  });

  _model.addToReset(function() {
    font = "normal normal 4vw "; // EjsS Model.Variables.Var Table.font
    xmin = 0; // EjsS Model.Variables.Var Table.xmin
    xmax = 40; // EjsS Model.Variables.Var Table.xmax
    ymin = -2; // EjsS Model.Variables.Var Table.ymin
    ymax = 1; // EjsS Model.Variables.Var Table.ymax
    rangex = xmax-xmin; // EjsS Model.Variables.Var Table.rangex
    rangey = ymax-ymin; // EjsS Model.Variables.Var Table.rangey
    sizex = rangex/20; // EjsS Model.Variables.Var Table.sizex
    sizey = rangey/20; // EjsS Model.Variables.Var Table.sizey
    selected = new Array(1); // EjsS Model.Variables.Var Table.selected
    (function () {
      var _i0;
      for (_i0=0; _i0<1; _i0+=1) {  // EjsS Model.Variables.Var Table.selected
        selected[_i0] = "shm_with_xo=0,vo=2";  // EjsS Model.Variables.Var Table.selected
      }
    }());
    text = "select dropdown menu and click play"; // EjsS Model.Variables.Var Table.text
    questionmorelessnumber = Math.ceil(Math.random()*5); // EjsS Model.Variables.Var Table.questionmorelessnumber
    questionmorelessnumbers = questionmorelessnumber; // EjsS Model.Variables.Var Table.questionmorelessnumbers
    questionthannumber = Math.round(Math.random()*35); // EjsS Model.Variables.Var Table.questionthannumber
    questionthannumbers = questionthannumber; // EjsS Model.Variables.Var Table.questionthannumbers
    moreless = ""; // EjsS Model.Variables.Var Table.moreless
    sign = 0; // EjsS Model.Variables.Var Table.sign
    questionanswer = 21; // EjsS Model.Variables.Var Table.questionanswer
    questionanswers = questionanswer; // EjsS Model.Variables.Var Table.questionanswers
    textquestion = "_______ more than 17 is 21"; // EjsS Model.Variables.Var Table.textquestion
    questionanswershow = false; // EjsS Model.Variables.Var Table.questionanswershow
    pi = Math.PI; // EjsS Model.Variables.Var Table.pi
    y1 = sizey*5/2; // EjsS Model.Variables.Var Table.y1
    ysize = 0.2; // EjsS Model.Variables.Var Table.ysize
  });

  _model.addToReset(function() {
    iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream; // EjsS Model.Variables.layout.iOS
    Android = /Android|android/i.test(navigator.userAgent); // EjsS Model.Variables.layout.Android
    iPad = /iPad/.test(navigator.userAgent) && !window.MSStream; // EjsS Model.Variables.layout.iPad
    iPhone = /iPhone|iPod/.test(navigator.userAgent) && !window.MSStream; // EjsS Model.Variables.layout.iPhone
    Width = (_isEPub)?"400":"100%"; // EjsS Model.Variables.layout.Width
    Height = (_isEPub)?"500":"100%"; // EjsS Model.Variables.layout.Height
    Width1 = "100%"; // EjsS Model.Variables.layout.Width1
    Width2 = "50%"; // EjsS Model.Variables.layout.Width2
    world = true; // EjsS Model.Variables.layout.world
    graph = true; // EjsS Model.Variables.layout.graph
    disabledworld = false; // EjsS Model.Variables.layout.disabledworld
    disabled = false; // EjsS Model.Variables.layout.disabled
  });

  _model.addToReset(function() {
    spin = Math.random(); // EjsS Model.Variables.simplespring.spin
    t = 0; // EjsS Model.Variables.simplespring.t
    dt = questionmorelessnumbers/20; // EjsS Model.Variables.simplespring.dt
  });

  if (_inputParameters) {
    _inputParameters = _model.parseInputParameters(_inputParameters);
    if (_inputParameters) _model.addToReset(function() { _model._readParameters(_inputParameters); });
  }

  _model.addToReset(function() {
    _privateOdesList=[];
    _ODEi_evolution1 = _ODE_evolution1();
    _privateOdesList.push(_ODEi_evolution1);
  });

  _model.addToReset(function() {
    _model.setAutoplay(false);
    _model.setPauseOnPageExit(true);
    _model.setFPS(20);
    _model.setStepsPerDisplay(1);
  });

  //https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Using_full_screen_mode  // > CustomCode.fullscreen:1
  // does not work for iOS   // > CustomCode.fullscreen:2
  /*jslint browser:true */  // > CustomCode.fullscreen:3
  function toggleFullScreen() {  // > CustomCode.fullscreen:4
    if (!document.fullscreenElement &&    // alternative standard method  // > CustomCode.fullscreen:5
        !document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement ) {  // current working methods  // > CustomCode.fullscreen:6
      if (document.documentElement.requestFullscreen) {  // > CustomCode.fullscreen:7
        document.documentElement.requestFullscreen();  // > CustomCode.fullscreen:8
      } else if (document.documentElement.msRequestFullscreen) {  // > CustomCode.fullscreen:9
        document.documentElement.msRequestFullscreen();  // > CustomCode.fullscreen:10
      } else if (document.documentElement.mozRequestFullScreen) {  // > CustomCode.fullscreen:11
        document.documentElement.mozRequestFullScreen();  // > CustomCode.fullscreen:12
      } else if (document.documentElement.webkitRequestFullscreen) {  // > CustomCode.fullscreen:13
        document.documentElement.webkitRequestFullscreen();  // > CustomCode.fullscreen:14
      }  // > CustomCode.fullscreen:15
    } else {  // > CustomCode.fullscreen:16
      if (document.exitFullscreen) {  // > CustomCode.fullscreen:17
        document.exitFullscreen();  // > CustomCode.fullscreen:18
      } else if (document.msExitFullscreen) {  // > CustomCode.fullscreen:19
        document.msExitFullscreen();  // > CustomCode.fullscreen:20
      } else if (document.mozCancelFullScreen) {  // > CustomCode.fullscreen:21
        document.mozCancelFullScreen();  // > CustomCode.fullscreen:22
      } else if (document.webkitExitFullscreen) {  // > CustomCode.fullscreen:23
        document.webkitExitFullscreen();  // > CustomCode.fullscreen:24
      }  // > CustomCode.fullscreen:25
    }  // > CustomCode.fullscreen:26
  }  // > CustomCode.fullscreen:27

  function texttospeech (whattospeak) {  // > CustomCode.texttospeech:1
      // > CustomCode.texttospeech:2
  /*  // > CustomCode.texttospeech:3
  if(parent.cordova) { // check it is running in Android  // > CustomCode.texttospeech:4
  //var option1 = _view.comboBox.getProperty("SelectedOptions");  // > CustomCode.texttospeech:5
         parent.TTS.speak(whattospeak, function () {  // > CustomCode.texttospeech:6
              // success  // > CustomCode.texttospeech:7
          }, function (reason) {  // > CustomCode.texttospeech:8
              // error  // > CustomCode.texttospeech:9
          });  // > CustomCode.texttospeech:10
      }  // > CustomCode.texttospeech:11
      else {  // > CustomCode.texttospeech:12
        */  // > CustomCode.texttospeech:13
    var msg = new SpeechSynthesisUtterance(whattospeak);  // > CustomCode.texttospeech:14
  window.speechSynthesis.speak(msg);  // > CustomCode.texttospeech:15
  //}  // > CustomCode.texttospeech:16
  }  // > CustomCode.texttospeech:17

  function changeOrientation() {  // > CustomCode.changeOrientation:1
  //if(typeof parent.device != 'undefined')  // > CustomCode.changeOrientation:2
  //  _view.mytext.setText(parent.device.platform)  // > CustomCode.changeOrientation:3
  //else  // > CustomCode.changeOrientation:4
   // _view.mytext.setText("nada:");  // > CustomCode.changeOrientation:5
  // check platform for Apps  // > CustomCode.changeOrientation:6
  var iOSapp =  (typeof parent.device != 'undefined' && parent.device.platform == "iOS");  // > CustomCode.changeOrientation:7
  var Androidapp = (typeof parent.device != 'undefined' && parent.device.platform == "Android");  // > CustomCode.changeOrientation:8
  // check platform for web browsers  // > CustomCode.changeOrientation:9
  var iOS =/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;  // > CustomCode.changeOrientation:10
  var iPad =/iPad/.test(navigator.userAgent) && !window.MSStream;  // > CustomCode.changeOrientation:11
  var iPhone = /iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;  // > CustomCode.changeOrientation:12
  var Android= /Android|android/i.test(navigator.userAgent);  // > CustomCode.changeOrientation:13
  //_view.mytext.setText(_view.mytext.getText() + "-orient:" + window.orientation + "-" + iOSapp + "-" + Androidapp);  // > CustomCode.changeOrientation:14
  switch (window.orientation) {  // > CustomCode.changeOrientation:15
    case 0:  // > CustomCode.changeOrientation:16
    case 180:  // > CustomCode.changeOrientation:17
      this.screenOrientation = 'portrait';  // > CustomCode.changeOrientation:18
      if (iOSapp){ // does not seems to work  // > CustomCode.changeOrientation:19
        //   return Math.max(window.screen.width,window.screen.height)*0.9;  // > CustomCode.changeOrientation:20
        return window.screen.height*0.7;  //0.1 for app and 0.1 for nonfullscreenapp    // > CustomCode.changeOrientation:21
        // return window.screen.height;  // > CustomCode.changeOrientation:22
        //  return window.innerHeight;  // > CustomCode.changeOrientation:23
        // return document.documentElement.clientHeight;  // > CustomCode.changeOrientation:24
      }  // > CustomCode.changeOrientation:25
        // > CustomCode.changeOrientation:26
      else {  // > CustomCode.changeOrientation:27
        // return Math.max(window.innerWidth,window.innerHeight)*0.9;  // > CustomCode.changeOrientation:28
        return window.innerHeight*0.8;  // > CustomCode.changeOrientation:29
      }  // > CustomCode.changeOrientation:30
      break;  // > CustomCode.changeOrientation:31
    case 90:  // > CustomCode.changeOrientation:32
    case -90:  // > CustomCode.changeOrientation:33
      this.screenOrientation = 'landscape';  // > CustomCode.changeOrientation:34
      if (iOSapp){ // App  // > CustomCode.changeOrientation:35
        return window.screen.width*0.7;    // > CustomCode.changeOrientation:36
        // return window.screen.height;  // > CustomCode.changeOrientation:37
        //  return window.innerHeight;  // > CustomCode.changeOrientation:38
        //  return document.documentElement.clientHeight;  // > CustomCode.changeOrientation:39
      }  // > CustomCode.changeOrientation:40
        // > CustomCode.changeOrientation:41
      else { // browser Android and PC  // > CustomCode.changeOrientation:42
        // return Math.min(window.innerWidth,window.innerHeight)*0.9;  // > CustomCode.changeOrientation:43
        // alert("browser Android and PC");  // > CustomCode.changeOrientation:44
        return window.innerHeight*0.8;  // > CustomCode.changeOrientation:45
      }  // > CustomCode.changeOrientation:46
      break;  // > CustomCode.changeOrientation:47
    default:  // > CustomCode.changeOrientation:48
      this.screenOrientation = 'unknown';  // > CustomCode.changeOrientation:49
      //       return (iPad)?""+(window.screen.width+window.screen.height)*0.4:((iPhone)?""+window.screen.width:_view._format(window.innerHeight*0.9,"0"));  // > CustomCode.changeOrientation:50
      return window.innerHeight*0.8;  // > CustomCode.changeOrientation:51
  }  // > CustomCode.changeOrientation:52
  }  // > CustomCode.changeOrientation:53

  function changeOrientationfullscreen() {  // > CustomCode.changeOrientation 2:1
  //if(typeof parent.device != 'undefined')  // > CustomCode.changeOrientation 2:2
  //  _view.mytext.setText(parent.device.platform)  // > CustomCode.changeOrientation 2:3
  //else  // > CustomCode.changeOrientation 2:4
   // _view.mytext.setText("nada:");  // > CustomCode.changeOrientation 2:5
  // check platform for Apps  // > CustomCode.changeOrientation 2:6
  var iOSapp =  (typeof parent.device != 'undefined' && parent.device.platform == "iOS");  // > CustomCode.changeOrientation 2:7
  var Androidapp = (typeof parent.device != 'undefined' && parent.device.platform == "Android");  // > CustomCode.changeOrientation 2:8
  // check platform for web browsers  // > CustomCode.changeOrientation 2:9
  var iOS =/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;  // > CustomCode.changeOrientation 2:10
  var iPad =/iPad/.test(navigator.userAgent) && !window.MSStream;  // > CustomCode.changeOrientation 2:11
  var iPhone = /iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;  // > CustomCode.changeOrientation 2:12
  var Android= /Android|android/i.test(navigator.userAgent);  // > CustomCode.changeOrientation 2:13
  //_view.mytext.setText(_view.mytext.getText() + "-orient:" + window.orientation + "-" + iOSapp + "-" + Androidapp);  // > CustomCode.changeOrientation 2:14
  switch (window.orientation) {  // > CustomCode.changeOrientation 2:15
    case 0:  // > CustomCode.changeOrientation 2:16
    case 180:  // > CustomCode.changeOrientation 2:17
      this.screenOrientation = 'portrait';  // > CustomCode.changeOrientation 2:18
      if (iOSapp){ // does not seems to work  // > CustomCode.changeOrientation 2:19
        //   return Math.max(window.screen.width,window.screen.height)*0.9;  // > CustomCode.changeOrientation 2:20
        return window.screen.height*0.7;  //0.1 for app and 0.1 for nonfullscreenapp    // > CustomCode.changeOrientation 2:21
        // return window.screen.height;  // > CustomCode.changeOrientation 2:22
        //  return window.innerHeight;  // > CustomCode.changeOrientation 2:23
        // return document.documentElement.clientHeight;  // > CustomCode.changeOrientation 2:24
      }  // > CustomCode.changeOrientation 2:25
        // > CustomCode.changeOrientation 2:26
      else {  // > CustomCode.changeOrientation 2:27
        // return Math.max(window.innerWidth,window.innerHeight)*0.9;  // > CustomCode.changeOrientation 2:28
        return window.innerHeight*0.9;  // > CustomCode.changeOrientation 2:29
      }  // > CustomCode.changeOrientation 2:30
      break;  // > CustomCode.changeOrientation 2:31
    case 90:  // > CustomCode.changeOrientation 2:32
    case -90:  // > CustomCode.changeOrientation 2:33
      this.screenOrientation = 'landscape';  // > CustomCode.changeOrientation 2:34
      if (iOSapp){ // App  // > CustomCode.changeOrientation 2:35
        return window.screen.width*0.7;    // > CustomCode.changeOrientation 2:36
        // return window.screen.height;  // > CustomCode.changeOrientation 2:37
        //  return window.innerHeight;  // > CustomCode.changeOrientation 2:38
        //  return document.documentElement.clientHeight;  // > CustomCode.changeOrientation 2:39
      }  // > CustomCode.changeOrientation 2:40
        // > CustomCode.changeOrientation 2:41
      else { // browser Android and PC  // > CustomCode.changeOrientation 2:42
        // return Math.min(window.innerWidth,window.innerHeight)*0.9;  // > CustomCode.changeOrientation 2:43
        // alert("browser Android and PC");  // > CustomCode.changeOrientation 2:44
        return window.innerHeight*0.9;  // > CustomCode.changeOrientation 2:45
      }  // > CustomCode.changeOrientation 2:46
      break;  // > CustomCode.changeOrientation 2:47
    default:  // > CustomCode.changeOrientation 2:48
      this.screenOrientation = 'unknown';  // > CustomCode.changeOrientation 2:49
      //       return (iPad)?""+(window.screen.width+window.screen.height)*0.4:((iPhone)?""+window.screen.width:_view._format(window.innerHeight*0.9,"0"));  // > CustomCode.changeOrientation 2:50
      return window.innerHeight*0.9;  // > CustomCode.changeOrientation 2:51
  }  // > CustomCode.changeOrientation 2:52
  }  // > CustomCode.changeOrientation 2:53

  _model.addToInitialization(function() {
    if (!__pagesEnabled["svg"]) return;
    var container = document.createElement('div');  // > Initialization.svg:1
    var svggradient = '<svg xmlns="http://www.w3.org/2000/svg" version="1.1"><defs>'+  // > Initialization.svg:2
      '  <radialGradient id="mygrandient" cx="50%" cy="50%" r="80%" fx="50%" fy="50%">'+  // > Initialization.svg:3
      '    <stop offset="0%" style="stop-color:rgb(255,255,255); stop-opacity:1" />'+  // > Initialization.svg:4
      '    <stop offset="100%" style="stop-color:rgb(0,0,0);stop-opacity:0" />'+  // > Initialization.svg:5
      '  </radialGradient>'+  // > Initialization.svg:6
      '</defs></svg>';  // > Initialization.svg:7
    container.innerHTML = svggradient;  // > Initialization.svg:8
    document.body.appendChild(container);  // > Initialization.svg:9
    //"url(#mygrandient)"  // > Initialization.svg:10
  });

  _model.addToInitialization(function() {
    if (!__pagesEnabled["undefined"]) return;
    if (score==undefined){  // > Initialization.undefined:1
     score= 0;  // > Initialization.undefined:2
      }  // > Initialization.undefined:3
        // > Initialization.undefined:4
      if (Q1==undefined){  // > Initialization.undefined:5
     Q1= 1;  // > Initialization.undefined:6
      }  // > Initialization.undefined:7
        // > Initialization.undefined:8
      if (question1type==undefined){  // > Initialization.undefined:9
     question1type= true;  // > Initialization.undefined:10
      }  // > Initialization.undefined:11
        // > Initialization.undefined:12
  });

  _model.addToInitialization(function() {
    if (!__pagesEnabled["generatequestion"]) return;
    if (Math.random()>0.5){  // > Initialization.generatequestion:1
      moreless="more";  // > Initialization.generatequestion:2
      sign=1;  // > Initialization.generatequestion:3
      }  // > Initialization.generatequestion:4
    else {  // > Initialization.generatequestion:5
      moreless="less";  // > Initialization.generatequestion:6
      sign=-1;  // > Initialization.generatequestion:7
      }  // > Initialization.generatequestion:8
        // > Initialization.generatequestion:9
        // > Initialization.generatequestion:10
      //store answer for display to be correct  // > Initialization.generatequestion:11
    questionanswer = questionthannumber + sign*questionmorelessnumber;  // > Initialization.generatequestion:12
      questionanswers=questionanswer;  // > Initialization.generatequestion:13
    if (question1type==true){  // > Initialization.generatequestion:14
    //texttospeech ("question"+Q1+". How many "+moreless+"than"+questionthannumber+"is"+questionanswers+"?");  // > Initialization.generatequestion:15
    texttospeech ("question"+Q1+". What "+moreless+questionthannumber+"than"+"is"+questionanswers+"?");  // > Initialization.generatequestion:16
    }  // > Initialization.generatequestion:17
    else if (question2type==true){  // > Initialization.generatequestion:18
    texttospeech ("question"+Q1+". "+questionmorelessnumbers +moreless+"than"+"what"+"is"+questionanswers+"?");  // > Initialization.generatequestion:19
    }  // > Initialization.generatequestion:20
    else if (question3type==true){  // > Initialization.generatequestion:21
    texttospeech ("question"+Q1+". "+questionmorelessnumbers+moreless+"than"+questionthannumber+"is"+"what"+"?");  // > Initialization.generatequestion:22
    }  // > Initialization.generatequestion:23
  });

  _model.addToInitialization(function() {
    if (!__pagesEnabled["animationspeed"]) return;
    dt=questionmorelessnumbers/20;  // > Initialization.animationspeed:1
  });

  _model.addToInitialization(function() {
    _initializeSolvers();
  });

  _model.addToEvolution(function() {
    if (!__pagesEnabled["Evol Page"]) return;
    _ODEi_evolution1.step();
  });

  _model.addToFixedRelations(function() { _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); });

  _model.addToFixedRelations(function() {
    if (!__pagesEnabled["FixRel Page"]) return;
    if (moreless=="more"){  // > FixedRelations.FixRel Page:1
    sign=1;  // > FixedRelations.FixRel Page:2
    questionanswer = questionthannumber + sign*questionmorelessnumber;  // > FixedRelations.FixRel Page:3
    }  // > FixedRelations.FixRel Page:4
    else if (moreless=="less"){  // > FixedRelations.FixRel Page:5
    sign=-1;  // > FixedRelations.FixRel Page:6
    questionanswer = questionthannumber + sign*questionmorelessnumber;  // > FixedRelations.FixRel Page:7
    }  // > FixedRelations.FixRel Page:8
  });

  _model.addToFixedRelations(function() {
    if (!__pagesEnabled["FixRel Page 3"]) return;
  });

  _model.addToFixedRelations(function() {
    if (!__pagesEnabled["questionrandomiser"]) return;
    if (score<=5){ // always start here  // > FixedRelations.questionrandomiser:1
      question1type=true;  // > FixedRelations.questionrandomiser:2
      question2type=false;  // > FixedRelations.questionrandomiser:3
      question3type=false;  // > FixedRelations.questionrandomiser:4
    }  // > FixedRelations.questionrandomiser:5
    else if (score>5&&score<=10){  // > FixedRelations.questionrandomiser:6
      question1type=false;  // > FixedRelations.questionrandomiser:7
      question2type=true;  // > FixedRelations.questionrandomiser:8
      question3type=false;  // > FixedRelations.questionrandomiser:9
    }  // > FixedRelations.questionrandomiser:10
    else if (score>10&&score<=15){  // > FixedRelations.questionrandomiser:11
      question1type=false;  // > FixedRelations.questionrandomiser:12
      question2type=false;  // > FixedRelations.questionrandomiser:13
      question3type=true;  // > FixedRelations.questionrandomiser:14
    }  // > FixedRelations.questionrandomiser:15
    else{ // after question 16  // > FixedRelations.questionrandomiser:16
      // spin =Math.random();  // > FixedRelations.questionrandomiser:17
      if (spin<0.33){  // > FixedRelations.questionrandomiser:18
        question1type=true;  // > FixedRelations.questionrandomiser:19
      question2type=false;  // > FixedRelations.questionrandomiser:20
      question3type=false;  // > FixedRelations.questionrandomiser:21
        }  // > FixedRelations.questionrandomiser:22
        else if ( spin<0.67){  // > FixedRelations.questionrandomiser:23
           question1type=false;  // > FixedRelations.questionrandomiser:24
      question2type=true;  // > FixedRelations.questionrandomiser:25
      question3type=false;  // > FixedRelations.questionrandomiser:26
          }  // > FixedRelations.questionrandomiser:27
          else if (spin<1){  // > FixedRelations.questionrandomiser:28
          question1type=false;  // > FixedRelations.questionrandomiser:29
      question2type=false;  // > FixedRelations.questionrandomiser:30
      question3type=true;    // > FixedRelations.questionrandomiser:31
            }  // > FixedRelations.questionrandomiser:32
        // > FixedRelations.questionrandomiser:33
        // > FixedRelations.questionrandomiser:34
     }  // > FixedRelations.questionrandomiser:35
  });

  _model.addToFixedRelations(function() { _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); });

  function _initializeSolvers() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].initializeSolver();
  }

  function _automaticResetSolvers() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].automaticResetSolver();
  }

  _model.resetSolvers = function() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].resetSolver();
  };

  _getODE = function (_odeName) {
    if (_odeName=="Evol Page") return _ODEi_evolution1;
    return null;
  }

  function _getEventSolver(_odeName) {
    var ode = _getODE(_odeName);
    if (ode===null) return null;
    return ode.getEventSolver();
  }

  function _setSolverClass(_odeName, _engine) {
    var ode = _getODE(_odeName);
    if (ode===null) return;
    if (!_engine.setODE) {
      var classname = _engine.toLowerCase();
      if      (classname.indexOf("boga")>=0)   _engine = EJSS_ODE_SOLVERS.bogackiShampine23;
      else if (classname.indexOf("cash")>=0)   _engine = EJSS_ODE_SOLVERS.cashKarp45;
      else if (classname.indexOf("dopri5")>=0) _engine = EJSS_ODE_SOLVERS.dopri5;
      else if (classname.indexOf("dopri8")>=0) _engine = EJSS_ODE_SOLVERS.dopri853;
      else if (classname.indexOf("richa")>=0)  _engine = EJSS_ODE_SOLVERS.eulerRichardson;
      else if (classname.indexOf("euler")>=0)  _engine = EJSS_ODE_SOLVERS.euler;
      else if (classname.indexOf("fehlberg87")>=0) _engine = EJSS_ODE_SOLVERS.fehlberg87;
      else if (classname.indexOf("fehlberg8")>=0)  _engine = EJSS_ODE_SOLVERS.fehlberg8;
      else if (classname.indexOf("radau")>=0)   _engine = EJSS_ODE_SOLVERS.radau5;
      else if (classname.indexOf("runge")>=0)  _engine = EJSS_ODE_SOLVERS.rungeKutta4;
      else if (classname.indexOf("rk4")>=0)    _engine = EJSS_ODE_SOLVERS.rungeKutta4;
      else if (classname.indexOf("verlet")>=0) _engine = EJSS_ODE_SOLVERS.velocityVerlet;
    }
    if (_engine) ode.setSolverClass(_engine);
  }

  function _ODE_evolution1() {
    var __odeSelf = {};
    var __eventSolver;
    var __solverClass = EJSS_ODE_SOLVERS.euler;
    var __state=[];
    var _ODE_evolution1_Event1;
    var __ignoreErrors=false;
    var __mustInitialize=true;
    var __isEnabled=true;
    var __mustUserReinitialize=false;
    var __mustReinitialize=true;


    __odeSelf._getOdeVars = function (){ return["questionmorelessnumber","t"]};

    __odeSelf.setSolverClass = function(__aSolverClass) {
      __solverClass = __aSolverClass;
      __instantiateSolver();
    };

    function __instantiateSolver() {
      __state=[];
      __pushState();
      __eventSolver = EJSS_ODE_SOLVERS.interpolatorEventSolver(__solverClass(),__odeSelf);
      __mustInitialize = true;
    }

    __odeSelf.setEnabled = function(_enabled) { __isEnabled = _enabled; };

    __odeSelf.getIndependentVariableValue = function() { return __eventSolver.getIndependentVariableValue(); };

    __odeSelf.getInternalStepSize = function() { return __eventSolver.getInternalStepSize(); };

    __odeSelf.isAccelerationIndependentOfVelocity = function() { return false; };

    __odeSelf.initializeSolver = function() {
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); return; }
      __pushState();
      __eventSolver.initialize(dt);
      __eventSolver.setBestInterpolation(false);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.removeAllEvents();
      if (__pagesEnabled["Event"]) __eventSolver.addEvent(_ODE_evolution1_Event1());
      for(k in userEvents1){__eventSolver.addEvent(userEvents1[k]);}
      __eventSolver.setEstimateFirstStep(false);
      __eventSolver.setEnableExceptions(false);
      __eventSolver.setTolerances(0.00001,0.00001);
      __mustReinitialize = true;
      __mustInitialize = false;
    };

    function __pushState() {
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        if (__state[__cIn]!=questionmorelessnumber) __mustReinitialize = true;
        __state[__cIn++] = questionmorelessnumber;
        if (__state[__cIn]!=t) __mustReinitialize = true;
        __state[__cIn++] = t;
    }

    function __arraysChanged () {
      return false;
    }

    __odeSelf.getEventSolver = function() {
      return __eventSolver;
    };

    __odeSelf.resetSolver = function() {
      __mustUserReinitialize = true;
    };

    __odeSelf.automaticResetSolver = function() {
      __mustReinitialize = true;
    };

    function __errorAction () {
      if (__ignoreErrors) return;
      console.log (__eventSolver.getErrorMessage());
      _pause();
      // Make sure the solver is reinitialized;
      __mustReinitialize = true;
    }

    __odeSelf.step = function() { return __privateStep(false); };

    __odeSelf.solverStep = function() { return __privateStep(true); };

    function __privateStep(__takeMaximumStep) {
      if (!__isEnabled) return 0;
      if (dt===0) return 0;
      if (__mustInitialize) __odeSelf.initializeSolver();
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); }
      __eventSolver.setStepSize(dt);
      __eventSolver.setInternalStepSize(dt);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.setTolerances(0.00001,0.00001);
      __pushState();
      if (__mustUserReinitialize) { 
        __eventSolver.userReinitialize();
        __mustUserReinitialize = false;
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      else if (__mustReinitialize) { 
        __eventSolver.reinitialize();
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      var __stepTaken = __takeMaximumStep ? __eventSolver.maxStep() : __eventSolver.step();
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        questionmorelessnumber = __state[__cOut++];
        t = __state[__cOut++];
      // Check for error
      if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      return __stepTaken;
    }

    __odeSelf.getState = function() { return __state; };

    __odeSelf.getRate = function(_aState,_aRate) {
      _aRate[_aRate.length-1] = 0.0; // In case the prelim code returns
      var __index=-1; // so that it can be used in preliminary code
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var questionmorelessnumber = _aState[__cOut++];
        var t = _aState[__cOut++];
      // Preliminary code: Code to be executed before rate equations are evaluated
        //questionmorelessnumber=0; //set to 0 to begin animation  // > Preliminary code for ODE.Evol Page:1
      // Compute the rate
        var __cRate=0;
        _aRate[__cRate++] = questionmorelessnumbers/10; // Rate for ODE: Evol Page:questionmorelessnumber
        _aRate[__cRate++] = 1; // independent variable
        return _aRate;
    }; //end of getRate

    __odeSelf._addEvent = function(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent){
    var User_Event = function (userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent) {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return eventType; };

      _eventSelf.getRootFindingMethod = function() { return eventMethod; };

      _eventSelf.getMaxIterations = function() { return maxIter; };

      _eventSelf.getTolerance = function() { return eventTolerance; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var questionmorelessnumber = _aState[__cOut++];
        var t = _aState[__cOut++];
      return eval(userCondition);
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        questionmorelessnumber = __state[__cOut++];
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = questionmorelessnumber;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        if (undefined != functions) eval(functions.toString());
        eval(userAction);
        return endAtEvent;
      }

      return _eventSelf;
    }; // End of event

   userEvents1.push(User_Event(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent));
   }

    _ODE_evolution1_Event1 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var questionmorelessnumber = _aState[__cOut++];
        var t = _aState[__cOut++];
        return questionmorelessnumber-questionmorelessnumbers;  // > Event zero-condition for page Evol Page:1
        alert(questionmorelessnumbers);  // > Event zero-condition for page Evol Page:2
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        questionmorelessnumber = __state[__cOut++];
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = questionmorelessnumber;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        _pause();  // > Event action for page Evol Page:1
        /*  // > Event action for page Evol Page:2
        if (question1type==true){  // > Event action for page Evol Page:3
         EJSS_INTERFACE.BoxPanel.showOkDialog("Step C Draw a last bar to match the length of the first two bars and write the number"+questionanswer.toFixed(0) +"Click OK and try again using the bar comparison model method shown");  // > Event action for page Evol Page:4
        colorgreen=true;  // > Event action for page Evol Page:5
        }  // > Event action for page Evol Page:6
        else if (question2type==true){  // > Event action for page Evol Page:7
         EJSS_INTERFACE.BoxPanel.showOkDialog("Step C Draw a last bar to match the length of the first two bars and write the number"+questionanswer.toFixed(0) +"Click OK and try again using the bar comparison model method shown");  // > Event action for page Evol Page:8
        }  // > Event action for page Evol Page:9
        else if (question3type==true){  // > Event action for page Evol Page:10
         EJSS_INTERFACE.BoxPanel.showOkDialog("Step C Draw a last bar to match the length of the first two bars and write the number which in this case is unknown" +"Click OK and try again using the bar comparison model method shown");  // > Event action for page Evol Page:11
        }  // > Event action for page Evol Page:12
        */  // > Event action for page Evol Page:13
        questionanswershow=true;  // > Event action for page Evol Page:14
        return true;
      }

      return _eventSelf;
    }; // End of event

    __instantiateSolver();

    return __odeSelf;
  }

  function _historic_questionmorelessnumber(__time) {
    var __index = 0;
    return _ODEi_evolution1.getEventSolver().getStateHistory().interpolate(__time,__index);
  }

    _model._fontResized = function(iBase,iSize,iDelta) {
      _view._fontResized(iBase,iSize,iDelta);
  }; // end of _fontResized

  function _getViews() {
    var _viewsInfo = [];
    var _counter = 0;
    _viewsInfo[_counter++] = { name : "HtmlView Page", width : 800, height : 600 };
    return _viewsInfo;
  } // end of _getViews

  function _selectView(_viewNumber) {
    _view = null;
    _view = new morethanlessthan_View(_topFrame,_viewNumber,_libraryPath,_codebasePath);
    var _view_super_reset = _view._reset;
    _view._reset = function() {
      _view_super_reset();
      switch(_viewNumber) {
        case -10 : break; // make Lint happy
        default :
        case 0:
          _view.fullscreen.linkProperty("Width",  function() { return Width; }, function(_v) { Width = _v; } ); // HtmlView Page linking property 'Width' for element 'fullscreen'
          _view.Q1.linkProperty("Text",  function() { return "Question "+Q1+":"; } ); // HtmlView Page linking property 'Text' for element 'Q1'
          _view.Q1.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'Q1'
          _view.question1type.linkProperty("Display",  function() { return question1type?"inline-block":"none"; } ); // HtmlView Page linking property 'Display' for element 'question1type'
          _view.comboBox.linkProperty("Options",  function() { return ["?","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40"]; } ); // HtmlView Page linking property 'Options' for element 'comboBox'
          _view.comboBox.linkProperty("Background",  function() { return colorred?"Red":"White"; } ); // HtmlView Page linking property 'Background' for element 'comboBox'
          _view.comboBox.setAction("OnChange", function(_data,_info) {
  var opts = _view.comboBox.getProperty("SelectedOptions");  // array of options
  var option = (opts.length > 0)? opts[0]:""; // selected option 
  //  if (option == questionmorelessnumber){ // only works when very exact, so need a range
      if (Math.abs(option - questionmorelessnumber)<0.1){
  score=score+1;    
  //EJSS_INTERFACE.BoxPanel.showOkDialog("correct!");
  // test
   EJSS_INTERFACE.BoxPanel.showOkCancelDialog("Correct!", 
      function(){ 
    
     
        Q1= Q1+1;
        spin=Math.random(); // trigger random question after Q15
       _reset(); //when click ok
      _update(); //force update of Q1
      },
      function(){ 
      //  alert("cancel"); 
      });
     // _reset();
  _view.comboBox.setSelectedOptions(["?"]);
      }
      else {
    score=score+0;    
   // EJSS_INTERFACE.BoxPanel.showOkDialog("try again!");
   EJSS_INTERFACE.BoxPanel.showOkDialog("The correct method has three steps,  Step A Draw a box and write the number found after the word 'than' in this box. In this case, it is "+questionthannumber+"\n Click Play button to continue" );
   questionthannumbershow=true;
   colorblue=true;
   _pause();
  // alert("Step A");
   // stepb
   
  //  EJSS_INTERFACE.BoxPanel.showOkDialog("Step B Draw a bar going right if it is more, or draw a bar going left if it is less. In this case, it is "+sign*questionmorelessnumber );
  //_play();
      }
        
  //    _reset();
  //_view.comboBox.setSelectedOptions([""]);

}); // HtmlView Page setting action 'OnChange' for element 'comboBox'
          _view.comboBox.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'comboBox'
          _view.moreless.linkProperty("Background",  function() { return colorred?"Red":"White"; } ); // HtmlView Page linking property 'Background' for element 'moreless'
          _view.moreless.linkProperty("Text",  function() { return moreless; }, function(_v) { moreless = _v; } ); // HtmlView Page linking property 'Text' for element 'moreless'
          _view.moreless.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'moreless'
          _view.than.linkProperty("Background",  function() { return colorblue?"Blue":"White"; } ); // HtmlView Page linking property 'Background' for element 'than'
          _view.than.linkProperty("Foreground",  function() { return colorblue?"White":"Black"; } ); // HtmlView Page linking property 'Foreground' for element 'than'
          _view.than.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'than'
          _view.questionthannumber2.linkProperty("Background",  function() { return colorblue?"Blue":"White"; } ); // HtmlView Page linking property 'Background' for element 'questionthannumber2'
          _view.questionthannumber2.linkProperty("Foreground",  function() { return colorblue?"White":"Black"; } ); // HtmlView Page linking property 'Foreground' for element 'questionthannumber2'
          _view.questionthannumber2.linkProperty("Text",  function() { return questionthannumber; }, function(_v) { questionthannumber = _v; } ); // HtmlView Page linking property 'Text' for element 'questionthannumber2'
          _view.questionthannumber2.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'questionthannumber2'
          _view.is.linkProperty("Background",  function() { return colorgreen?"Green":"White"; } ); // HtmlView Page linking property 'Background' for element 'is'
          _view.is.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'is'
          _view.questionanswer2.linkProperty("Background",  function() { return colorgreen?"Green":"White"; } ); // HtmlView Page linking property 'Background' for element 'questionanswer2'
          _view.questionanswer2.linkProperty("Text",  function() { return ""+questionanswers.toFixed(0); } ); // HtmlView Page linking property 'Text' for element 'questionanswer2'
          _view.questionanswer2.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'questionanswer2'
          _view.question2type.linkProperty("Display",  function() { return question2type?"inline-block":"none"; } ); // HtmlView Page linking property 'Display' for element 'question2type'
          _view.questionmorelessnumber2.linkProperty("Background",  function() { return colorred?"Red":"White"; } ); // HtmlView Page linking property 'Background' for element 'questionmorelessnumber2'
          _view.questionmorelessnumber2.linkProperty("Text",  function() { return questionmorelessnumbers; }, function(_v) { questionmorelessnumbers = _v; } ); // HtmlView Page linking property 'Text' for element 'questionmorelessnumber2'
          _view.questionmorelessnumber2.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'questionmorelessnumber2'
          _view.moreless2.linkProperty("Background",  function() { return colorred?"Red":"White"; } ); // HtmlView Page linking property 'Background' for element 'moreless2'
          _view.moreless2.linkProperty("Text",  function() { return moreless; }, function(_v) { moreless = _v; } ); // HtmlView Page linking property 'Text' for element 'moreless2'
          _view.moreless2.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'moreless2'
          _view.than2.linkProperty("Background",  function() { return colorblue?"Blue":"White"; } ); // HtmlView Page linking property 'Background' for element 'than2'
          _view.than2.linkProperty("Foreground",  function() { return colorblue?"White":"Black"; } ); // HtmlView Page linking property 'Foreground' for element 'than2'
          _view.than2.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'than2'
          _view.comboBox2.linkProperty("Options",  function() { return ["?","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40"]; } ); // HtmlView Page linking property 'Options' for element 'comboBox2'
          _view.comboBox2.linkProperty("Background",  function() { return colorblue?"Blue":"White"; } ); // HtmlView Page linking property 'Background' for element 'comboBox2'
          _view.comboBox2.linkProperty("Foreground",  function() { return colorblue?"White":"Black"; } ); // HtmlView Page linking property 'Foreground' for element 'comboBox2'
          _view.comboBox2.setAction("OnChange", function(_data,_info) {
  var opts = _view.comboBox2.getProperty("SelectedOptions");  // array of options
  var option = (opts.length > 0)? opts[0]:""; // selected option 
  //  if (option == questionmorelessnumber){ // only works when very exact, so need a range
      if (Math.abs(option - questionthannumber)<0.1){
  score=score+1;    
  //EJSS_INTERFACE.BoxPanel.showOkDialog("correct!");
  // test
   EJSS_INTERFACE.BoxPanel.showOkCancelDialog("Correct!", 
      function(){ 
      //  alert("Correct!"); 
        Q1= Q1+1;
        spin=Math.random(); // trigger random question after Q15
       _reset(); //when click ok
      _update(); //force update of Q1
      },
      function(){ 
      //  alert("cancel"); 
      });
    
  _view.comboBox.setSelectedOptions(["?"]);
      }
      else {
    score=score+0;    
   // EJSS_INTERFACE.BoxPanel.showOkDialog("try again!");
   EJSS_INTERFACE.BoxPanel.showOkDialog("The correct method has three steps,  \nStep A Draw a box and write the number found after the word 'than' in this box. \nIn this case, it is unknown "+"\n Click Play button to continue" );
   questionthannumbershow=true;
   _pause();
  // alert("Step A");
   // stepb
   
  //  EJSS_INTERFACE.BoxPanel.showOkDialog("Step B Draw a bar going right if it is more, or draw a bar going left if it is less. In this case, it is "+sign*questionmorelessnumber );
  //_play();
      }
        
  //    _reset();
  //_view.comboBox.setSelectedOptions([""]);

}); // HtmlView Page setting action 'OnChange' for element 'comboBox2'
          _view.comboBox2.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'comboBox2'
          _view.is2.linkProperty("Background",  function() { return colorgreen?"Green":"White"; } ); // HtmlView Page linking property 'Background' for element 'is2'
          _view.is2.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'is2'
          _view.questionanswer22.linkProperty("Background",  function() { return colorgreen?"Green":"White"; } ); // HtmlView Page linking property 'Background' for element 'questionanswer22'
          _view.questionanswer22.linkProperty("Text",  function() { return ""+questionanswers.toFixed(0); } ); // HtmlView Page linking property 'Text' for element 'questionanswer22'
          _view.questionanswer22.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'questionanswer22'
          _view.question3type.linkProperty("Display",  function() { return question3type?"inline-block":"none"; } ); // HtmlView Page linking property 'Display' for element 'question3type'
          _view.questionmorelessnumber22.linkProperty("Background",  function() { return colorred?"Red":"White"; } ); // HtmlView Page linking property 'Background' for element 'questionmorelessnumber22'
          _view.questionmorelessnumber22.linkProperty("Text",  function() { return questionmorelessnumbers; }, function(_v) { questionmorelessnumbers = _v; } ); // HtmlView Page linking property 'Text' for element 'questionmorelessnumber22'
          _view.questionmorelessnumber22.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'questionmorelessnumber22'
          _view.moreless22.linkProperty("Background",  function() { return colorred?"Red":"White"; } ); // HtmlView Page linking property 'Background' for element 'moreless22'
          _view.moreless22.linkProperty("Text",  function() { return moreless; }, function(_v) { moreless = _v; } ); // HtmlView Page linking property 'Text' for element 'moreless22'
          _view.moreless22.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'moreless22'
          _view.than22.linkProperty("Background",  function() { return colorblue?"Blue":"White"; } ); // HtmlView Page linking property 'Background' for element 'than22'
          _view.than22.linkProperty("Foreground",  function() { return colorblue?"White":"Black"; } ); // HtmlView Page linking property 'Foreground' for element 'than22'
          _view.than22.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'than22'
          _view.questionthannumber22.linkProperty("Background",  function() { return colorblue?"Blue":"White"; } ); // HtmlView Page linking property 'Background' for element 'questionthannumber22'
          _view.questionthannumber22.linkProperty("Foreground",  function() { return colorblue?"White":"Black"; } ); // HtmlView Page linking property 'Foreground' for element 'questionthannumber22'
          _view.questionthannumber22.linkProperty("Text",  function() { return questionthannumber; }, function(_v) { questionthannumber = _v; } ); // HtmlView Page linking property 'Text' for element 'questionthannumber22'
          _view.questionthannumber22.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'questionthannumber22'
          _view.is22.linkProperty("Background",  function() { return colorgreen?"Green":"White"; } ); // HtmlView Page linking property 'Background' for element 'is22'
          _view.is22.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'is22'
          _view.comboBox22.linkProperty("Options",  function() { return ["?","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40"]; } ); // HtmlView Page linking property 'Options' for element 'comboBox22'
          _view.comboBox22.linkProperty("Background",  function() { return colorgreen?"Green":"White"; } ); // HtmlView Page linking property 'Background' for element 'comboBox22'
          _view.comboBox22.setAction("OnChange", function(_data,_info) {
  var opts = _view.comboBox22.getProperty("SelectedOptions");  // array of options
  var option = (opts.length > 0)? opts[0]:""; // selected option 
  //  if (option == questionmorelessnumber){ // only works when very exact, so need a range
      if (Math.abs(option - questionanswers)<0.1){
  score=score+1;    
  //EJSS_INTERFACE.BoxPanel.showOkDialog("correct!");
  // test
   EJSS_INTERFACE.BoxPanel.showOkCancelDialog("Correct!", 
      function(){ 
      //  alert("Correct!"); 
        Q1= Q1+1;
        spin=Math.random(); // trigger random question after Q15
       _reset(); //when click ok
      _update(); //force update of Q1
      },
      function(){ 
      //  alert("cancel"); 
      });
    
  _view.comboBox.setSelectedOptions(["?"]);
      }
      else {
    score=score+0;    
   // EJSS_INTERFACE.BoxPanel.showOkDialog("try again!");
   EJSS_INTERFACE.BoxPanel.showOkDialog("The correct method has three steps,  Step A Draw a box and write the number found after the word 'than' in this box. In this case, it is" +questionthannumber+"\n Click Play button to continue" );
   questionthannumbershow=true;
   _pause();
  // alert("Step A");
   // stepb
   
  //  EJSS_INTERFACE.BoxPanel.showOkDialog("Step B Draw a bar going right if it is more, or draw a bar going left if it is less. In this case, it is "+sign*questionmorelessnumber );
  //_play();
      }
        
  //    _reset();
  //_view.comboBox.setSelectedOptions([""]);

}); // HtmlView Page setting action 'OnChange' for element 'comboBox22'
          _view.comboBox22.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'comboBox22'
          _view.playPauseButtonStepB.setAction("OffClick", function(_data,_info) {
  text="paused";
  _pause();

}); // HtmlView Page setting action 'OffClick' for element 'playPauseButtonStepB'
          _view.playPauseButtonStepB.linkProperty("State",  function() { return _isPaused; } ); // HtmlView Page linking property 'State' for element 'playPauseButtonStepB'
          _view.playPauseButtonStepB.linkProperty("Visibility",  function() { return questionanswershow==false; } ); // HtmlView Page linking property 'Visibility' for element 'playPauseButtonStepB'
          _view.playPauseButtonStepB.setAction("OnClick", function(_data,_info) {
  questionmorelessnumbers=questionmorelessnumber; //store value
  questionmorelessnumber=0; //temporary for animation
  //set to show
  questionmorelessnumbershow=true;
  _view.comboBox.setSelectedOptions(["?"]);
  //if (questionanswershow==false){
  if (question1type==true){
   EJSS_INTERFACE.BoxPanel.showOkDialog("Step B Draw a bar going right if it is more, or draw a bar going left if it is less. In this case, it is unknown (?) " );
  //colorred=true;
  }
  else if (question2type==true){
   EJSS_INTERFACE.BoxPanel.showOkDialog("Step B Draw a bar going right if it is more, or draw a bar going left if it is less. In this case, it is "+questionmorelessnumbers );
  }
  if (question3type==true){
   EJSS_INTERFACE.BoxPanel.showOkDialog("Step B Draw a bar going right if it is more, or draw a bar going left if it is less. In this case, it is "+questionmorelessnumbers );
  }
  colorred=true; //move here to red for all question 1 to 15
  //}
  /*
  if (questionanswershow==true){
    
  if (question1type==true){
   EJSS_INTERFACE.BoxPanel.showOkDialog("Step C Draw a last bar to match the length of the first two bars and write the number"+questionanswer.toFixed(0) +"Click OK and try again using the bar comparison model method shown");
  colorgreen=true;
  }
  else if (question2type==true){
   EJSS_INTERFACE.BoxPanel.showOkDialog("Step C Draw a last bar to match the length of the first two bars and write the number"+questionanswer.toFixed(0) +"Click OK and try again using the bar comparison model method shown");
  }
  else if (question3type==true){
   EJSS_INTERFACE.BoxPanel.showOkDialog("Step C Draw a last bar to match the length of the first two bars and write the number which in this case is unknown" +"Click OK and try again using the bar comparison model method shown");
  }
  }
  */
  //continue
  _play();
  text="playing";

}); // HtmlView Page setting action 'OnClick' for element 'playPauseButtonStepB'
          _view.playPauseButtonStepB.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'playPauseButtonStepB'
          _view.playPauseButtonStepB.linkProperty("Display",  function() { return !questionanswershow?"inline-block":"none"; } ); // HtmlView Page linking property 'Display' for element 'playPauseButtonStepB'
          _view.playPauseButtonstepC.setAction("OffClick", function(_data,_info) {
  text="paused";
  _pause();

}); // HtmlView Page setting action 'OffClick' for element 'playPauseButtonstepC'
          _view.playPauseButtonstepC.linkProperty("State",  function() { return _isPaused; } ); // HtmlView Page linking property 'State' for element 'playPauseButtonstepC'
          _view.playPauseButtonstepC.linkProperty("Visibility",  function() { return questionanswershow==true; } ); // HtmlView Page linking property 'Visibility' for element 'playPauseButtonstepC'
          _view.playPauseButtonstepC.setAction("OnClick", function(_data,_info) {
  if (questionanswershow==true){
    
  if (question1type==true){
   EJSS_INTERFACE.BoxPanel.showOkDialog("Step C Draw a last bar to match the length of the first two bars and write the number"+questionanswer.toFixed(0) +"Click OK and try again using the bar comparison model method shown");
  //colorgreen=true;
  }
  else if (question2type==true){
   EJSS_INTERFACE.BoxPanel.showOkDialog("Step C Draw a last bar to match the length of the first two bars and write the number"+questionanswer.toFixed(0) +"Click OK and try again using the bar comparison model method shown");
  }
  else if (question3type==true){
   EJSS_INTERFACE.BoxPanel.showOkDialog("Step C Draw a last bar to match the length of the first two bars and write the number which in this case is unknown" +"Click OK and try again using the bar comparison model method shown");
  }
  colorgreen=true;
  }

}); // HtmlView Page setting action 'OnClick' for element 'playPauseButtonstepC'
          _view.playPauseButtonstepC.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'playPauseButtonstepC'
          _view.playPauseButtonstepC.linkProperty("Display",  function() { return questionanswershow?"inline-block":"none"; } ); // HtmlView Page linking property 'Display' for element 'playPauseButtonstepC'
          _view.resetButton.setAction("OnClick", function(_data,_info) {
  Q1= Q1+1;
       _reset(); //when click ok
      _update(); //force update of Q1;

}); // HtmlView Page setting action 'OnClick' for element 'resetButton'
          _view.resetButton.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'resetButton'
          _view.plottingPanel.linkProperty("Width",  function() { return Width1; }, function(_v) { Width1 = _v; } ); // HtmlView Page linking property 'Width' for element 'plottingPanel'
          _view.plottingPanel.setAction("OnDoubleClick", function(_data,_info) {
  if (_model.isPaused){
    
    //stepA
   score=score+0;    
   // EJSS_INTERFACE.BoxPanel.showOkDialog("try again!");
   EJSS_INTERFACE.BoxPanel.showOkDialog("The correct method has three steps,  Step A Draw a box and write the number found after the word 'than' in this box. In this case, it is "+questionthannumber+"\n Click Play button to continue" );
   questionthannumbershow=true;
   colorblue=true;  
    
    //stepB n C
   questionmorelessnumbers=questionmorelessnumber; //store value
  questionmorelessnumber=0; //temporary for animation
  //set to show
  questionmorelessnumbershow=true;
  _view.comboBox.setSelectedOptions(["?"]);
  if (question1type==true){
   EJSS_INTERFACE.BoxPanel.showOkDialog("Step B Draw a bar going right if it is more, or draw a bar going left if it is less. In this case, it is unknown (?) " );
  colorred=true;
  }
  else if (question2type==true){
   EJSS_INTERFACE.BoxPanel.showOkDialog("Step B Draw a bar going right if it is more, or draw a bar going left if it is less. In this case, it is "+questionmorelessnumbers );
  }
  if (question3type==true){
   EJSS_INTERFACE.BoxPanel.showOkDialog("Step B Draw a bar going right if it is more, or draw a bar going left if it is less. In this case, it is "+questionmorelessnumbers );
  }
  _play();
  text="playing";
    }
  else {
    
    }

}); // HtmlView Page setting action 'OnDoubleClick' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("TRMessage",  function() { return "score="+score; } ); // HtmlView Page linking property 'TRMessage' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("Visibility",  function() { return world===true; } ); // HtmlView Page linking property 'Visibility' for element 'plottingPanel'
          _view.questionthannumberblue.linkProperty("Visibility",  function() { return questionthannumbershow; }, function(_v) { questionthannumbershow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'questionthannumberblue'
          _view.shape3.linkProperty("SizeX",  function() { return questionthannumber; }, function(_v) { questionthannumber = _v; } ); // HtmlView Page linking property 'SizeX' for element 'shape3'
          _view.shape.linkProperty("SizeX",  function() { return questionthannumber; }, function(_v) { questionthannumber = _v; } ); // HtmlView Page linking property 'SizeX' for element 'shape'
          _view.group2.linkProperty("X",  function() { return questionthannumber/2; } ); // HtmlView Page linking property 'X' for element 'group2'
          _view.arrow.linkProperty("SizeX",  function() { return questionthannumber; }, function(_v) { questionthannumber = _v; } ); // HtmlView Page linking property 'SizeX' for element 'arrow'
          _view.text2.linkProperty("Text",  function() { return ""+questionthannumber.toFixed(0); } ); // HtmlView Page linking property 'Text' for element 'text2'
          _view.text2.linkProperty("Visibility",  function() { return !question2type; } ); // HtmlView Page linking property 'Visibility' for element 'text2'
          _view._mark3.linkProperty("Visibility",  function() { return question2type; }, function(_v) { question2type = _v; } ); // HtmlView Page linking property 'Visibility' for element '_mark3'
          _view.questionmorelessnumber.linkProperty("X",  function() { return questionthannumber; }, function(_v) { questionthannumber = _v; } ); // HtmlView Page linking property 'X' for element 'questionmorelessnumber'
          _view.questionmorelessnumber.linkProperty("Visibility",  function() { return questionmorelessnumbershow; }, function(_v) { questionmorelessnumbershow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'questionmorelessnumber'
          _view.shape22.linkProperty("SizeX",  function() { return sign*questionmorelessnumber; } ); // HtmlView Page linking property 'SizeX' for element 'shape22'
          _view.shape23.linkProperty("SizeX",  function() { return sign*questionmorelessnumber; } ); // HtmlView Page linking property 'SizeX' for element 'shape23'
          _view.group22.linkProperty("X",  function() { return sign*questionmorelessnumber/2; } ); // HtmlView Page linking property 'X' for element 'group22'
          _view.arrow2.linkProperty("SizeX",  function() { return sign*questionmorelessnumber; } ); // HtmlView Page linking property 'SizeX' for element 'arrow2'
          _view.text22.linkProperty("Text",  function() { return ""+questionmorelessnumber.toFixed(0); } ); // HtmlView Page linking property 'Text' for element 'text22'
          _view.text22.linkProperty("Visibility",  function() { return !question1type; } ); // HtmlView Page linking property 'Visibility' for element 'text22'
          _view._mark.linkProperty("Visibility",  function() { return question1type; }, function(_v) { question1type = _v; } ); // HtmlView Page linking property 'Visibility' for element '_mark'
          _view.questionanswer.linkProperty("Visibility",  function() { return questionanswershow; }, function(_v) { questionanswershow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'questionanswer'
          _view.shape32.linkProperty("SizeX",  function() { return questionanswer; }, function(_v) { questionanswer = _v; } ); // HtmlView Page linking property 'SizeX' for element 'shape32'
          _view.shape4.linkProperty("SizeX",  function() { return questionanswer; }, function(_v) { questionanswer = _v; } ); // HtmlView Page linking property 'SizeX' for element 'shape4'
          _view.group23.linkProperty("X",  function() { return questionanswer/2; } ); // HtmlView Page linking property 'X' for element 'group23'
          _view.arrow3.linkProperty("SizeX",  function() { return questionanswer; }, function(_v) { questionanswer = _v; } ); // HtmlView Page linking property 'SizeX' for element 'arrow3'
          _view.text23.linkProperty("Text",  function() { return ""+questionanswer.toFixed(0); } ); // HtmlView Page linking property 'Text' for element 'text23'
          _view.text23.linkProperty("Visibility",  function() { return !question3type; } ); // HtmlView Page linking property 'Visibility' for element 'text23'
          _view._mark2.linkProperty("Visibility",  function() { return question3type; }, function(_v) { question3type = _v; } ); // HtmlView Page linking property 'Visibility' for element '_mark2'
          break;
      } // end of switch
    }; // end of new reset

    _model.setView(_view);
    _model.reset();
    _view._enableEPub();
  } // end of _selectView

  _model.setAutoplay(false);
  _model.setFPS(20);
  _model.setStepsPerDisplay(1);
  _selectView(-1); // this includes _model.reset()
  return _model;
}

function morethanlessthan_View (_topFrame,_viewNumber,_libraryPath,_codebasePath) {
  var _view;
  switch(_viewNumber) {
    case -10 : break; // make Lint happy
    default :
    case 0: _view = morethanlessthan_View_0 (_topFrame); break;
  } // end of switch

  if (_codebasePath) _view._setResourcePath(_codebasePath);

  if (_libraryPath) _view._setLibraryPath(_libraryPath);


  return _view;
} // end of main function

function morethanlessthan_View_0 (_topFrame) {
  var _view = EJSS_CORE.createView(_topFrame);

  _view._reset = function() {
    _view._clearAll();
    _view._addElement(EJSS_INTERFACE.panel,"fullscreen", _view._topFrame) // EJsS HtmlView.HtmlView Page: declaration of element 'fullscreen'
      .setProperty("Height","100%") // EJsS HtmlView.HtmlView Page: setting property 'Height' for element 'fullscreen'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"panel2", _view.fullscreen) // EJsS HtmlView.HtmlView Page: declaration of element 'panel2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"Q1", _view.panel2) // EJsS HtmlView.HtmlView Page: declaration of element 'Q1'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"question1type", _view.panel2) // EJsS HtmlView.HtmlView Page: declaration of element 'question1type'
      .setProperty("CSS",{"display":"inline"}) // EJsS HtmlView.HtmlView Page: setting property 'CSS' for element 'question1type'
      .setProperty("BorderWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'BorderWidth' for element 'question1type'
      ;

    _view._addElement(EJSS_INTERFACE.comboBox,"comboBox", _view.question1type) // EJsS HtmlView.HtmlView Page: declaration of element 'comboBox'
      .setProperty("Tooltip","select user_defined and drag the mass") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'comboBox'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"moreless", _view.question1type) // EJsS HtmlView.HtmlView Page: declaration of element 'moreless'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"than", _view.question1type) // EJsS HtmlView.HtmlView Page: declaration of element 'than'
      .setProperty("Text","than") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'than'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"questionthannumber2", _view.question1type) // EJsS HtmlView.HtmlView Page: declaration of element 'questionthannumber2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"is", _view.question1type) // EJsS HtmlView.HtmlView Page: declaration of element 'is'
      .setProperty("Text","is") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'is'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"questionanswer2", _view.question1type) // EJsS HtmlView.HtmlView Page: declaration of element 'questionanswer2'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"question2type", _view.panel2) // EJsS HtmlView.HtmlView Page: declaration of element 'question2type'
      .setProperty("CSS",{"display":"inline"}) // EJsS HtmlView.HtmlView Page: setting property 'CSS' for element 'question2type'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"questionmorelessnumber2", _view.question2type) // EJsS HtmlView.HtmlView Page: declaration of element 'questionmorelessnumber2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"moreless2", _view.question2type) // EJsS HtmlView.HtmlView Page: declaration of element 'moreless2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"than2", _view.question2type) // EJsS HtmlView.HtmlView Page: declaration of element 'than2'
      .setProperty("Text","than") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'than2'
      ;

    _view._addElement(EJSS_INTERFACE.comboBox,"comboBox2", _view.question2type) // EJsS HtmlView.HtmlView Page: declaration of element 'comboBox2'
      .setProperty("Tooltip","select user_defined and drag the mass") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'comboBox2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"is2", _view.question2type) // EJsS HtmlView.HtmlView Page: declaration of element 'is2'
      .setProperty("Text","is") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'is2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"questionanswer22", _view.question2type) // EJsS HtmlView.HtmlView Page: declaration of element 'questionanswer22'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"question3type", _view.panel2) // EJsS HtmlView.HtmlView Page: declaration of element 'question3type'
      .setProperty("CSS",{"display":"inline"}) // EJsS HtmlView.HtmlView Page: setting property 'CSS' for element 'question3type'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"questionmorelessnumber22", _view.question3type) // EJsS HtmlView.HtmlView Page: declaration of element 'questionmorelessnumber22'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"moreless22", _view.question3type) // EJsS HtmlView.HtmlView Page: declaration of element 'moreless22'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"than22", _view.question3type) // EJsS HtmlView.HtmlView Page: declaration of element 'than22'
      .setProperty("Text","than") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'than22'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"questionthannumber22", _view.question3type) // EJsS HtmlView.HtmlView Page: declaration of element 'questionthannumber22'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"is22", _view.question3type) // EJsS HtmlView.HtmlView Page: declaration of element 'is22'
      .setProperty("Text","is") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'is22'
      ;

    _view._addElement(EJSS_INTERFACE.comboBox,"comboBox22", _view.question3type) // EJsS HtmlView.HtmlView Page: declaration of element 'comboBox22'
      .setProperty("Tooltip","select user_defined and drag the mass") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'comboBox22'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controlPanel", _view.panel2) // EJsS HtmlView.HtmlView Page: declaration of element 'controlPanel'
      .setProperty("CSS",{"display":"inline"}) // EJsS HtmlView.HtmlView Page: setting property 'CSS' for element 'controlPanel'
      ;

    _view._addElement(EJSS_INTERFACE.twoStateButton,"playPauseButtonStepB", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'playPauseButtonStepB'
      .setProperty("TextOn","▶") // EJsS HtmlView.HtmlView Page: setting property 'TextOn' for element 'playPauseButtonStepB'
      .setProperty("Tooltip","Play/Pause") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'playPauseButtonStepB'
      .setProperty("TextOff","❚❚") // EJsS HtmlView.HtmlView Page: setting property 'TextOff' for element 'playPauseButtonStepB'
      ;

    _view._addElement(EJSS_INTERFACE.twoStateButton,"playPauseButtonstepC", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'playPauseButtonstepC'
      .setProperty("TextOn","▶") // EJsS HtmlView.HtmlView Page: setting property 'TextOn' for element 'playPauseButtonstepC'
      .setProperty("Tooltip","Play/Pause") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'playPauseButtonstepC'
      .setProperty("TextOff","❚❚") // EJsS HtmlView.HtmlView Page: setting property 'TextOff' for element 'playPauseButtonstepC'
      ;

    _view._addElement(EJSS_INTERFACE.button,"resetButton", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'resetButton'
      .setProperty("Text","↻") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'resetButton'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"panel", _view.fullscreen) // EJsS HtmlView.HtmlView Page: declaration of element 'panel'
      .setProperty("Height","100%") // EJsS HtmlView.HtmlView Page: setting property 'Height' for element 'panel'
      .setProperty("Width","100%") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'panel'
      ;

    _view._addElement(EJSS_DRAWING2D.plottingPanel,"plottingPanel", _view.panel) // EJsS HtmlView.HtmlView Page: declaration of element 'plottingPanel'
      .setProperty("Height","80vh") // EJsS HtmlView.HtmlView Page: setting property 'Height' for element 'plottingPanel'
      .setProperty("Gutters",[0,0,0,50]) // EJsS HtmlView.HtmlView Page: setting property 'Gutters' for element 'plottingPanel'
      .setProperty("ShowAreaRectangle",false) // EJsS HtmlView.HtmlView Page: setting property 'ShowAreaRectangle' for element 'plottingPanel'
      .setProperty("YScalePrecision",0) // EJsS HtmlView.HtmlView Page: setting property 'YScalePrecision' for element 'plottingPanel'
      .setProperty("XFixedTick",0) // EJsS HtmlView.HtmlView Page: setting property 'XFixedTick' for element 'plottingPanel'
      .setProperty("YFixedTick",0) // EJsS HtmlView.HtmlView Page: setting property 'YFixedTick' for element 'plottingPanel'
      .setProperty("XTickStep",1) // EJsS HtmlView.HtmlView Page: setting property 'XTickStep' for element 'plottingPanel'
      .setProperty("YTickStep",1) // EJsS HtmlView.HtmlView Page: setting property 'YTickStep' for element 'plottingPanel'
      .setProperty("XAutoTicks",false) // EJsS HtmlView.HtmlView Page: setting property 'XAutoTicks' for element 'plottingPanel'
      .setProperty("Enabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Enabled' for element 'plottingPanel'
      .setProperty("MaximumY",0.3) // EJsS HtmlView.HtmlView Page: setting property 'MaximumY' for element 'plottingPanel'
      .setProperty("MaximumX",40) // EJsS HtmlView.HtmlView Page: setting property 'MaximumX' for element 'plottingPanel'
      .setProperty("EnabledDragging","ENABLED_X") // EJsS HtmlView.HtmlView Page: setting property 'EnabledDragging' for element 'plottingPanel'
      .setProperty("YAutoTicks",false) // EJsS HtmlView.HtmlView Page: setting property 'YAutoTicks' for element 'plottingPanel'
      .setProperty("MinimumX",0) // EJsS HtmlView.HtmlView Page: setting property 'MinimumX' for element 'plottingPanel'
      .setProperty("MinimumY",-1.7) // EJsS HtmlView.HtmlView Page: setting property 'MinimumY' for element 'plottingPanel'
      .setProperty("AxisXFont","normal normal 1vw ") // EJsS HtmlView.HtmlView Page: setting property 'AxisXFont' for element 'plottingPanel'
      .setProperty("AutoScaleY",false) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleY' for element 'plottingPanel'
      .setProperty("TitleX","") // EJsS HtmlView.HtmlView Page: setting property 'TitleX' for element 'plottingPanel'
      .setProperty("AutoScaleX",false) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleX' for element 'plottingPanel'
      .setProperty("XScalePrecision",0) // EJsS HtmlView.HtmlView Page: setting property 'XScalePrecision' for element 'plottingPanel'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"questionthannumberblue", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'questionthannumberblue'
      .setProperty("Y",-1) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'questionthannumberblue'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"shape3", _view.questionthannumberblue) // EJsS HtmlView.HtmlView Page: declaration of element 'shape3'
      .setProperty("RelativePosition","WEST") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element 'shape3'
      .setProperty("ShapeType","RECTANGLE") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'shape3'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'shape3'
      .setProperty("SizeY",0.5) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'shape3'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"shape", _view.questionthannumberblue) // EJsS HtmlView.HtmlView Page: declaration of element 'shape'
      .setProperty("FillColor","url(#mygrandient)") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'shape'
      .setProperty("RelativePosition","WEST") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element 'shape'
      .setProperty("ShapeType","RECTANGLE") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'shape'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'shape'
      .setProperty("SizeY",0.5) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'shape'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"group2", _view.questionthannumberblue) // EJsS HtmlView.HtmlView Page: declaration of element 'group2'
      .setProperty("Y",-0.5) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'group2'
      ;

    _view._addElement(EJSS_DRAWING2D.arrow,"arrow", _view.group2) // EJsS HtmlView.HtmlView Page: declaration of element 'arrow'
      .setProperty("MarkEnd","ANGLE") // EJsS HtmlView.HtmlView Page: setting property 'MarkEnd' for element 'arrow'
      .setProperty("MarkStart","INVANGLE") // EJsS HtmlView.HtmlView Page: setting property 'MarkStart' for element 'arrow'
      .setProperty("SizeY",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'arrow'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'arrow'
      .setProperty("Offset","CENTERED") // EJsS HtmlView.HtmlView Page: setting property 'Offset' for element 'arrow'
      ;

    _view._addElement(EJSS_DRAWING2D.text,"text2", _view.group2) // EJsS HtmlView.HtmlView Page: declaration of element 'text2'
      .setProperty("MovesGroup",true) // EJsS HtmlView.HtmlView Page: setting property 'MovesGroup' for element 'text2'
      .setProperty("RelativePosition","CENTERED") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element 'text2'
      .setProperty("Y",0.125) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'text2'
      .setProperty("EnabledPosition","ENABLED_Y") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element 'text2'
      .setProperty("Font","normal normal 5vw ") // EJsS HtmlView.HtmlView Page: setting property 'Font' for element 'text2'
      ;

    _view._addElement(EJSS_DRAWING2D.text,"_mark3", _view.group2) // EJsS HtmlView.HtmlView Page: declaration of element '_mark3'
      .setProperty("MovesGroup",true) // EJsS HtmlView.HtmlView Page: setting property 'MovesGroup' for element '_mark3'
      .setProperty("RelativePosition","CENTERED") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element '_mark3'
      .setProperty("Y",0.125) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element '_mark3'
      .setProperty("Text","?") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element '_mark3'
      .setProperty("EnabledPosition","ENABLED_Y") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element '_mark3'
      .setProperty("Font","normal bold 5vw ") // EJsS HtmlView.HtmlView Page: setting property 'Font' for element '_mark3'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"questionmorelessnumber", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'questionmorelessnumber'
      .setProperty("Y",-1) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'questionmorelessnumber'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"shape22", _view.questionmorelessnumber) // EJsS HtmlView.HtmlView Page: declaration of element 'shape22'
      .setProperty("FillColor","Red") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'shape22'
      .setProperty("RelativePosition","WEST") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element 'shape22'
      .setProperty("ShapeType","RECTANGLE") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'shape22'
      .setProperty("SizeY",0.5) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'shape22'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"shape23", _view.questionmorelessnumber) // EJsS HtmlView.HtmlView Page: declaration of element 'shape23'
      .setProperty("FillColor","url(#mygrandient)") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'shape23'
      .setProperty("MovesGroup",true) // EJsS HtmlView.HtmlView Page: setting property 'MovesGroup' for element 'shape23'
      .setProperty("RelativePosition","WEST") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element 'shape23'
      .setProperty("ShapeType","RECTANGLE") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'shape23'
      .setProperty("SizeY",0.5) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'shape23'
      .setProperty("EnabledPosition","ENABLED_Y") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element 'shape23'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"group22", _view.questionmorelessnumber) // EJsS HtmlView.HtmlView Page: declaration of element 'group22'
      ;

    _view._addElement(EJSS_DRAWING2D.arrow,"arrow2", _view.group22) // EJsS HtmlView.HtmlView Page: declaration of element 'arrow2'
      .setProperty("MarkEnd","TRIANGLE") // EJsS HtmlView.HtmlView Page: setting property 'MarkEnd' for element 'arrow2'
      .setProperty("MarkStart","NONE") // EJsS HtmlView.HtmlView Page: setting property 'MarkStart' for element 'arrow2'
      .setProperty("SizeY",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'arrow2'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'arrow2'
      .setProperty("Offset","CENTERED") // EJsS HtmlView.HtmlView Page: setting property 'Offset' for element 'arrow2'
      ;

    _view._addElement(EJSS_DRAWING2D.text,"text22", _view.group22) // EJsS HtmlView.HtmlView Page: declaration of element 'text22'
      .setProperty("MovesGroup",true) // EJsS HtmlView.HtmlView Page: setting property 'MovesGroup' for element 'text22'
      .setProperty("RelativePosition","CENTERED") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element 'text22'
      .setProperty("Y",0.125) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'text22'
      .setProperty("EnabledPosition","ENABLED_Y") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element 'text22'
      .setProperty("Font","normal normal 5vw ") // EJsS HtmlView.HtmlView Page: setting property 'Font' for element 'text22'
      ;

    _view._addElement(EJSS_DRAWING2D.text,"_mark", _view.group22) // EJsS HtmlView.HtmlView Page: declaration of element '_mark'
      .setProperty("MovesGroup",true) // EJsS HtmlView.HtmlView Page: setting property 'MovesGroup' for element '_mark'
      .setProperty("RelativePosition","CENTERED") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element '_mark'
      .setProperty("Y",0.125) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element '_mark'
      .setProperty("Text","    ?    ") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element '_mark'
      .setProperty("EnabledPosition","ENABLED_Y") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element '_mark'
      .setProperty("Font","normal bold 5vw ") // EJsS HtmlView.HtmlView Page: setting property 'Font' for element '_mark'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"indicatorcandrag", _view.questionmorelessnumber) // EJsS HtmlView.HtmlView Page: declaration of element 'indicatorcandrag'
      .setProperty("MovesGroup",true) // EJsS HtmlView.HtmlView Page: setting property 'MovesGroup' for element 'indicatorcandrag'
      .setProperty("SizeX",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'indicatorcandrag'
      .setProperty("RelativePosition","CENTERED") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element 'indicatorcandrag'
      .setProperty("ShapeType","RECTANGLE") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'indicatorcandrag'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'indicatorcandrag'
      .setProperty("LineColor","Orange") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'indicatorcandrag'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'indicatorcandrag'
      .setProperty("SizeY",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'indicatorcandrag'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'indicatorcandrag'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'indicatorcandrag'
      .setProperty("DrawFill",false) // EJsS HtmlView.HtmlView Page: setting property 'DrawFill' for element 'indicatorcandrag'
      .setProperty("EnabledPosition","ENABLED_Y") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element 'indicatorcandrag'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"questionanswer", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'questionanswer'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'questionanswer'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"shape32", _view.questionanswer) // EJsS HtmlView.HtmlView Page: declaration of element 'shape32'
      .setProperty("FillColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'shape32'
      .setProperty("RelativePosition","WEST") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element 'shape32'
      .setProperty("ShapeType","RECTANGLE") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'shape32'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'shape32'
      .setProperty("SizeY",0.5) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'shape32'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"shape4", _view.questionanswer) // EJsS HtmlView.HtmlView Page: declaration of element 'shape4'
      .setProperty("FillColor","url(#mygrandient)") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'shape4'
      .setProperty("RelativePosition","WEST") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element 'shape4'
      .setProperty("ShapeType","RECTANGLE") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'shape4'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'shape4'
      .setProperty("SizeY",0.5) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'shape4'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"group23", _view.questionanswer) // EJsS HtmlView.HtmlView Page: declaration of element 'group23'
      ;

    _view._addElement(EJSS_DRAWING2D.arrow,"arrow3", _view.group23) // EJsS HtmlView.HtmlView Page: declaration of element 'arrow3'
      .setProperty("MarkEnd","ANGLE") // EJsS HtmlView.HtmlView Page: setting property 'MarkEnd' for element 'arrow3'
      .setProperty("MarkStart","INVANGLE") // EJsS HtmlView.HtmlView Page: setting property 'MarkStart' for element 'arrow3'
      .setProperty("SizeY",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'arrow3'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'arrow3'
      .setProperty("Offset","CENTERED") // EJsS HtmlView.HtmlView Page: setting property 'Offset' for element 'arrow3'
      ;

    _view._addElement(EJSS_DRAWING2D.text,"text23", _view.group23) // EJsS HtmlView.HtmlView Page: declaration of element 'text23'
      .setProperty("MovesGroup",true) // EJsS HtmlView.HtmlView Page: setting property 'MovesGroup' for element 'text23'
      .setProperty("RelativePosition","CENTERED") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element 'text23'
      .setProperty("Y",0.125) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'text23'
      .setProperty("EnabledPosition","ENABLED_Y") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element 'text23'
      .setProperty("Font","normal normal 5vw ") // EJsS HtmlView.HtmlView Page: setting property 'Font' for element 'text23'
      ;

    _view._addElement(EJSS_DRAWING2D.text,"_mark2", _view.group23) // EJsS HtmlView.HtmlView Page: declaration of element '_mark2'
      .setProperty("MovesGroup",true) // EJsS HtmlView.HtmlView Page: setting property 'MovesGroup' for element '_mark2'
      .setProperty("RelativePosition","CENTERED") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element '_mark2'
      .setProperty("Y",0.125) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element '_mark2'
      .setProperty("Text","?") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element '_mark2'
      .setProperty("EnabledPosition","ENABLED_Y") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element '_mark2'
      .setProperty("Font","normal bold 5vw ") // EJsS HtmlView.HtmlView Page: setting property 'Font' for element '_mark2'
      ;

  };

  return _view;
}


//--><!]]></script>
  </head>
  <body>
    <div role="button" id="_topFrame" style="text-align:center"></div>
  <div id="metadata" class="metadata">
    <br />
    <div id="title_author">
      <hr />
      <b>Title and author:</b>
      <p>
      More than Less than Question Generator<br />
     <img alt="Logo" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/01Math/dawn/ejss_src_morethanlessthan/morethanlessthan/Screen Shot 2017-08-16 at 4.55.21 PM.png" />
      </p>
      <p>
      <img alt="author image" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/01Math/dawn/ejss_src_morethanlessthan/1authorlookangphoto5050.png" />
      <img alt="author image" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/01Math/dawn/ejss_src_morethanlessthan/01authorPacoEsquembre2011.png" />
      <img alt="author image" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/01Math/dawn/ejss_src_morethanlessthan/01authorFelix_J_Garcia_Clemente.png" />
 weelookang@gmail.com; Francisco Esquembre; Félix J. García Clemente
      </p>
    </div>
    <hr />
    <p></p>
    <div id="copyright_message">
      <div class="cc_left"  style="float:left">&#169; 2018, CC-BY-NC-SA.</div>
      <div class="cc_right" style="float:right">    Released under a <a rel="license" target="_blank" href="http://creativecommons.org/licenses/by-nc-sa/4.0/deed.en_US"> <img alt="Creative Commons Attribution-NonCommercial-ShareAlike" src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/images/cc_icon.png" /> </a> license.</div>
    </div>
  </div>
    <script type="text/javascript"><!--//--><![CDATA[//><!--
      var _model;
      var _scorm;
      window.addEventListener('load',
        function () { 
          _model =  new morethanlessthan("_topFrame","file:/Users/lookang/Google%20Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/","file:/Users/lookang/Google%20Drive/PublicLawrence/workspace/source/EJSS/01Math/dawn/ejss_src_morethanlessthan/");
          if (typeof _isApp !== "undefined" && _isApp) _model.setRunAlways(true);
          TextResizeDetector.TARGET_ELEMENT_ID = '_topFrame';
          TextResizeDetector.USER_INIT_FUNC = function () {
            var iBase = TextResizeDetector.addEventListener(function(e,args) {
              _model._fontResized(args[0].iBase,args[0].iSize,args[0].iDelta);
              },null);
            _model._fontResized(iBase);
          };
          _model.onload();
        }, false);
    //--><!]]></script>
  </body>
</html>
