<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Symmetry of Letters</title>
    <link rel="stylesheet"  type="text/css" href="file:///Users/lookang/Google Drive/PublicLawrence/workspace/output/_ejs_library/css/ejss.css" />
    <link rel="stylesheet"  type="text/css" href="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/01Math/dawn/ejss_src_symmetryletter/symmetryletter/ttf_fonts copy.css" />
    <link rel="stylesheet"  type="text/css" href="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/01Math/dawn/ejss_src_symmetryletter/symmetryletter/ttf_fonts.css" />
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_6.0_beta/bin/javascript/lib/scripts/common_script.js"></script>
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_6.0_beta/bin/javascript/lib/scripts/textresizedetector.js"></script>
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_6.0_beta/bin/javascript/lib/ejsS.v1.min.js"></script>
<script type="text/javascript"><!--//--><![CDATA[//><!--
/* _inputParameters: an object with different values for the model parameters */
function symmetryletter(_topFrame,_libraryPath,_codebasePath, _inputParameters) {
  var _model = EJSS_CORE.createAnimationLMS();
  var _view;
  var _isPlaying = false;
  var _isPaused = true;
  var _isMobile = (navigator===undefined) ? false : navigator.userAgent.match(/iPhone|iPad|iPod|Android|BlackBerry|Opera Mini|IEMobile/i);

var _stringProperties = {};
  var _tools = {
    showInputDialog : EJSS_INTERFACE.BoxPanel.showInputDialog,
    showOkDialog : EJSS_INTERFACE.BoxPanel.showOkDialog,
    showOkCancelDialog : EJSS_INTERFACE.BoxPanel.showOkCancelDialog,
    downloadText: EJSS_TOOLS.File.downloadText,
    uploadText: function(action) { EJSS_TOOLS.File.uploadText(_model,action); } 
  };

  function _play()  { _isPaused = false; _isPlaying = true;  _model.play();  }
  function _pause() { _isPaused = true;  _isPlaying = false; _model.pause(); }
  function _step()  { _pause();  _model.step(); }
  function _reset() { _model.reset();  _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); }
  _model._play  = _play;
  _model._pause = _pause;
  _model._step  = _step;
  _model._reset = _reset;
  function _update() { _model.update(); }
  function _initialize() { _model.initialize(); }
  function _setFPS(_fps) { _model.setFPS(_fps); }
  function _setDelay(_delay) { _model.setDelay(_delay); }
  function _setStepsPerDisplay(_spd) { _model.setStepsPerDisplay(_spd); }
  function _setUpdateView(_updateView) { _model.setUpdateView(_updateView); }
  function _setAutoplay(_auto) { _model.setAutoplay(_auto); }
  function _println(_message) { console.log(_message); }

  function _breakAfterThisPage() { _model.setShouldBreak(true); }

  function _resetSolvers() { if (_model.resetSolvers) _model.resetSolvers(); }

  function _saveText(name,type,content) { if (_model.saveText) _model.saveText(name,type,content); }

  function _saveState(name) { if (_model.saveState) _model.saveState(name); }

  function _saveImage(name,panelname) { if (_model.saveImage) _model.saveImage(name,panelname); }

  function _readState(url,type) { if (_model.readState) _model.readState(url,type); }

  function _readText(url,type,varname) { if (_model.readText) _model.readText(url,type,varname); }

  function _getStringProperty(propertyName) {
    var _value = _stringProperties[propertyName];
    if (_value===undefined) return propertyName;
    else return _value;
  }
  var __pagesEnabled = [];
  function _setPageEnabled(pageName,enabled) { __pagesEnabled[pageName] = enabled; }

  var font; // EjsS Model.Variables.Var Table.font
  var xmin; // EjsS Model.Variables.Var Table.xmin
  var a; // EjsS Model.Variables.Var Table.a
  var achange; // EjsS Model.Variables.Var Table.achange
  var b; // EjsS Model.Variables.Var Table.b
  var bchange; // EjsS Model.Variables.Var Table.bchange
  var c; // EjsS Model.Variables.Var Table.c
  var cchange; // EjsS Model.Variables.Var Table.cchange
  var d; // EjsS Model.Variables.Var Table.d
  var dchange; // EjsS Model.Variables.Var Table.dchange
  var e; // EjsS Model.Variables.Var Table.e
  var f; // EjsS Model.Variables.Var Table.f
  var letter; // EjsS Model.Variables.Var Table.letter
  var xmax; // EjsS Model.Variables.Var Table.xmax
  var ymin; // EjsS Model.Variables.Var Table.ymin
  var ymax; // EjsS Model.Variables.Var Table.ymax
  var rangex; // EjsS Model.Variables.Var Table.rangex
  var rangey; // EjsS Model.Variables.Var Table.rangey
  var sizex; // EjsS Model.Variables.Var Table.sizex
  var sizey; // EjsS Model.Variables.Var Table.sizey
  var selected; // EjsS Model.Variables.Var Table.selected
  var text; // EjsS Model.Variables.Var Table.text
  var pi; // EjsS Model.Variables.Var Table.pi
  var y1; // EjsS Model.Variables.Var Table.y1
  var ysize; // EjsS Model.Variables.Var Table.ysize
  var t; // EjsS Model.Variables.Var Table.t
  var dt; // EjsS Model.Variables.Var Table.dt
  var ty; // EjsS Model.Variables.Var Table.ty
  var dty; // EjsS Model.Variables.Var Table.dty
  var n; // EjsS Model.Variables.Var Table.n
  var t2; // EjsS Model.Variables.Var Table.t2
  var dt2; // EjsS Model.Variables.Var Table.dt2
  var t3; // EjsS Model.Variables.Var Table.t3
  var dt3; // EjsS Model.Variables.Var Table.dt3
  var letterxy; // EjsS Model.Variables.Var Table.letterxy
  var letterxystay; // EjsS Model.Variables.Var Table.letterxystay
  var letterxyfold; // EjsS Model.Variables.Var Table.letterxyfold
  var letterxystaytop; // EjsS Model.Variables.Var Table.letterxystaytop
  var letterxyfoldbot; // EjsS Model.Variables.Var Table.letterxyfoldbot
  var showfoldlr; // EjsS Model.Variables.Var Table.showfoldlr
  var showfoldbt; // EjsS Model.Variables.Var Table.showfoldbt
  var showfoldlrs; // EjsS Model.Variables.Var Table.showfoldlrs
  var showfoldbts; // EjsS Model.Variables.Var Table.showfoldbts
  var showlrbt; // EjsS Model.Variables.Var Table.showlrbt
  var showbt; // EjsS Model.Variables.Var Table.showbt
  var showlrs; // EjsS Model.Variables.Var Table.showlrs
  var showbts; // EjsS Model.Variables.Var Table.showbts
  var statetopbot; // EjsS Model.Variables.Var Table.statetopbot

  var help; // EjsS Model.Variables.mirror.help
  var symmetrylinev; // EjsS Model.Variables.mirror.symmetrylinev
  var symmetrylineh; // EjsS Model.Variables.mirror.symmetrylineh
  var mirrorx; // EjsS Model.Variables.mirror.mirrorx
  var mirrory; // EjsS Model.Variables.mirror.mirrory
  var mirrorsizex; // EjsS Model.Variables.mirror.mirrorsizex
  var mirrorsizey; // EjsS Model.Variables.mirror.mirrorsizey
  var elementinteractedmirror; // EjsS Model.Variables.mirror.elementinteractedmirror
  var xtext; // EjsS Model.Variables.mirror.xtext
  var ytext; // EjsS Model.Variables.mirror.ytext
  var textshow; // EjsS Model.Variables.mirror.textshow
  var xtextmirror; // EjsS Model.Variables.mirror.xtextmirror
  var ytextmirror; // EjsS Model.Variables.mirror.ytextmirror
  var scalextext; // EjsS Model.Variables.mirror.scalextext
  var scaleytext; // EjsS Model.Variables.mirror.scaleytext
  var scalextextv; // EjsS Model.Variables.mirror.scalextextv
  var scaleytextv; // EjsS Model.Variables.mirror.scaleytextv
  var movex; // EjsS Model.Variables.mirror.movex
  var movey; // EjsS Model.Variables.mirror.movey
  var movevx; // EjsS Model.Variables.mirror.movevx
  var movevy; // EjsS Model.Variables.mirror.movevy
  var fontsize; // EjsS Model.Variables.mirror.fontsize

  var iOS; // EjsS Model.Variables.layout.iOS
  var Android; // EjsS Model.Variables.layout.Android
  var isAndroid; // EjsS Model.Variables.layout.isAndroid
  var Width; // EjsS Model.Variables.layout.Width
  var Height; // EjsS Model.Variables.layout.Height
  var Width1; // EjsS Model.Variables.layout.Width1
  var Width2; // EjsS Model.Variables.layout.Width2
  var world; // EjsS Model.Variables.layout.world
  var graph; // EjsS Model.Variables.layout.graph
  var disabledworld; // EjsS Model.Variables.layout.disabledworld
  var disabled; // EjsS Model.Variables.layout.disabled

  var a2; // EjsS Model.Variables.SECONDFOLD.a2
  var achange2; // EjsS Model.Variables.SECONDFOLD.achange2
  var b2; // EjsS Model.Variables.SECONDFOLD.b2
  var bchange2; // EjsS Model.Variables.SECONDFOLD.bchange2
  var c2; // EjsS Model.Variables.SECONDFOLD.c2
  var cchange2; // EjsS Model.Variables.SECONDFOLD.cchange2
  var d2; // EjsS Model.Variables.SECONDFOLD.d2
  var dchange2; // EjsS Model.Variables.SECONDFOLD.dchange2
  var e2; // EjsS Model.Variables.SECONDFOLD.e2
  var f2; // EjsS Model.Variables.SECONDFOLD.f2
  var t22; // EjsS Model.Variables.SECONDFOLD.t22
  var dt22; // EjsS Model.Variables.SECONDFOLD.dt22

  var _privateOdesList;
  var _ODEi_evolution1;
  var userEvents1=[];
  var _ODEi_evolution2;
  var userEvents2=[];
  var _ODEi_evolution3;
  var userEvents3=[];
  var _ODEi_evolution4;
  var userEvents4=[];
  var _ODEi_evolution5;
  var userEvents5=[];

  _model.getOdes = function() { return [_ODEi_evolution1,_ODEi_evolution2,_ODEi_evolution3,_ODEi_evolution4,_ODEi_evolution5]; };

  _model.removeEvents = function(){
    userEvents1=[];
    userEvents2=[];
    userEvents3=[];
    userEvents4=[];
    userEvents5=[];
  };

  function _serialize() { return _model.serialize(); }

  _model._userSerialize = function() {
    return {
      font : font,
      xmin : xmin,
      a : a,
      achange : achange,
      b : b,
      bchange : bchange,
      c : c,
      cchange : cchange,
      d : d,
      dchange : dchange,
      e : e,
      f : f,
      letter : letter,
      xmax : xmax,
      ymin : ymin,
      ymax : ymax,
      rangex : rangex,
      rangey : rangey,
      sizex : sizex,
      sizey : sizey,
      selected : selected,
      text : text,
      pi : pi,
      y1 : y1,
      ysize : ysize,
      t : t,
      dt : dt,
      ty : ty,
      dty : dty,
      n : n,
      t2 : t2,
      dt2 : dt2,
      t3 : t3,
      dt3 : dt3,
      letterxy : letterxy,
      letterxystay : letterxystay,
      letterxyfold : letterxyfold,
      letterxystaytop : letterxystaytop,
      letterxyfoldbot : letterxyfoldbot,
      showfoldlr : showfoldlr,
      showfoldbt : showfoldbt,
      showfoldlrs : showfoldlrs,
      showfoldbts : showfoldbts,
      showlrbt : showlrbt,
      showbt : showbt,
      showlrs : showlrs,
      showbts : showbts,
      statetopbot : statetopbot,
      help : help,
      symmetrylinev : symmetrylinev,
      symmetrylineh : symmetrylineh,
      mirrorx : mirrorx,
      mirrory : mirrory,
      mirrorsizex : mirrorsizex,
      mirrorsizey : mirrorsizey,
      elementinteractedmirror : elementinteractedmirror,
      xtext : xtext,
      ytext : ytext,
      textshow : textshow,
      xtextmirror : xtextmirror,
      ytextmirror : ytextmirror,
      scalextext : scalextext,
      scaleytext : scaleytext,
      scalextextv : scalextextv,
      scaleytextv : scaleytextv,
      movex : movex,
      movey : movey,
      movevx : movevx,
      movevy : movevy,
      fontsize : fontsize,
      iOS : iOS,
      Android : Android,
      isAndroid : isAndroid,
      Width : Width,
      Height : Height,
      Width1 : Width1,
      Width2 : Width2,
      world : world,
      graph : graph,
      disabledworld : disabledworld,
      disabled : disabled,
      a2 : a2,
      achange2 : achange2,
      b2 : b2,
      bchange2 : bchange2,
      c2 : c2,
      cchange2 : cchange2,
      d2 : d2,
      dchange2 : dchange2,
      e2 : e2,
      f2 : f2,
      t22 : t22,
      dt22 : dt22
    };
  };

  function _serializePublic() { return _model.serializePublic(); }

  _model._userSerializePublic = function() {
    return {
      font : font,
      xmin : xmin,
      a : a,
      achange : achange,
      b : b,
      bchange : bchange,
      c : c,
      cchange : cchange,
      d : d,
      dchange : dchange,
      e : e,
      f : f,
      letter : letter,
      xmax : xmax,
      ymin : ymin,
      ymax : ymax,
      rangex : rangex,
      rangey : rangey,
      sizex : sizex,
      sizey : sizey,
      selected : selected,
      text : text,
      pi : pi,
      y1 : y1,
      ysize : ysize,
      t : t,
      dt : dt,
      ty : ty,
      dty : dty,
      n : n,
      t2 : t2,
      dt2 : dt2,
      t3 : t3,
      dt3 : dt3,
      letterxy : letterxy,
      letterxystay : letterxystay,
      letterxyfold : letterxyfold,
      letterxystaytop : letterxystaytop,
      letterxyfoldbot : letterxyfoldbot,
      showfoldlr : showfoldlr,
      showfoldbt : showfoldbt,
      showfoldlrs : showfoldlrs,
      showfoldbts : showfoldbts,
      showlrbt : showlrbt,
      showbt : showbt,
      showlrs : showlrs,
      showbts : showbts,
      statetopbot : statetopbot,
      help : help,
      symmetrylinev : symmetrylinev,
      symmetrylineh : symmetrylineh,
      mirrorx : mirrorx,
      mirrory : mirrory,
      mirrorsizex : mirrorsizex,
      mirrorsizey : mirrorsizey,
      elementinteractedmirror : elementinteractedmirror,
      xtext : xtext,
      ytext : ytext,
      textshow : textshow,
      xtextmirror : xtextmirror,
      ytextmirror : ytextmirror,
      scalextext : scalextext,
      scaleytext : scaleytext,
      scalextextv : scalextextv,
      scaleytextv : scaleytextv,
      movex : movex,
      movey : movey,
      movevx : movevx,
      movevy : movevy,
      fontsize : fontsize,
      iOS : iOS,
      Android : Android,
      isAndroid : isAndroid,
      Width : Width,
      Height : Height,
      Width1 : Width1,
      Width2 : Width2,
      world : world,
      graph : graph,
      disabledworld : disabledworld,
      disabled : disabled,
      a2 : a2,
      achange2 : achange2,
      b2 : b2,
      bchange2 : bchange2,
      c2 : c2,
      cchange2 : cchange2,
      d2 : d2,
      dchange2 : dchange2,
      e2 : e2,
      f2 : f2,
      t22 : t22,
      dt22 : dt22
    };
  };

  _model._readParameters = function(json) {
    if(typeof json.font != "undefined") font = json.font;
    if(typeof json.xmin != "undefined") xmin = json.xmin;
    if(typeof json.a != "undefined") a = json.a;
    if(typeof json.achange != "undefined") achange = json.achange;
    if(typeof json.b != "undefined") b = json.b;
    if(typeof json.bchange != "undefined") bchange = json.bchange;
    if(typeof json.c != "undefined") c = json.c;
    if(typeof json.cchange != "undefined") cchange = json.cchange;
    if(typeof json.d != "undefined") d = json.d;
    if(typeof json.dchange != "undefined") dchange = json.dchange;
    if(typeof json.e != "undefined") e = json.e;
    if(typeof json.f != "undefined") f = json.f;
    if(typeof json.letter != "undefined") letter = json.letter;
    if(typeof json.xmax != "undefined") xmax = json.xmax;
    if(typeof json.ymin != "undefined") ymin = json.ymin;
    if(typeof json.ymax != "undefined") ymax = json.ymax;
    if(typeof json.rangex != "undefined") rangex = json.rangex;
    if(typeof json.rangey != "undefined") rangey = json.rangey;
    if(typeof json.sizex != "undefined") sizex = json.sizex;
    if(typeof json.sizey != "undefined") sizey = json.sizey;
    if(typeof json.selected != "undefined") selected = json.selected;
    if(typeof json.text != "undefined") text = json.text;
    if(typeof json.pi != "undefined") pi = json.pi;
    if(typeof json.y1 != "undefined") y1 = json.y1;
    if(typeof json.ysize != "undefined") ysize = json.ysize;
    if(typeof json.t != "undefined") t = json.t;
    if(typeof json.dt != "undefined") dt = json.dt;
    if(typeof json.ty != "undefined") ty = json.ty;
    if(typeof json.dty != "undefined") dty = json.dty;
    if(typeof json.n != "undefined") n = json.n;
    if(typeof json.t2 != "undefined") t2 = json.t2;
    if(typeof json.dt2 != "undefined") dt2 = json.dt2;
    if(typeof json.t3 != "undefined") t3 = json.t3;
    if(typeof json.dt3 != "undefined") dt3 = json.dt3;
    if(typeof json.letterxy != "undefined") letterxy = json.letterxy;
    if(typeof json.letterxystay != "undefined") letterxystay = json.letterxystay;
    if(typeof json.letterxyfold != "undefined") letterxyfold = json.letterxyfold;
    if(typeof json.letterxystaytop != "undefined") letterxystaytop = json.letterxystaytop;
    if(typeof json.letterxyfoldbot != "undefined") letterxyfoldbot = json.letterxyfoldbot;
    if(typeof json.showfoldlr != "undefined") showfoldlr = json.showfoldlr;
    if(typeof json.showfoldbt != "undefined") showfoldbt = json.showfoldbt;
    if(typeof json.showfoldlrs != "undefined") showfoldlrs = json.showfoldlrs;
    if(typeof json.showfoldbts != "undefined") showfoldbts = json.showfoldbts;
    if(typeof json.showlrbt != "undefined") showlrbt = json.showlrbt;
    if(typeof json.showbt != "undefined") showbt = json.showbt;
    if(typeof json.showlrs != "undefined") showlrs = json.showlrs;
    if(typeof json.showbts != "undefined") showbts = json.showbts;
    if(typeof json.statetopbot != "undefined") statetopbot = json.statetopbot;
    if(typeof json.help != "undefined") help = json.help;
    if(typeof json.symmetrylinev != "undefined") symmetrylinev = json.symmetrylinev;
    if(typeof json.symmetrylineh != "undefined") symmetrylineh = json.symmetrylineh;
    if(typeof json.mirrorx != "undefined") mirrorx = json.mirrorx;
    if(typeof json.mirrory != "undefined") mirrory = json.mirrory;
    if(typeof json.mirrorsizex != "undefined") mirrorsizex = json.mirrorsizex;
    if(typeof json.mirrorsizey != "undefined") mirrorsizey = json.mirrorsizey;
    if(typeof json.elementinteractedmirror != "undefined") elementinteractedmirror = json.elementinteractedmirror;
    if(typeof json.xtext != "undefined") xtext = json.xtext;
    if(typeof json.ytext != "undefined") ytext = json.ytext;
    if(typeof json.textshow != "undefined") textshow = json.textshow;
    if(typeof json.xtextmirror != "undefined") xtextmirror = json.xtextmirror;
    if(typeof json.ytextmirror != "undefined") ytextmirror = json.ytextmirror;
    if(typeof json.scalextext != "undefined") scalextext = json.scalextext;
    if(typeof json.scaleytext != "undefined") scaleytext = json.scaleytext;
    if(typeof json.scalextextv != "undefined") scalextextv = json.scalextextv;
    if(typeof json.scaleytextv != "undefined") scaleytextv = json.scaleytextv;
    if(typeof json.movex != "undefined") movex = json.movex;
    if(typeof json.movey != "undefined") movey = json.movey;
    if(typeof json.movevx != "undefined") movevx = json.movevx;
    if(typeof json.movevy != "undefined") movevy = json.movevy;
    if(typeof json.fontsize != "undefined") fontsize = json.fontsize;
    if(typeof json.iOS != "undefined") iOS = json.iOS;
    if(typeof json.Android != "undefined") Android = json.Android;
    if(typeof json.isAndroid != "undefined") isAndroid = json.isAndroid;
    if(typeof json.Width != "undefined") Width = json.Width;
    if(typeof json.Height != "undefined") Height = json.Height;
    if(typeof json.Width1 != "undefined") Width1 = json.Width1;
    if(typeof json.Width2 != "undefined") Width2 = json.Width2;
    if(typeof json.world != "undefined") world = json.world;
    if(typeof json.graph != "undefined") graph = json.graph;
    if(typeof json.disabledworld != "undefined") disabledworld = json.disabledworld;
    if(typeof json.disabled != "undefined") disabled = json.disabled;
    if(typeof json.a2 != "undefined") a2 = json.a2;
    if(typeof json.achange2 != "undefined") achange2 = json.achange2;
    if(typeof json.b2 != "undefined") b2 = json.b2;
    if(typeof json.bchange2 != "undefined") bchange2 = json.bchange2;
    if(typeof json.c2 != "undefined") c2 = json.c2;
    if(typeof json.cchange2 != "undefined") cchange2 = json.cchange2;
    if(typeof json.d2 != "undefined") d2 = json.d2;
    if(typeof json.dchange2 != "undefined") dchange2 = json.dchange2;
    if(typeof json.e2 != "undefined") e2 = json.e2;
    if(typeof json.f2 != "undefined") f2 = json.f2;
    if(typeof json.t22 != "undefined") t22 = json.t22;
    if(typeof json.dt22 != "undefined") dt22 = json.dt22;
  };

  _model._readParametersPublic = function(json) {
    if(typeof json.font != "undefined") font = json.font;
    if(typeof json.xmin != "undefined") xmin = json.xmin;
    if(typeof json.a != "undefined") a = json.a;
    if(typeof json.achange != "undefined") achange = json.achange;
    if(typeof json.b != "undefined") b = json.b;
    if(typeof json.bchange != "undefined") bchange = json.bchange;
    if(typeof json.c != "undefined") c = json.c;
    if(typeof json.cchange != "undefined") cchange = json.cchange;
    if(typeof json.d != "undefined") d = json.d;
    if(typeof json.dchange != "undefined") dchange = json.dchange;
    if(typeof json.e != "undefined") e = json.e;
    if(typeof json.f != "undefined") f = json.f;
    if(typeof json.letter != "undefined") letter = json.letter;
    if(typeof json.xmax != "undefined") xmax = json.xmax;
    if(typeof json.ymin != "undefined") ymin = json.ymin;
    if(typeof json.ymax != "undefined") ymax = json.ymax;
    if(typeof json.rangex != "undefined") rangex = json.rangex;
    if(typeof json.rangey != "undefined") rangey = json.rangey;
    if(typeof json.sizex != "undefined") sizex = json.sizex;
    if(typeof json.sizey != "undefined") sizey = json.sizey;
    if(typeof json.selected != "undefined") selected = json.selected;
    if(typeof json.text != "undefined") text = json.text;
    if(typeof json.pi != "undefined") pi = json.pi;
    if(typeof json.y1 != "undefined") y1 = json.y1;
    if(typeof json.ysize != "undefined") ysize = json.ysize;
    if(typeof json.t != "undefined") t = json.t;
    if(typeof json.dt != "undefined") dt = json.dt;
    if(typeof json.ty != "undefined") ty = json.ty;
    if(typeof json.dty != "undefined") dty = json.dty;
    if(typeof json.n != "undefined") n = json.n;
    if(typeof json.t2 != "undefined") t2 = json.t2;
    if(typeof json.dt2 != "undefined") dt2 = json.dt2;
    if(typeof json.t3 != "undefined") t3 = json.t3;
    if(typeof json.dt3 != "undefined") dt3 = json.dt3;
    if(typeof json.letterxy != "undefined") letterxy = json.letterxy;
    if(typeof json.letterxystay != "undefined") letterxystay = json.letterxystay;
    if(typeof json.letterxyfold != "undefined") letterxyfold = json.letterxyfold;
    if(typeof json.letterxystaytop != "undefined") letterxystaytop = json.letterxystaytop;
    if(typeof json.letterxyfoldbot != "undefined") letterxyfoldbot = json.letterxyfoldbot;
    if(typeof json.showfoldlr != "undefined") showfoldlr = json.showfoldlr;
    if(typeof json.showfoldbt != "undefined") showfoldbt = json.showfoldbt;
    if(typeof json.showfoldlrs != "undefined") showfoldlrs = json.showfoldlrs;
    if(typeof json.showfoldbts != "undefined") showfoldbts = json.showfoldbts;
    if(typeof json.showlrbt != "undefined") showlrbt = json.showlrbt;
    if(typeof json.showbt != "undefined") showbt = json.showbt;
    if(typeof json.showlrs != "undefined") showlrs = json.showlrs;
    if(typeof json.showbts != "undefined") showbts = json.showbts;
    if(typeof json.statetopbot != "undefined") statetopbot = json.statetopbot;
    if(typeof json.help != "undefined") help = json.help;
    if(typeof json.symmetrylinev != "undefined") symmetrylinev = json.symmetrylinev;
    if(typeof json.symmetrylineh != "undefined") symmetrylineh = json.symmetrylineh;
    if(typeof json.mirrorx != "undefined") mirrorx = json.mirrorx;
    if(typeof json.mirrory != "undefined") mirrory = json.mirrory;
    if(typeof json.mirrorsizex != "undefined") mirrorsizex = json.mirrorsizex;
    if(typeof json.mirrorsizey != "undefined") mirrorsizey = json.mirrorsizey;
    if(typeof json.elementinteractedmirror != "undefined") elementinteractedmirror = json.elementinteractedmirror;
    if(typeof json.xtext != "undefined") xtext = json.xtext;
    if(typeof json.ytext != "undefined") ytext = json.ytext;
    if(typeof json.textshow != "undefined") textshow = json.textshow;
    if(typeof json.xtextmirror != "undefined") xtextmirror = json.xtextmirror;
    if(typeof json.ytextmirror != "undefined") ytextmirror = json.ytextmirror;
    if(typeof json.scalextext != "undefined") scalextext = json.scalextext;
    if(typeof json.scaleytext != "undefined") scaleytext = json.scaleytext;
    if(typeof json.scalextextv != "undefined") scalextextv = json.scalextextv;
    if(typeof json.scaleytextv != "undefined") scaleytextv = json.scaleytextv;
    if(typeof json.movex != "undefined") movex = json.movex;
    if(typeof json.movey != "undefined") movey = json.movey;
    if(typeof json.movevx != "undefined") movevx = json.movevx;
    if(typeof json.movevy != "undefined") movevy = json.movevy;
    if(typeof json.fontsize != "undefined") fontsize = json.fontsize;
    if(typeof json.iOS != "undefined") iOS = json.iOS;
    if(typeof json.Android != "undefined") Android = json.Android;
    if(typeof json.isAndroid != "undefined") isAndroid = json.isAndroid;
    if(typeof json.Width != "undefined") Width = json.Width;
    if(typeof json.Height != "undefined") Height = json.Height;
    if(typeof json.Width1 != "undefined") Width1 = json.Width1;
    if(typeof json.Width2 != "undefined") Width2 = json.Width2;
    if(typeof json.world != "undefined") world = json.world;
    if(typeof json.graph != "undefined") graph = json.graph;
    if(typeof json.disabledworld != "undefined") disabledworld = json.disabledworld;
    if(typeof json.disabled != "undefined") disabled = json.disabled;
    if(typeof json.a2 != "undefined") a2 = json.a2;
    if(typeof json.achange2 != "undefined") achange2 = json.achange2;
    if(typeof json.b2 != "undefined") b2 = json.b2;
    if(typeof json.bchange2 != "undefined") bchange2 = json.bchange2;
    if(typeof json.c2 != "undefined") c2 = json.c2;
    if(typeof json.cchange2 != "undefined") cchange2 = json.cchange2;
    if(typeof json.d2 != "undefined") d2 = json.d2;
    if(typeof json.dchange2 != "undefined") dchange2 = json.dchange2;
    if(typeof json.e2 != "undefined") e2 = json.e2;
    if(typeof json.f2 != "undefined") f2 = json.f2;
    if(typeof json.t22 != "undefined") t22 = json.t22;
    if(typeof json.dt22 != "undefined") dt22 = json.dt22;
  };

  function _unserializePublic(json) { return _model.unserializePublic(json); }

  _model._userUnserializePublic = function(json) {
    _model._readParametersPublic(json);
   _resetSolvers();
   _model.update();
  };

  function _unserialize(json) { return _model.unserialize(json); }

  _model._userUnserialize = function(json) {
    _model._readParameters(json);
   _resetSolvers();
   _model.update();
  };

  _model.addToReset(function() {
    __pagesEnabled["Init Page"] = true;
    __pagesEnabled["simplescalex"] = true;
    __pagesEnabled["stopwhenreachsymmetryendright"] = true;
    __pagesEnabled["stopwhenreachsymmetrystart"] = true;
    __pagesEnabled["movedownnuplikepage"] = false;
    __pagesEnabled["simplescaley"] = true;
    __pagesEnabled["movetodown"] = true;
    __pagesEnabled["moveup"] = true;
    __pagesEnabled["foldtotheleft"] = true;
    __pagesEnabled["reachleft"] = true;
    __pagesEnabled["reachmid"] = true;
    __pagesEnabled["reachright"] = true;
    __pagesEnabled["foldtotheright"] = true;
    __pagesEnabled["reachleft"] = true;
    __pagesEnabled["reachmid"] = true;
    __pagesEnabled["reachright"] = true;
    __pagesEnabled["foldtothetop"] = false;
    __pagesEnabled["reachtop"] = true;
    __pagesEnabled["reachmid"] = true;
    __pagesEnabled["reachbottom"] = true;
    __pagesEnabled["FixRel Page"] = true;
  });

  _model.addToReset(function() {
    font = _isMobile?"normal normal 1.5vw ":"normal normal 1.5vw "; // EjsS Model.Variables.Var Table.font
    xmin = -5; // EjsS Model.Variables.Var Table.xmin
    a = 1; // EjsS Model.Variables.Var Table.a
    achange = -0.5; // EjsS Model.Variables.Var Table.achange
    b = 0; // EjsS Model.Variables.Var Table.b
    bchange = 0.5; // EjsS Model.Variables.Var Table.bchange
    c = 0; // EjsS Model.Variables.Var Table.c
    cchange = -0.25; // EjsS Model.Variables.Var Table.cchange
    d = 1; // EjsS Model.Variables.Var Table.d
    dchange = -0.5; // EjsS Model.Variables.Var Table.dchange
    e = 0; // EjsS Model.Variables.Var Table.e
    f = 0; // EjsS Model.Variables.Var Table.f
    letter = "A"; // EjsS Model.Variables.Var Table.letter
    xmax = 5; // EjsS Model.Variables.Var Table.xmax
    ymin = -0.5; // EjsS Model.Variables.Var Table.ymin
    ymax = 0.5; // EjsS Model.Variables.Var Table.ymax
    rangex = xmax-xmin; // EjsS Model.Variables.Var Table.rangex
    rangey = ymax-ymin; // EjsS Model.Variables.Var Table.rangey
    sizex = rangex/20; // EjsS Model.Variables.Var Table.sizex
    sizey = rangey/20; // EjsS Model.Variables.Var Table.sizey
    selected = new Array(1); // EjsS Model.Variables.Var Table.selected
    (function () {
      var _i0;
      for (_i0=0; _i0<1; _i0+=1) {  // EjsS Model.Variables.Var Table.selected
        selected[_i0] = "shm_with_xo=0,vo=2";  // EjsS Model.Variables.Var Table.selected
      }
    }());
    text = "select dropdown menu and click play"; // EjsS Model.Variables.Var Table.text
    pi = Math.PI; // EjsS Model.Variables.Var Table.pi
    y1 = sizey*5/2; // EjsS Model.Variables.Var Table.y1
    ysize = 0.2; // EjsS Model.Variables.Var Table.ysize
    t = 0; // EjsS Model.Variables.Var Table.t
    dt = 0.05; // EjsS Model.Variables.Var Table.dt
    ty = 0; // EjsS Model.Variables.Var Table.ty
    dty = 0.05; // EjsS Model.Variables.Var Table.dty
    n = 20; // EjsS Model.Variables.Var Table.n
    t2 = 0; // EjsS Model.Variables.Var Table.t2
    dt2 = 0.05; // EjsS Model.Variables.Var Table.dt2
    t3 = 0; // EjsS Model.Variables.Var Table.t3
    dt3 = 0.05; // EjsS Model.Variables.Var Table.dt3
    letterxy = [[-3,-3],[-0.5,3],[0.5,3],[3,-3],[2,-3],[1,-1],[-1,-1],[-2,-3],[-3,-3],[-0.7,0,0],[0.7,0],[0,2],[-0.7,0],[-3,-3,0]];; // EjsS Model.Variables.Var Table.letterxy
    letterxystay = [[-3,-3],[-0.5,3],[0,3],[0,2],[-0.7,0],[0,0],[0,-1],[-1,-1],[-2,-3],[-3,-3]]; // EjsS Model.Variables.Var Table.letterxystay
    letterxyfold = [[0,3],[0.5,3],[3,-3],[2,-3],[1,-1],[0,-1],[0,0],[0.7,0],[0,2],[0,3]];; // EjsS Model.Variables.Var Table.letterxyfold
    letterxystaytop = [[-3,-3],[-3,3],[0,3],[0,2],[-2,2],[-2,0],[0,0],[0,-1],[-2,-1],[-2,-3],[-3,-3]]; // EjsS Model.Variables.Var Table.letterxystaytop
    letterxyfoldbot = [[0,3],[3,3],[3,-3],[2,-3],[2,-1],[0,-1],[0,0],[2,0],[2,2],[0,2],[0,3]]; // EjsS Model.Variables.Var Table.letterxyfoldbot
    showfoldlr = true; // EjsS Model.Variables.Var Table.showfoldlr
    showfoldbt = false; // EjsS Model.Variables.Var Table.showfoldbt
    showfoldlrs = true; // EjsS Model.Variables.Var Table.showfoldlrs
    showfoldbts = false; // EjsS Model.Variables.Var Table.showfoldbts
    showlrbt = true; // EjsS Model.Variables.Var Table.showlrbt
    showbt = false; // EjsS Model.Variables.Var Table.showbt
    showlrs = true; // EjsS Model.Variables.Var Table.showlrs
    showbts = false; // EjsS Model.Variables.Var Table.showbts
  });

  _model.addToReset(function() {
    help = "This letter has 1 line of symmetry"; // EjsS Model.Variables.mirror.help
    symmetrylinev = true; // EjsS Model.Variables.mirror.symmetrylinev
    symmetrylineh = false; // EjsS Model.Variables.mirror.symmetrylineh
    mirrorx = 0; // EjsS Model.Variables.mirror.mirrorx
    mirrory = 0; // EjsS Model.Variables.mirror.mirrory
    mirrorsizex = 0; // EjsS Model.Variables.mirror.mirrorsizex
    mirrorsizey = 10; // EjsS Model.Variables.mirror.mirrorsizey
    elementinteractedmirror = 0; // EjsS Model.Variables.mirror.elementinteractedmirror
    xtext = 0; // EjsS Model.Variables.mirror.xtext
    ytext = 0; // EjsS Model.Variables.mirror.ytext
    textshow = true; // EjsS Model.Variables.mirror.textshow
    xtextmirror = 0; // EjsS Model.Variables.mirror.xtextmirror
    ytextmirror = 0; // EjsS Model.Variables.mirror.ytextmirror
    scalextext = 1; // EjsS Model.Variables.mirror.scalextext
    scaleytext = 1; // EjsS Model.Variables.mirror.scaleytext
    scalextextv = -1; // EjsS Model.Variables.mirror.scalextextv
    scaleytextv = -1; // EjsS Model.Variables.mirror.scaleytextv
    movex = 0; // EjsS Model.Variables.mirror.movex
    movey = 0; // EjsS Model.Variables.mirror.movey
    movevx = 0; // EjsS Model.Variables.mirror.movevx
    movevy = -1; // EjsS Model.Variables.mirror.movevy
    fontsize = "66.5vmin"; // EjsS Model.Variables.mirror.fontsize
  });

  _model.addToReset(function() {
    iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream; // EjsS Model.Variables.layout.iOS
    Android = /Android|android/i.test(navigator.userAgent); // EjsS Model.Variables.layout.Android
    isAndroid = checkAndroid(); // EjsS Model.Variables.layout.isAndroid
    Width = (_isEPub)?"400":"100%"; // EjsS Model.Variables.layout.Width
    Height = (_isEPub)?"500":"100%"; // EjsS Model.Variables.layout.Height
    Width1 = "100%"; // EjsS Model.Variables.layout.Width1
    Width2 = "50%"; // EjsS Model.Variables.layout.Width2
    world = true; // EjsS Model.Variables.layout.world
    graph = true; // EjsS Model.Variables.layout.graph
    disabledworld = false; // EjsS Model.Variables.layout.disabledworld
    disabled = false; // EjsS Model.Variables.layout.disabled
  });

  _model.addToReset(function() {
    a2 = 1; // EjsS Model.Variables.SECONDFOLD.a2
    achange2 = -0.5; // EjsS Model.Variables.SECONDFOLD.achange2
    b2 = 0; // EjsS Model.Variables.SECONDFOLD.b2
    bchange2 = 0.5; // EjsS Model.Variables.SECONDFOLD.bchange2
    c2 = 0; // EjsS Model.Variables.SECONDFOLD.c2
    cchange2 = -0.25; // EjsS Model.Variables.SECONDFOLD.cchange2
    d2 = 1; // EjsS Model.Variables.SECONDFOLD.d2
    dchange2 = -0.5; // EjsS Model.Variables.SECONDFOLD.dchange2
    e2 = 0; // EjsS Model.Variables.SECONDFOLD.e2
    f2 = 0; // EjsS Model.Variables.SECONDFOLD.f2
    t22 = 0; // EjsS Model.Variables.SECONDFOLD.t22
    dt22 = 0.05; // EjsS Model.Variables.SECONDFOLD.dt22
  });

  if (_inputParameters) {
    _inputParameters = _model.parseInputParameters(_inputParameters);
    if (_inputParameters) _model.addToReset(function() { _model._readParameters(_inputParameters); });
  }

  _model.addToReset(function() {
    _privateOdesList=[];
    _ODEi_evolution1 = _ODE_evolution1();
    _privateOdesList.push(_ODEi_evolution1);
    _ODEi_evolution2 = _ODE_evolution2();
    _privateOdesList.push(_ODEi_evolution2);
    _ODEi_evolution3 = _ODE_evolution3();
    _privateOdesList.push(_ODEi_evolution3);
    _ODEi_evolution4 = _ODE_evolution4();
    _privateOdesList.push(_ODEi_evolution4);
    _ODEi_evolution5 = _ODE_evolution5();
    _privateOdesList.push(_ODEi_evolution5);
  });

  _model.addToReset(function() {
    _model.setAutoplay(false);
    _model.setPauseOnPageExit(true);
    _model.setFPS(20);
    _model.setStepsPerDisplay(1);
  });

  //code reference: http://davidwalsh.name/detect-android  // > CustomCode.android:1
  function checkAndroid () {  // > CustomCode.android:2
    var ua = navigator.userAgent.toLowerCase();  // > CustomCode.android:3
    return ua.indexOf("android") > -1; //&& ua.indexOf("mobile");  // > CustomCode.android:4
  }  // > CustomCode.android:5

  function OnOrientationChange() {  // > CustomCode.OnOrientationChange:1
  //if(typeof parent.device != 'undefined')  // > CustomCode.OnOrientationChange:2
  //  _view.mytext.setText(parent.device.platform)  // > CustomCode.OnOrientationChange:3
  //else  // > CustomCode.OnOrientationChange:4
  //  _view.mytext.setText("nada:");  // > CustomCode.OnOrientationChange:5
  // check platform for Apps  // > CustomCode.OnOrientationChange:6
  var iOSapp =  (typeof parent.device != 'undefined' && parent.device.platform == "iOS");  // > CustomCode.OnOrientationChange:7
  var Androidapp = (typeof parent.device != 'undefined' && parent.device.platform == "Android");  // > CustomCode.OnOrientationChange:8
  // check platform for web browsers  // > CustomCode.OnOrientationChange:9
  var iOS =/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;  // > CustomCode.OnOrientationChange:10
  var iPad =/iPad/.test(navigator.userAgent) && !window.MSStream;  // > CustomCode.OnOrientationChange:11
  var iPhone = /iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;  // > CustomCode.OnOrientationChange:12
  var Android= /Android|android/i.test(navigator.userAgent);  // > CustomCode.OnOrientationChange:13
  //_view.mytext.setText(_view.mytext.getText() + "-orient:" + window.orientation + "-" + iOSapp + "-" + Androidapp);  // > CustomCode.OnOrientationChange:14
  switch (window.orientation) {  // > CustomCode.OnOrientationChange:15
    case 0:  // > CustomCode.OnOrientationChange:16
    case 180:  // > CustomCode.OnOrientationChange:17
      this.screenOrientation = 'portrait';  // > CustomCode.OnOrientationChange:18
    //  if (iOSapp){ // does not seems to work  // > CustomCode.OnOrientationChange:19
        //   return Math.max(window.screen.width,window.screen.height)*0.9;  // > CustomCode.OnOrientationChange:20
     //   return window.screen.height*0.7;  //0.1 for app and 0.1 for nonfullscreenapp    // > CustomCode.OnOrientationChange:21
        // return window.screen.height;  // > CustomCode.OnOrientationChange:22
        //  return window.innerHeight;  // > CustomCode.OnOrientationChange:23
        // return document.documentElement.clientHeight;  // > CustomCode.OnOrientationChange:24
     // }  // > CustomCode.OnOrientationChange:25
        // > CustomCode.OnOrientationChange:26
     // else {  // > CustomCode.OnOrientationChange:27
        // return Math.max(window.innerWidth,window.innerHeight)*0.9;  // > CustomCode.OnOrientationChange:28
        return window.innerHeight*0.9;  // > CustomCode.OnOrientationChange:29
     // }  // > CustomCode.OnOrientationChange:30
      break;  // > CustomCode.OnOrientationChange:31
    case 90:  // > CustomCode.OnOrientationChange:32
    case -90:  // > CustomCode.OnOrientationChange:33
      this.screenOrientation = 'landscape';  // > CustomCode.OnOrientationChange:34
     // if (iOSapp){ // App  // > CustomCode.OnOrientationChange:35
     //   return window.screen.width*0.7;    // > CustomCode.OnOrientationChange:36
        // return window.screen.height;  // > CustomCode.OnOrientationChange:37
        //  return window.innerHeight;  // > CustomCode.OnOrientationChange:38
        //  return document.documentElement.clientHeight;  // > CustomCode.OnOrientationChange:39
     // }  // > CustomCode.OnOrientationChange:40
        // > CustomCode.OnOrientationChange:41
    //  else { // browser Android and PC  // > CustomCode.OnOrientationChange:42
        // return Math.min(window.innerWidth,window.innerHeight)*0.9;  // > CustomCode.OnOrientationChange:43
        // alert("browser Android and PC");  // > CustomCode.OnOrientationChange:44
        return window.innerHeight*0.9;  // > CustomCode.OnOrientationChange:45
    //  }  // > CustomCode.OnOrientationChange:46
      break;  // > CustomCode.OnOrientationChange:47
    default:  // > CustomCode.OnOrientationChange:48
      this.screenOrientation = 'unknown';  // > CustomCode.OnOrientationChange:49
      //       return (iPad)?""+(window.screen.width+window.screen.height)*0.4:((iPhone)?""+window.screen.width:_view._format(window.innerHeight*0.9,"0"));  // > CustomCode.OnOrientationChange:50
      return window.innerHeight*0.9;  // > CustomCode.OnOrientationChange:51
  }  // > CustomCode.OnOrientationChange:52
  }  // > CustomCode.OnOrientationChange:53

  function letters () {  // > CustomCode.letters:1
  }  // > CustomCode.letters:2

  //https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Using_full_screen_mode  // > CustomCode.fullscreen:1
  // does not work for iOS   // > CustomCode.fullscreen:2
  /*jslint browser:true */  // > CustomCode.fullscreen:3
  function toggleFullScreen() {  // > CustomCode.fullscreen:4
    if (!document.fullscreenElement &&    // alternative standard method  // > CustomCode.fullscreen:5
        !document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement ) {  // current working methods  // > CustomCode.fullscreen:6
      if (document.documentElement.requestFullscreen) {  // > CustomCode.fullscreen:7
        document.documentElement.requestFullscreen();  // > CustomCode.fullscreen:8
      } else if (document.documentElement.msRequestFullscreen) {  // > CustomCode.fullscreen:9
        document.documentElement.msRequestFullscreen();  // > CustomCode.fullscreen:10
      } else if (document.documentElement.mozRequestFullScreen) {  // > CustomCode.fullscreen:11
        document.documentElement.mozRequestFullScreen();  // > CustomCode.fullscreen:12
      } else if (document.documentElement.webkitRequestFullscreen) {  // > CustomCode.fullscreen:13
        document.documentElement.webkitRequestFullscreen();  // > CustomCode.fullscreen:14
      }  // > CustomCode.fullscreen:15
    } else {  // > CustomCode.fullscreen:16
      if (document.exitFullscreen) {  // > CustomCode.fullscreen:17
        document.exitFullscreen();  // > CustomCode.fullscreen:18
      } else if (document.msExitFullscreen) {  // > CustomCode.fullscreen:19
        document.msExitFullscreen();  // > CustomCode.fullscreen:20
      } else if (document.mozCancelFullScreen) {  // > CustomCode.fullscreen:21
        document.mozCancelFullScreen();  // > CustomCode.fullscreen:22
      } else if (document.webkitExitFullscreen) {  // > CustomCode.fullscreen:23
        document.webkitExitFullscreen();  // > CustomCode.fullscreen:24
      }  // > CustomCode.fullscreen:25
    }  // > CustomCode.fullscreen:26
  }  // > CustomCode.fullscreen:27

  function changeOrientation() {  // > CustomCode.changeorientation:1
     // > CustomCode.changeorientation:2
  var k =0.9 ; // k control height 1 is for full screen, 0.9 shorten etc  // > CustomCode.changeorientation:3
  var kepub =0.8 ;  // > CustomCode.changeorientation:4
  // check platform for Apps  // > CustomCode.changeorientation:5
  var iOSapp =  (typeof parent.device != 'undefined' && parent.device.platform == "iOS");  // > CustomCode.changeorientation:6
  var Androidapp = (typeof parent.device != 'undefined' && parent.device.platform == "Android");  // > CustomCode.changeorientation:7
     // > CustomCode.changeorientation:8
  // check platform for web browsers  // > CustomCode.changeorientation:9
  var iOS =/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;  // > CustomCode.changeorientation:10
  var iPad =/iPad/.test(navigator.userAgent) && !window.MSStream;  // > CustomCode.changeorientation:11
  var iPhone = /iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;  // > CustomCode.changeorientation:12
  var Android= /Android|android/i.test(navigator.userAgent);  // > CustomCode.changeorientation:13
     // > CustomCode.changeorientation:14
     // > CustomCode.changeorientation:15
  switch (window.orientation) {  // > CustomCode.changeorientation:16
    case 0:  // > CustomCode.changeorientation:17
    case 180:  // > CustomCode.changeorientation:18
      this.screenOrientation = 'portrait';  // > CustomCode.changeorientation:19
      if (iOSapp){ // does not seems to work  // > CustomCode.changeorientation:20
        //   return Math.max(window.screen.width,window.screen.height)*0.9;  // > CustomCode.changeorientation:21
        return window.screen.height*k;  //0.1 for app and 0.1 for nonfullscreenapp    // > CustomCode.changeorientation:22
        // return window.screen.height;  // > CustomCode.changeorientation:23
        //  return window.innerHeight;  // > CustomCode.changeorientation:24
        // return document.documentElement.clientHeight;  // > CustomCode.changeorientation:25
      }  // > CustomCode.changeorientation:26
      else if (_isEPub){ // does not seems to work  // > CustomCode.changeorientation:27
        //   return Math.max(window.screen.width,window.screen.height)*0.9;  // > CustomCode.changeorientation:28
        return window.innerHeight*kepub;  //0.1 for app and 0.1 for nonfullscreenapp    // > CustomCode.changeorientation:29
        // return window.screen.height;  // > CustomCode.changeorientation:30
        //  return window.innerHeight;  // > CustomCode.changeorientation:31
        // return document.documentElement.clientHeight;  // > CustomCode.changeorientation:32
      }  // > CustomCode.changeorientation:33
      else {  // > CustomCode.changeorientation:34
        // return Math.max(window.innerWidth,window.innerHeight)*0.9;  // > CustomCode.changeorientation:35
        return window.innerHeight*k;  // > CustomCode.changeorientation:36
      }  // > CustomCode.changeorientation:37
      break;  // > CustomCode.changeorientation:38
    case 90:  // > CustomCode.changeorientation:39
    case -90:  // > CustomCode.changeorientation:40
      this.screenOrientation = 'landscape';  // > CustomCode.changeorientation:41
     // > CustomCode.changeorientation:42
      if (iOSapp){ // App  // > CustomCode.changeorientation:43
        return window.screen.width*k;    // > CustomCode.changeorientation:44
        // return window.screen.height;  // > CustomCode.changeorientation:45
        //  return window.innerHeight;  // > CustomCode.changeorientation:46
        //  return document.documentElement.clientHeight;  // > CustomCode.changeorientation:47
      }  // > CustomCode.changeorientation:48
      else if (_isEPub){ // does not seems to work  // > CustomCode.changeorientation:49
        //   return Math.max(window.screen.width,window.screen.height)*0.9;  // > CustomCode.changeorientation:50
        return window.innerHeight*kepub;  //0.1 for app and 0.1 for nonfullscreenapp    // > CustomCode.changeorientation:51
        // return window.screen.height;  // > CustomCode.changeorientation:52
        //  return window.innerHeight;  // > CustomCode.changeorientation:53
        // return document.documentElement.clientHeight;  // > CustomCode.changeorientation:54
      }  // > CustomCode.changeorientation:55
      else { // browser Android and PC  // > CustomCode.changeorientation:56
        // return Math.min(window.innerWidth,window.innerHeight)*0.9;  // > CustomCode.changeorientation:57
        // alert("browser Android and PC");  // > CustomCode.changeorientation:58
        return window.innerHeight*k;  // > CustomCode.changeorientation:59
      }  // > CustomCode.changeorientation:60
      break;  // > CustomCode.changeorientation:61
    default:  // > CustomCode.changeorientation:62
      this.screenOrientation = 'unknown';  // > CustomCode.changeorientation:63
      //       return (iPad)?""+(window.screen.width+window.screen.height)*0.4:((iPhone)?""+window.screen.width:_view._format(window.innerHeight*0.9,"0"));  // > CustomCode.changeorientation:64
      return window.innerHeight*k;  // > CustomCode.changeorientation:65
  }  // > CustomCode.changeorientation:66
     // > CustomCode.changeorientation:67
  }  // > CustomCode.changeorientation:68
     // > CustomCode.changeorientation:69

  _model.addToInitialization(function() {
    if (!__pagesEnabled["Init Page"]) return;
    //_reset();  // > Initialization.Init Page:1
  });

  _model.addToInitialization(function() {
    _initializeSolvers();
  });

  _model.addToEvolution(function() {
    if (!__pagesEnabled["simplescalex"]) return;
    _ODEi_evolution1.step();
  });

  _model.addToEvolution(function() {
    if (!__pagesEnabled["simplescaley"]) return;
    _ODEi_evolution2.step();
  });

  _model.addToEvolution(function() {
    if (!__pagesEnabled["foldtotheleft"]) return;
    _ODEi_evolution3.step();
  });

  _model.addToEvolution(function() {
    if (!__pagesEnabled["foldtotheright"]) return;
    _ODEi_evolution4.step();
  });

  _model.addToEvolution(function() {
    if (!__pagesEnabled["foldtothetop"]) return;
    _ODEi_evolution5.step();
  });

  _model.addToFixedRelations(function() { _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); });

  _model.addToFixedRelations(function() {
    if (!__pagesEnabled["FixRel Page"]) return;
    xtextmirror=xtext;  // > FixedRelations.FixRel Page:1
    ytextmirror=ytext;  // > FixedRelations.FixRel Page:2
  });

  _model.addToFixedRelations(function() { _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); });

  function _initializeSolvers() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].initializeSolver();
  }

  function _automaticResetSolvers() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].automaticResetSolver();
  }

  _model.resetSolvers = function() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].resetSolver();
  };

  _getODE = function (_odeName) {
    if (_odeName=="simplescalex") return _ODEi_evolution1;
    if (_odeName=="simplescaley") return _ODEi_evolution2;
    if (_odeName=="foldtotheleft") return _ODEi_evolution3;
    if (_odeName=="foldtotheright") return _ODEi_evolution4;
    if (_odeName=="foldtothetop") return _ODEi_evolution5;
    return null;
  }

  function _getEventSolver(_odeName) {
    var ode = _getODE(_odeName);
    if (ode===null) return null;
    return ode.getEventSolver();
  }

  function _setSolverClass(_odeName, _engine) {
    var ode = _getODE(_odeName);
    if (ode===null) return;
    if (!_engine.setODE) {
      var classname = _engine.toLowerCase();
      if      (classname.indexOf("boga")>=0)   _engine = EJSS_ODE_SOLVERS.bogackiShampine23;
      else if (classname.indexOf("cash")>=0)   _engine = EJSS_ODE_SOLVERS.cashKarp45;
      else if (classname.indexOf("dopri5")>=0) _engine = EJSS_ODE_SOLVERS.dopri5;
      else if (classname.indexOf("dopri8")>=0) _engine = EJSS_ODE_SOLVERS.dopri853;
      else if (classname.indexOf("richa")>=0)  _engine = EJSS_ODE_SOLVERS.eulerRichardson;
      else if (classname.indexOf("euler")>=0)  _engine = EJSS_ODE_SOLVERS.euler;
      else if (classname.indexOf("fehlberg87")>=0) _engine = EJSS_ODE_SOLVERS.fehlberg87;
      else if (classname.indexOf("fehlberg8")>=0)  _engine = EJSS_ODE_SOLVERS.fehlberg8;
      else if (classname.indexOf("radau")>=0)   _engine = EJSS_ODE_SOLVERS.radau5;
      else if (classname.indexOf("runge")>=0)  _engine = EJSS_ODE_SOLVERS.rungeKutta4;
      else if (classname.indexOf("rk4")>=0)    _engine = EJSS_ODE_SOLVERS.rungeKutta4;
      else if (classname.indexOf("verlet")>=0) _engine = EJSS_ODE_SOLVERS.velocityVerlet;
    }
    if (_engine) ode.setSolverClass(_engine);
  }

  function _ODE_evolution1() {
    var __odeSelf = {};
    var __eventSolver;
    var __solverClass = EJSS_ODE_SOLVERS.rungeKutta4;
    var __state=[];
    var _ODE_evolution1_Event1;
    var _ODE_evolution1_Event2;
    var _ODE_evolution1_Event3;
    var __ignoreErrors=false;
    var __mustInitialize=true;
    var __isEnabled=true;
    var __mustUserReinitialize=false;
    var __mustReinitialize=true;


    __odeSelf._getOdeVars = function (){ return["scalextext","t"]};

    __odeSelf.setSolverClass = function(__aSolverClass) {
      __solverClass = __aSolverClass;
      __instantiateSolver();
    };

    function __instantiateSolver() {
      __state=[];
      __pushState();
      __eventSolver = EJSS_ODE_SOLVERS.interpolatorEventSolver(__solverClass(),__odeSelf);
      __mustInitialize = true;
    }

    __odeSelf.setEnabled = function(_enabled) { __isEnabled = _enabled; };

    __odeSelf.getIndependentVariableValue = function() { return __eventSolver.getIndependentVariableValue(); };

    __odeSelf.getInternalStepSize = function() { return __eventSolver.getInternalStepSize(); };

    __odeSelf.isAccelerationIndependentOfVelocity = function() { return false; };

    __odeSelf.initializeSolver = function() {
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); return; }
      __pushState();
      __eventSolver.initialize(dt);
      __eventSolver.setBestInterpolation(false);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.removeAllEvents();
      if (__pagesEnabled["stopwhenreachsymmetryendright"]) __eventSolver.addEvent(_ODE_evolution1_Event1());
      if (__pagesEnabled["stopwhenreachsymmetrystart"]) __eventSolver.addEvent(_ODE_evolution1_Event2());
      if (__pagesEnabled["movedownnuplikepage"]) __eventSolver.addEvent(_ODE_evolution1_Event3());
      for(k in userEvents1){__eventSolver.addEvent(userEvents1[k]);}
      __eventSolver.setEstimateFirstStep(false);
      __eventSolver.setEnableExceptions(false);
      __eventSolver.setTolerances(0.00001,0.00001);
      __mustReinitialize = true;
      __mustInitialize = false;
    };

    function __pushState() {
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        if (__state[__cIn]!=scalextext) __mustReinitialize = true;
        __state[__cIn++] = scalextext;
        if (__state[__cIn]!=t) __mustReinitialize = true;
        __state[__cIn++] = t;
    }

    function __arraysChanged () {
      return false;
    }

    __odeSelf.getEventSolver = function() {
      return __eventSolver;
    };

    __odeSelf.resetSolver = function() {
      __mustUserReinitialize = true;
    };

    __odeSelf.automaticResetSolver = function() {
      __mustReinitialize = true;
    };

    function __errorAction () {
      if (__ignoreErrors) return;
      console.log (__eventSolver.getErrorMessage());
      _pause();
      // Make sure the solver is reinitialized;
      __mustReinitialize = true;
    }

    __odeSelf.step = function() { return __privateStep(false); };

    __odeSelf.solverStep = function() { return __privateStep(true); };

    function __privateStep(__takeMaximumStep) {
      if (!__isEnabled) return 0;
      if (dt===0) return 0;
      if (__mustInitialize) __odeSelf.initializeSolver();
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); }
      __eventSolver.setStepSize(dt);
      __eventSolver.setInternalStepSize(dt);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.setTolerances(0.00001,0.00001);
      __pushState();
      if (__mustUserReinitialize) { 
        __eventSolver.userReinitialize();
        __mustUserReinitialize = false;
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      else if (__mustReinitialize) { 
        __eventSolver.reinitialize();
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      var __stepTaken = __takeMaximumStep ? __eventSolver.maxStep() : __eventSolver.step();
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        scalextext = __state[__cOut++];
        t = __state[__cOut++];
      // Check for error
      if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      return __stepTaken;
    }

    __odeSelf.getState = function() { return __state; };

    __odeSelf.getRate = function(_aState,_aRate) {
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var scalextext = _aState[__cOut++];
        var t = _aState[__cOut++];
      // Compute the rate
        var __cRate=0;
        _aRate[__cRate++] = scalextextv; // Rate for ODE: simplescalex:scalextext
        _aRate[__cRate++] = 1; // independent variable
        return _aRate;
    }; //end of getRate

    __odeSelf._addEvent = function(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent){
    var User_Event = function (userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent) {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return eventType; };

      _eventSelf.getRootFindingMethod = function() { return eventMethod; };

      _eventSelf.getMaxIterations = function() { return maxIter; };

      _eventSelf.getTolerance = function() { return eventTolerance; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var scalextext = _aState[__cOut++];
        var t = _aState[__cOut++];
      return eval(userCondition);
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        scalextext = __state[__cOut++];
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = scalextext;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        if (undefined != functions) eval(functions.toString());
        eval(userAction);
        return endAtEvent;
      }

      return _eventSelf;
    }; // End of event

   userEvents1.push(User_Event(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent));
   }

    _ODE_evolution1_Event1 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var scalextext = _aState[__cOut++];
        var t = _aState[__cOut++];
        return scalextext - (-1.0);  // > Event zero-condition for page simplescalex:1
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        scalextext = __state[__cOut++];
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = scalextext;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        _pause();  // > Event action for page simplescalex:1
        scalextextv= 1;  // > Event action for page simplescalex:2
        movevy= -movevy; // must sure move down  // > Event action for page simplescalex:3
        //alert("3");  // > Event action for page simplescalex:4
        return true;
      }

      return _eventSelf;
    }; // End of event

    _ODE_evolution1_Event2 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var scalextext = _aState[__cOut++];
        var t = _aState[__cOut++];
        return scalextext - (1.0);  // > Event zero-condition for page simplescalex:1
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        scalextext = __state[__cOut++];
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = scalextext;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        _pause();  // > Event action for page simplescalex:1
        scalextextv= -1;  // > Event action for page simplescalex:2
        movevy= -movevy; // must sure move down  // > Event action for page simplescalex:3
        //alert("4");  // > Event action for page simplescalex:4
        return true;
      }

      return _eventSelf;
    }; // End of event

    _ODE_evolution1_Event3 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var scalextext = _aState[__cOut++];
        var t = _aState[__cOut++];
        return scalextext- (0); //cross x =0  // > Event zero-condition for page simplescalex:1
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        scalextext = __state[__cOut++];
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = scalextext;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        movevy= -movevy;  // > Event action for page simplescalex:1
        alert("5");  // > Event action for page simplescalex:2
        return true;
      }

      return _eventSelf;
    }; // End of event

    __instantiateSolver();

    return __odeSelf;
  }

  function _historic_scalextext(__time) {
    var __index = 0;
    return _ODEi_evolution1.getEventSolver().getStateHistory().interpolate(__time,__index);
  }

  function _ODE_evolution2() {
    var __odeSelf = {};
    var __eventSolver;
    var __solverClass = EJSS_ODE_SOLVERS.rungeKutta4;
    var __state=[];
    var _ODE_evolution2_Event1;
    var _ODE_evolution2_Event2;
    var __ignoreErrors=false;
    var __mustInitialize=true;
    var __isEnabled=true;
    var __mustUserReinitialize=false;
    var __mustReinitialize=true;


    __odeSelf._getOdeVars = function (){ return["scaleytext","ty"]};

    __odeSelf.setSolverClass = function(__aSolverClass) {
      __solverClass = __aSolverClass;
      __instantiateSolver();
    };

    function __instantiateSolver() {
      __state=[];
      __pushState();
      __eventSolver = EJSS_ODE_SOLVERS.interpolatorEventSolver(__solverClass(),__odeSelf);
      __mustInitialize = true;
    }

    __odeSelf.setEnabled = function(_enabled) { __isEnabled = _enabled; };

    __odeSelf.getIndependentVariableValue = function() { return __eventSolver.getIndependentVariableValue(); };

    __odeSelf.getInternalStepSize = function() { return __eventSolver.getInternalStepSize(); };

    __odeSelf.isAccelerationIndependentOfVelocity = function() { return false; };

    __odeSelf.initializeSolver = function() {
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); return; }
      __pushState();
      __eventSolver.initialize(dty);
      __eventSolver.setBestInterpolation(false);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.removeAllEvents();
      if (__pagesEnabled["movetodown"]) __eventSolver.addEvent(_ODE_evolution2_Event1());
      if (__pagesEnabled["moveup"]) __eventSolver.addEvent(_ODE_evolution2_Event2());
      for(k in userEvents2){__eventSolver.addEvent(userEvents2[k]);}
      __eventSolver.setEstimateFirstStep(false);
      __eventSolver.setEnableExceptions(false);
      __eventSolver.setTolerances(0.00001,0.00001);
      __mustReinitialize = true;
      __mustInitialize = false;
    };

    function __pushState() {
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        if (__state[__cIn]!=scaleytext) __mustReinitialize = true;
        __state[__cIn++] = scaleytext;
        if (__state[__cIn]!=ty) __mustReinitialize = true;
        __state[__cIn++] = ty;
    }

    function __arraysChanged () {
      return false;
    }

    __odeSelf.getEventSolver = function() {
      return __eventSolver;
    };

    __odeSelf.resetSolver = function() {
      __mustUserReinitialize = true;
    };

    __odeSelf.automaticResetSolver = function() {
      __mustReinitialize = true;
    };

    function __errorAction () {
      if (__ignoreErrors) return;
      console.log (__eventSolver.getErrorMessage());
      _pause();
      // Make sure the solver is reinitialized;
      __mustReinitialize = true;
    }

    __odeSelf.step = function() { return __privateStep(false); };

    __odeSelf.solverStep = function() { return __privateStep(true); };

    function __privateStep(__takeMaximumStep) {
      if (!__isEnabled) return 0;
      if (dty===0) return 0;
      if (__mustInitialize) __odeSelf.initializeSolver();
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); }
      __eventSolver.setStepSize(dty);
      __eventSolver.setInternalStepSize(dty);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.setTolerances(0.00001,0.00001);
      __pushState();
      if (__mustUserReinitialize) { 
        __eventSolver.userReinitialize();
        __mustUserReinitialize = false;
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      else if (__mustReinitialize) { 
        __eventSolver.reinitialize();
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      var __stepTaken = __takeMaximumStep ? __eventSolver.maxStep() : __eventSolver.step();
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        scaleytext = __state[__cOut++];
        ty = __state[__cOut++];
      // Check for error
      if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      return __stepTaken;
    }

    __odeSelf.getState = function() { return __state; };

    __odeSelf.getRate = function(_aState,_aRate) {
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var scaleytext = _aState[__cOut++];
        var ty = _aState[__cOut++];
      // Compute the rate
        var __cRate=0;
        _aRate[__cRate++] = scaleytextv; // Rate for ODE: simplescaley:scaleytext
        _aRate[__cRate++] = 1; // independent variable
        return _aRate;
    }; //end of getRate

    __odeSelf._addEvent = function(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent){
    var User_Event = function (userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent) {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return eventType; };

      _eventSelf.getRootFindingMethod = function() { return eventMethod; };

      _eventSelf.getMaxIterations = function() { return maxIter; };

      _eventSelf.getTolerance = function() { return eventTolerance; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var scaleytext = _aState[__cOut++];
        var ty = _aState[__cOut++];
      return eval(userCondition);
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        scaleytext = __state[__cOut++];
        ty = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = scaleytext;
        __state[__cIn++] = ty;
        return _returnValue;
      };

      function __userDefinedAction() {
        if (undefined != functions) eval(functions.toString());
        eval(userAction);
        return endAtEvent;
      }

      return _eventSelf;
    }; // End of event

   userEvents2.push(User_Event(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent));
   }

    _ODE_evolution2_Event1 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var scaleytext = _aState[__cOut++];
        var ty = _aState[__cOut++];
        return scaleytext - (-1.0);  // > Event zero-condition for page simplescaley:1
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        scaleytext = __state[__cOut++];
        ty = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = scaleytext;
        __state[__cIn++] = ty;
        return _returnValue;
      };

      function __userDefinedAction() {
        _pause();  // > Event action for page simplescaley:1
        scaleytextv= 1;  // > Event action for page simplescaley:2
        //alert("1");  // > Event action for page simplescaley:3
        return true;
      }

      return _eventSelf;
    }; // End of event

    _ODE_evolution2_Event2 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var scaleytext = _aState[__cOut++];
        var ty = _aState[__cOut++];
        return scaleytext - (1.0);  // > Event zero-condition for page simplescaley:1
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        scaleytext = __state[__cOut++];
        ty = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = scaleytext;
        __state[__cIn++] = ty;
        return _returnValue;
      };

      function __userDefinedAction() {
        _pause();  // > Event action for page simplescaley:1
        scaleytextv= -1;  // > Event action for page simplescaley:2
        //alert("2");  // > Event action for page simplescaley:3
        return true;
      }

      return _eventSelf;
    }; // End of event

    __instantiateSolver();

    return __odeSelf;
  }

  function _historic_scaleytext(__time) {
    var __index = 0;
    return _ODEi_evolution2.getEventSolver().getStateHistory().interpolate(__time,__index);
  }

  function _ODE_evolution3() {
    var __odeSelf = {};
    var __eventSolver;
    var __solverClass = EJSS_ODE_SOLVERS.rungeKutta4;
    var __state=[];
    var _ODE_evolution3_Event1;
    var _ODE_evolution3_Event2;
    var _ODE_evolution3_Event3;
    var __ignoreErrors=false;
    var __mustInitialize=true;
    var __isEnabled=true;
    var __mustUserReinitialize=false;
    var __mustReinitialize=true;


    __odeSelf._getOdeVars = function (){ return["a","b","t2"]};

    __odeSelf.setSolverClass = function(__aSolverClass) {
      __solverClass = __aSolverClass;
      __instantiateSolver();
    };

    function __instantiateSolver() {
      __state=[];
      __pushState();
      __eventSolver = EJSS_ODE_SOLVERS.interpolatorEventSolver(__solverClass(),__odeSelf);
      __mustInitialize = true;
    }

    __odeSelf.setEnabled = function(_enabled) { __isEnabled = _enabled; };

    __odeSelf.getIndependentVariableValue = function() { return __eventSolver.getIndependentVariableValue(); };

    __odeSelf.getInternalStepSize = function() { return __eventSolver.getInternalStepSize(); };

    __odeSelf.isAccelerationIndependentOfVelocity = function() { return false; };

    __odeSelf.initializeSolver = function() {
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); return; }
      __pushState();
      __eventSolver.initialize(dt2);
      __eventSolver.setBestInterpolation(false);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.removeAllEvents();
      if (__pagesEnabled["reachleft"]) __eventSolver.addEvent(_ODE_evolution3_Event1());
      if (__pagesEnabled["reachmid"]) __eventSolver.addEvent(_ODE_evolution3_Event2());
      if (__pagesEnabled["reachright"]) __eventSolver.addEvent(_ODE_evolution3_Event3());
      for(k in userEvents3){__eventSolver.addEvent(userEvents3[k]);}
      __eventSolver.setEstimateFirstStep(false);
      __eventSolver.setEnableExceptions(false);
      __eventSolver.setTolerances(0.00001,0.00001);
      __mustReinitialize = true;
      __mustInitialize = false;
    };

    function __pushState() {
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        if (__state[__cIn]!=a) __mustReinitialize = true;
        __state[__cIn++] = a;
        if (__state[__cIn]!=b) __mustReinitialize = true;
        __state[__cIn++] = b;
        if (__state[__cIn]!=t2) __mustReinitialize = true;
        __state[__cIn++] = t2;
    }

    function __arraysChanged () {
      return false;
    }

    __odeSelf.getEventSolver = function() {
      return __eventSolver;
    };

    __odeSelf.resetSolver = function() {
      __mustUserReinitialize = true;
    };

    __odeSelf.automaticResetSolver = function() {
      __mustReinitialize = true;
    };

    function __errorAction () {
      if (__ignoreErrors) return;
      console.log (__eventSolver.getErrorMessage());
      _pause();
      // Make sure the solver is reinitialized;
      __mustReinitialize = true;
    }

    __odeSelf.step = function() { return __privateStep(false); };

    __odeSelf.solverStep = function() { return __privateStep(true); };

    function __privateStep(__takeMaximumStep) {
      if (!__isEnabled) return 0;
      if (dt2===0) return 0;
      if (__mustInitialize) __odeSelf.initializeSolver();
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); }
      __eventSolver.setStepSize(dt2);
      __eventSolver.setInternalStepSize(dt2);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.setTolerances(0.00001,0.00001);
      __pushState();
      if (__mustUserReinitialize) { 
        __eventSolver.userReinitialize();
        __mustUserReinitialize = false;
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      else if (__mustReinitialize) { 
        __eventSolver.reinitialize();
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      var __stepTaken = __takeMaximumStep ? __eventSolver.maxStep() : __eventSolver.step();
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        a = __state[__cOut++];
        b = __state[__cOut++];
        t2 = __state[__cOut++];
      // Check for error
      if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      return __stepTaken;
    }

    __odeSelf.getState = function() { return __state; };

    __odeSelf.getRate = function(_aState,_aRate) {
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var a = _aState[__cOut++];
        var b = _aState[__cOut++];
        var t2 = _aState[__cOut++];
      // Compute the rate
        var __cRate=0;
        _aRate[__cRate++] = achange; // Rate for ODE: foldtotheleft:a
        _aRate[__cRate++] = bchange; // Rate for ODE: foldtotheleft:b
        _aRate[__cRate++] = 1; // independent variable
        return _aRate;
    }; //end of getRate

    __odeSelf._addEvent = function(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent){
    var User_Event = function (userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent) {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return eventType; };

      _eventSelf.getRootFindingMethod = function() { return eventMethod; };

      _eventSelf.getMaxIterations = function() { return maxIter; };

      _eventSelf.getTolerance = function() { return eventTolerance; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var a = _aState[__cOut++];
        var b = _aState[__cOut++];
        var t2 = _aState[__cOut++];
      return eval(userCondition);
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        a = __state[__cOut++];
        b = __state[__cOut++];
        t2 = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = a;
        __state[__cIn++] = b;
        __state[__cIn++] = t2;
        return _returnValue;
      };

      function __userDefinedAction() {
        if (undefined != functions) eval(functions.toString());
        eval(userAction);
        return endAtEvent;
      }

      return _eventSelf;
    }; // End of event

   userEvents3.push(User_Event(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent));
   }

    _ODE_evolution3_Event1 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var a = _aState[__cOut++];
        var b = _aState[__cOut++];
        var t2 = _aState[__cOut++];
        return a-(-1); // do something when reach the other side  // > Event zero-condition for page foldtotheleft:1
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        a = __state[__cOut++];
        b = __state[__cOut++];
        t2 = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = a;
        __state[__cIn++] = b;
        __state[__cIn++] = t2;
        return _returnValue;
      };

      function __userDefinedAction() {
        achange=-achange;  // > Event action for page foldtotheleft:1
        _pause();  // > Event action for page foldtotheleft:2
        //alert("4");  // > Event action for page foldtotheleft:3
        return true;
      }

      return _eventSelf;
    }; // End of event

    _ODE_evolution3_Event2 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var a = _aState[__cOut++];
        var b = _aState[__cOut++];
        var t2 = _aState[__cOut++];
        return b-0.5;  // > Event zero-condition for page foldtotheleft:1
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        a = __state[__cOut++];
        b = __state[__cOut++];
        t2 = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = a;
        __state[__cIn++] = b;
        __state[__cIn++] = t2;
        return _returnValue;
      };

      function __userDefinedAction() {
        bchange=-bchange;  // > Event action for page foldtotheleft:1
        return true;
      }

      return _eventSelf;
    }; // End of event

    _ODE_evolution3_Event3 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var a = _aState[__cOut++];
        var b = _aState[__cOut++];
        var t2 = _aState[__cOut++];
        return a-(1); // do something when reach the other side  // > Event zero-condition for page foldtotheleft:1
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        a = __state[__cOut++];
        b = __state[__cOut++];
        t2 = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = a;
        __state[__cIn++] = b;
        __state[__cIn++] = t2;
        return _returnValue;
      };

      function __userDefinedAction() {
        achange=-achange;  // > Event action for page foldtotheleft:1
        _pause();  // > Event action for page foldtotheleft:2
        showfoldbt=showfoldbts;  // > Event action for page foldtotheleft:3
        //alert("5");  // > Event action for page foldtotheleft:4
        return true;
      }

      return _eventSelf;
    }; // End of event

    __instantiateSolver();

    return __odeSelf;
  }

  function _historic_a(__time) {
    var __index = 0;
    return _ODEi_evolution3.getEventSolver().getStateHistory().interpolate(__time,__index);
  }

  function _historic_b(__time) {
    var __index = 0 + 1;
    return _ODEi_evolution3.getEventSolver().getStateHistory().interpolate(__time,__index);
  }

  function _ODE_evolution4() {
    var __odeSelf = {};
    var __eventSolver;
    var __solverClass = EJSS_ODE_SOLVERS.rungeKutta4;
    var __state=[];
    var _ODE_evolution4_Event1;
    var _ODE_evolution4_Event2;
    var _ODE_evolution4_Event3;
    var __ignoreErrors=false;
    var __mustInitialize=true;
    var __isEnabled=true;
    var __mustUserReinitialize=false;
    var __mustReinitialize=true;


    __odeSelf._getOdeVars = function (){ return["a2","b2","t22"]};

    __odeSelf.setSolverClass = function(__aSolverClass) {
      __solverClass = __aSolverClass;
      __instantiateSolver();
    };

    function __instantiateSolver() {
      __state=[];
      __pushState();
      __eventSolver = EJSS_ODE_SOLVERS.interpolatorEventSolver(__solverClass(),__odeSelf);
      __mustInitialize = true;
    }

    __odeSelf.setEnabled = function(_enabled) { __isEnabled = _enabled; };

    __odeSelf.getIndependentVariableValue = function() { return __eventSolver.getIndependentVariableValue(); };

    __odeSelf.getInternalStepSize = function() { return __eventSolver.getInternalStepSize(); };

    __odeSelf.isAccelerationIndependentOfVelocity = function() { return false; };

    __odeSelf.initializeSolver = function() {
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); return; }
      __pushState();
      __eventSolver.initialize(dt22);
      __eventSolver.setBestInterpolation(false);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.removeAllEvents();
      if (__pagesEnabled["reachleft"]) __eventSolver.addEvent(_ODE_evolution4_Event1());
      if (__pagesEnabled["reachmid"]) __eventSolver.addEvent(_ODE_evolution4_Event2());
      if (__pagesEnabled["reachright"]) __eventSolver.addEvent(_ODE_evolution4_Event3());
      for(k in userEvents4){__eventSolver.addEvent(userEvents4[k]);}
      __eventSolver.setEstimateFirstStep(false);
      __eventSolver.setEnableExceptions(false);
      __eventSolver.setTolerances(0.00001,0.00001);
      __mustReinitialize = true;
      __mustInitialize = false;
    };

    function __pushState() {
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        if (__state[__cIn]!=a2) __mustReinitialize = true;
        __state[__cIn++] = a2;
        if (__state[__cIn]!=b2) __mustReinitialize = true;
        __state[__cIn++] = b2;
        if (__state[__cIn]!=t22) __mustReinitialize = true;
        __state[__cIn++] = t22;
    }

    function __arraysChanged () {
      return false;
    }

    __odeSelf.getEventSolver = function() {
      return __eventSolver;
    };

    __odeSelf.resetSolver = function() {
      __mustUserReinitialize = true;
    };

    __odeSelf.automaticResetSolver = function() {
      __mustReinitialize = true;
    };

    function __errorAction () {
      if (__ignoreErrors) return;
      console.log (__eventSolver.getErrorMessage());
      _pause();
      // Make sure the solver is reinitialized;
      __mustReinitialize = true;
    }

    __odeSelf.step = function() { return __privateStep(false); };

    __odeSelf.solverStep = function() { return __privateStep(true); };

    function __privateStep(__takeMaximumStep) {
      if (!__isEnabled) return 0;
      if (dt22===0) return 0;
      if (__mustInitialize) __odeSelf.initializeSolver();
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); }
      __eventSolver.setStepSize(dt22);
      __eventSolver.setInternalStepSize(dt22);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.setTolerances(0.00001,0.00001);
      __pushState();
      if (__mustUserReinitialize) { 
        __eventSolver.userReinitialize();
        __mustUserReinitialize = false;
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      else if (__mustReinitialize) { 
        __eventSolver.reinitialize();
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      var __stepTaken = __takeMaximumStep ? __eventSolver.maxStep() : __eventSolver.step();
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        a2 = __state[__cOut++];
        b2 = __state[__cOut++];
        t22 = __state[__cOut++];
      // Check for error
      if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      return __stepTaken;
    }

    __odeSelf.getState = function() { return __state; };

    __odeSelf.getRate = function(_aState,_aRate) {
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var a2 = _aState[__cOut++];
        var b2 = _aState[__cOut++];
        var t22 = _aState[__cOut++];
      // Compute the rate
        var __cRate=0;
        _aRate[__cRate++] = achange2; // Rate for ODE: foldtotheright:a2
        _aRate[__cRate++] = bchange2; // Rate for ODE: foldtotheright:b2
        _aRate[__cRate++] = 1; // independent variable
        return _aRate;
    }; //end of getRate

    __odeSelf._addEvent = function(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent){
    var User_Event = function (userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent) {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return eventType; };

      _eventSelf.getRootFindingMethod = function() { return eventMethod; };

      _eventSelf.getMaxIterations = function() { return maxIter; };

      _eventSelf.getTolerance = function() { return eventTolerance; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var a2 = _aState[__cOut++];
        var b2 = _aState[__cOut++];
        var t22 = _aState[__cOut++];
      return eval(userCondition);
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        a2 = __state[__cOut++];
        b2 = __state[__cOut++];
        t22 = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = a2;
        __state[__cIn++] = b2;
        __state[__cIn++] = t22;
        return _returnValue;
      };

      function __userDefinedAction() {
        if (undefined != functions) eval(functions.toString());
        eval(userAction);
        return endAtEvent;
      }

      return _eventSelf;
    }; // End of event

   userEvents4.push(User_Event(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent));
   }

    _ODE_evolution4_Event1 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var a2 = _aState[__cOut++];
        var b2 = _aState[__cOut++];
        var t22 = _aState[__cOut++];
        return a2-(-0.9999); // do something when reach the other side  // > Event zero-condition for page foldtotheright:1
        //change from -1 exactly to slight off to avoid double triggering from simplescalex  // > Event zero-condition for page foldtotheright:2
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        a2 = __state[__cOut++];
        b2 = __state[__cOut++];
        t22 = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = a2;
        __state[__cIn++] = b2;
        __state[__cIn++] = t22;
        return _returnValue;
      };

      function __userDefinedAction() {
        achange2=-achange2;  // > Event action for page foldtotheright:1
        _pause();  // > Event action for page foldtotheright:2
        //alert("6");  // > Event action for page foldtotheright:3
        return true;
      }

      return _eventSelf;
    }; // End of event

    _ODE_evolution4_Event2 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var a2 = _aState[__cOut++];
        var b2 = _aState[__cOut++];
        var t22 = _aState[__cOut++];
        return b2-0.5;  // > Event zero-condition for page foldtotheright:1
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        a2 = __state[__cOut++];
        b2 = __state[__cOut++];
        t22 = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = a2;
        __state[__cIn++] = b2;
        __state[__cIn++] = t22;
        return _returnValue;
      };

      function __userDefinedAction() {
        bchange2=-bchange2;  // > Event action for page foldtotheright:1
        return true;
      }

      return _eventSelf;
    }; // End of event

    _ODE_evolution4_Event3 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var a2 = _aState[__cOut++];
        var b2 = _aState[__cOut++];
        var t22 = _aState[__cOut++];
        return a2-(1); // do something when reach the other side  // > Event zero-condition for page foldtotheright:1
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        a2 = __state[__cOut++];
        b2 = __state[__cOut++];
        t22 = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = a2;
        __state[__cIn++] = b2;
        __state[__cIn++] = t22;
        return _returnValue;
      };

      function __userDefinedAction() {
        achange2=-achange2;  // > Event action for page foldtotheright:1
        showfoldbt=showfoldbts;  // > Event action for page foldtotheright:2
        _pause();  // > Event action for page foldtotheright:3
        //alert("7");  // > Event action for page foldtotheright:4
        return true;
      }

      return _eventSelf;
    }; // End of event

    __instantiateSolver();

    return __odeSelf;
  }

  function _historic_a2(__time) {
    var __index = 0;
    return _ODEi_evolution4.getEventSolver().getStateHistory().interpolate(__time,__index);
  }

  function _historic_b2(__time) {
    var __index = 0 + 1;
    return _ODEi_evolution4.getEventSolver().getStateHistory().interpolate(__time,__index);
  }

  function _ODE_evolution5() {
    var __odeSelf = {};
    var __eventSolver;
    var __solverClass = EJSS_ODE_SOLVERS.rungeKutta4;
    var __state=[];
    var _ODE_evolution5_Event1;
    var _ODE_evolution5_Event2;
    var _ODE_evolution5_Event3;
    var __ignoreErrors=false;
    var __mustInitialize=true;
    var __isEnabled=true;
    var __mustUserReinitialize=false;
    var __mustReinitialize=true;


    __odeSelf._getOdeVars = function (){ return["c","d","t3"]};

    __odeSelf.setSolverClass = function(__aSolverClass) {
      __solverClass = __aSolverClass;
      __instantiateSolver();
    };

    function __instantiateSolver() {
      __state=[];
      __pushState();
      __eventSolver = EJSS_ODE_SOLVERS.interpolatorEventSolver(__solverClass(),__odeSelf);
      __mustInitialize = true;
    }

    __odeSelf.setEnabled = function(_enabled) { __isEnabled = _enabled; };

    __odeSelf.getIndependentVariableValue = function() { return __eventSolver.getIndependentVariableValue(); };

    __odeSelf.getInternalStepSize = function() { return __eventSolver.getInternalStepSize(); };

    __odeSelf.isAccelerationIndependentOfVelocity = function() { return false; };

    __odeSelf.initializeSolver = function() {
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); return; }
      __pushState();
      __eventSolver.initialize(dt3);
      __eventSolver.setBestInterpolation(false);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.removeAllEvents();
      if (__pagesEnabled["reachtop"]) __eventSolver.addEvent(_ODE_evolution5_Event1());
      if (__pagesEnabled["reachmid"]) __eventSolver.addEvent(_ODE_evolution5_Event2());
      if (__pagesEnabled["reachbottom"]) __eventSolver.addEvent(_ODE_evolution5_Event3());
      for(k in userEvents5){__eventSolver.addEvent(userEvents5[k]);}
      __eventSolver.setEstimateFirstStep(false);
      __eventSolver.setEnableExceptions(false);
      __eventSolver.setTolerances(0.00001,0.00001);
      __mustReinitialize = true;
      __mustInitialize = false;
    };

    function __pushState() {
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        if (__state[__cIn]!=c) __mustReinitialize = true;
        __state[__cIn++] = c;
        if (__state[__cIn]!=d) __mustReinitialize = true;
        __state[__cIn++] = d;
        if (__state[__cIn]!=t3) __mustReinitialize = true;
        __state[__cIn++] = t3;
    }

    function __arraysChanged () {
      return false;
    }

    __odeSelf.getEventSolver = function() {
      return __eventSolver;
    };

    __odeSelf.resetSolver = function() {
      __mustUserReinitialize = true;
    };

    __odeSelf.automaticResetSolver = function() {
      __mustReinitialize = true;
    };

    function __errorAction () {
      if (__ignoreErrors) return;
      console.log (__eventSolver.getErrorMessage());
      _pause();
      // Make sure the solver is reinitialized;
      __mustReinitialize = true;
    }

    __odeSelf.step = function() { return __privateStep(false); };

    __odeSelf.solverStep = function() { return __privateStep(true); };

    function __privateStep(__takeMaximumStep) {
      if (!__isEnabled) return 0;
      if (dt3===0) return 0;
      if (__mustInitialize) __odeSelf.initializeSolver();
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); }
      __eventSolver.setStepSize(dt3);
      __eventSolver.setInternalStepSize(dt3);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.setTolerances(0.00001,0.00001);
      __pushState();
      if (__mustUserReinitialize) { 
        __eventSolver.userReinitialize();
        __mustUserReinitialize = false;
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      else if (__mustReinitialize) { 
        __eventSolver.reinitialize();
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      var __stepTaken = __takeMaximumStep ? __eventSolver.maxStep() : __eventSolver.step();
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        c = __state[__cOut++];
        d = __state[__cOut++];
        t3 = __state[__cOut++];
      // Check for error
      if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      return __stepTaken;
    }

    __odeSelf.getState = function() { return __state; };

    __odeSelf.getRate = function(_aState,_aRate) {
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var c = _aState[__cOut++];
        var d = _aState[__cOut++];
        var t3 = _aState[__cOut++];
      // Compute the rate
        var __cRate=0;
        _aRate[__cRate++] = cchange; // Rate for ODE: foldtothetop:c
        _aRate[__cRate++] = dchange; // Rate for ODE: foldtothetop:d
        _aRate[__cRate++] = 1; // independent variable
        return _aRate;
    }; //end of getRate

    __odeSelf._addEvent = function(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent){
    var User_Event = function (userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent) {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return eventType; };

      _eventSelf.getRootFindingMethod = function() { return eventMethod; };

      _eventSelf.getMaxIterations = function() { return maxIter; };

      _eventSelf.getTolerance = function() { return eventTolerance; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var c = _aState[__cOut++];
        var d = _aState[__cOut++];
        var t3 = _aState[__cOut++];
      return eval(userCondition);
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        c = __state[__cOut++];
        d = __state[__cOut++];
        t3 = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = c;
        __state[__cIn++] = d;
        __state[__cIn++] = t3;
        return _returnValue;
      };

      function __userDefinedAction() {
        if (undefined != functions) eval(functions.toString());
        eval(userAction);
        return endAtEvent;
      }

      return _eventSelf;
    }; // End of event

   userEvents5.push(User_Event(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent));
   }

    _ODE_evolution5_Event1 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var c = _aState[__cOut++];
        var d = _aState[__cOut++];
        var t3 = _aState[__cOut++];
        return d-(-1); // do something when reach the other side  // > Event zero-condition for page foldtothetop:1
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        c = __state[__cOut++];
        d = __state[__cOut++];
        t3 = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = c;
        __state[__cIn++] = d;
        __state[__cIn++] = t3;
        return _returnValue;
      };

      function __userDefinedAction() {
        dchange=-dchange;  // > Event action for page foldtothetop:1
        _pause();  // > Event action for page foldtothetop:2
        return true;
      }

      return _eventSelf;
    }; // End of event

    _ODE_evolution5_Event2 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var c = _aState[__cOut++];
        var d = _aState[__cOut++];
        var t3 = _aState[__cOut++];
        return c-(-0.5);  // > Event zero-condition for page foldtothetop:1
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        c = __state[__cOut++];
        d = __state[__cOut++];
        t3 = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = c;
        __state[__cIn++] = d;
        __state[__cIn++] = t3;
        return _returnValue;
      };

      function __userDefinedAction() {
        cchange=-cchange;  // > Event action for page foldtothetop:1
        return true;
      }

      return _eventSelf;
    }; // End of event

    _ODE_evolution5_Event3 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var c = _aState[__cOut++];
        var d = _aState[__cOut++];
        var t3 = _aState[__cOut++];
        return d-(1); // do something when reach the other side  // > Event zero-condition for page foldtothetop:1
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        c = __state[__cOut++];
        d = __state[__cOut++];
        t3 = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = c;
        __state[__cIn++] = d;
        __state[__cIn++] = t3;
        return _returnValue;
      };

      function __userDefinedAction() {
        dchange=-dchange;  // > Event action for page foldtothetop:1
        showfoldlr=showfoldlrs;  // > Event action for page foldtothetop:2
        _pause();  // > Event action for page foldtothetop:3
        return true;
      }

      return _eventSelf;
    }; // End of event

    __instantiateSolver();

    return __odeSelf;
  }

  function _historic_c(__time) {
    var __index = 0;
    return _ODEi_evolution5.getEventSolver().getStateHistory().interpolate(__time,__index);
  }

  function _historic_d(__time) {
    var __index = 0 + 1;
    return _ODEi_evolution5.getEventSolver().getStateHistory().interpolate(__time,__index);
  }

    _model._fontResized = function(iBase,iSize,iDelta) {
      _view._fontResized(iBase,iSize,iDelta);
  }; // end of _fontResized

  function _getViews() {
    var _viewsInfo = [];
    var _counter = 0;
    _viewsInfo[_counter++] = { name : "HtmlView Page", width : 800, height : 600 };
    return _viewsInfo;
  } // end of _getViews

  function _selectView(_viewNumber) {
    _view = null;
    _view = new symmetryletter_View(_topFrame,_viewNumber,_libraryPath,_codebasePath);
    var _view_super_reset = _view._reset;
    _view._reset = function() {
      _view_super_reset();
      switch(_viewNumber) {
        case -10 : break; // make Lint happy
        default :
        case 0:
          _view.fullscreen.linkProperty("Height",  function() { return Height; }, function(_v) { Height = _v; } ); // HtmlView Page linking property 'Height' for element 'fullscreen'
          _view.fullscreen.linkProperty("Width",  function() { return Width; }, function(_v) { Width = _v; } ); // HtmlView Page linking property 'Width' for element 'fullscreen'
          _view.vectorcompo.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'vectorcompo'
          _view.comboBox.linkProperty("Options",  function() { return ["A","A'","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]; } ); // HtmlView Page linking property 'Options' for element 'comboBox'
          _view.comboBox.setAction("OnChange", function(_data,_info) {
  var opts = _view.comboBox.getProperty("SelectedOptions");  // array of options
  var option = (opts.length > 0)? opts[0]:""; // selected option 
  letter = option;
  if (option=="A"){
   // xtext = -0.01;
   // ytext = 0;
   showfoldlr=true;
   showfoldbt=false;
    xtext = 0.;
   ytext = -0.07;
   fontsize="66.5vmin";
   letterxy = [[-3,-3],[-0.5,3],[0.5,3],[3,-3],[2,-3],[1,-1],[-1,-1],[-2,-3],[-3,-3],[-0.7,0,0],[0.7,0],[0,2],[-0.7,0],[-3,-3,0]];
    
    symmetrylinev=true;
    symmetrylineh=false;
    help = "This letter has 1 line of symmetry";
    letterxystay = [[-3,-3],[-0.5,3],[0,3],[0,2],[-0.7,0],[0,0],[0,-1],[-1,-1],[-2,-3],[-3,-3]];
    letterxyfold = [[0,3],[0.5,3],[3,-3],[2,-3],[1,-1],[0,-1],[0,0],[0.7,0],[0,2],[0,3]];
   
    }
    if (option=="A'"){
   // xtext = -0.01;
   // ytext = 0;
   showfoldlr=true;
   showfoldbt=false;
    xtext = 0.;
   ytext = -0.07;
   fontsize="66.5vmin";
   letterxy = [[-3,-3],[-3,3],[3,3],[3,-3],[2,-3],[2,-1],[-2,-1],[-2,-3],[-3,-3],[-2,0,0],[2,0],[2,2],[-2,2],[-2,0],[-3,-3,0]];
    
    symmetrylinev=true;
    symmetrylineh=false;
    help = "This letter has 1 line of symmetry";
    letterxystay = [[-3,-3],[-3,3],[0,3],[0,2],[-2,2],[-2,0],[0,0],[0,-1],[-2,-1],[-2,-3],[-3,-3]];
    letterxyfold = [[0,3],[3,3],[3,-3],[2,-3],[2,-1],[0,-1],[0,0],[2,0],[2,2],[0,2],[0,3]];
   
    }
    else if (option=="B"){
    xtext = 0;
    //ytext = -0.04;
    ytext = 0;
     showfoldlr=false;
   showfoldbt=true;
      symmetrylinev=false;
    symmetrylineh=true;
    letterxy=[[-3,-3],[-3,3],[3,3],[3,1],[2,0],[3,-1],[3,-3],[-3,-3],[-2,-2,0],[2,-2],[0.5,-0.5],[-2,-0.5],[-2,-2],[-2,0.5,0],[0.5,0.5],[2,2],[-2,2],[-2,0.5],[-2,-2,0],[-3,-3,0]];
    help = "This letter has 1 line of symmetry";
   letterxystaytop = [[-3,0],[-3,3],[3,3],[3,1],[2,0],[-3,0],[-2,0.5,0],[0.5,0.5],[2,2],[-2,2],[-2,0.5]];
    letterxyfoldbot = [[-3,-3],[-3,0],[2,0],[3,-1],[3,-3],[-3,-3],[-2,-2,0],[2,-2],[0.5,-0.5],[-2,-0.5],[-2,-2]];
   
   }
    else if (option=="C"){
    xtext = 0;
   // ytext = -0.03;
    ytext = 0;
       showfoldlr=false;
   showfoldbt=true;
        symmetrylinev=false;
    symmetrylineh=true;
    letterxy=[[-3,-3],[-3,3],[3,3],[3,2],[-2,2],[-2,-2],[3,-2],[3,-3],[-3,-3]];
  help = "This letter has 1 line of symmetry";
  letterxystaytop = [[-3,0],[-3,3],[3,3],[3,2],[-2,2],[-2,0],[-3,0]];
    letterxyfoldbot = [[-3,-3],[-3,0],[-2,0],[-2,-2],[3,-2],[3,-3],[-3,-3]];
    }
    else if (option=="D"){
    xtext = 0;
   // ytext = -0.03;
     ytext = 0;
        showfoldlr=false;
   showfoldbt=true;
        symmetrylinev=false;
    symmetrylineh=true;
    letterxy=[[-3,-3],[-3,3],[2.5,3],[3,2.5],[3,-2.5],[2.5,-3],[-3,-3],[-2,-2,0],[2,-2],[2,2,],[-2,2],[-2,-2],[-3,-3,0]];
    help = "This letter has 1 line of symmetry";
    letterxystaytop = [[-3,0],[-3,3],[2.5,3],[3,2.5],[3,0],[2,0],[2,2,],[-2,2],[-2,0]];
    letterxyfoldbot = [[-3,-3],[-3,0],[-2,0],[-2,-2],[2,-2],[2,0],[3,0],[3,-2.5],[2.5,-3],[-3,-3]];
    }
    else if (option=="E"){
    xtext = 0;
   // ytext = -0.05;
    ytext = 0;
       showfoldlr=false;
   showfoldbt=true;
        symmetrylinev=false;
    symmetrylineh=true;
     letterxy=[[-3,-3],[-3,3],[3,3],[3,2],[-2,2],[-2,0.5],[3,0.5],[3,-0.5],[-2,-0.5],[-2,-2],[3,-2],[3,-3],[-3,-3]];
    help = "This letter has 1 line of symmetry";
     letterxystaytop = [[-3,0],[-3,3],[3,3],[3,2],[-2,2],[-2,0.5],[3,0.5],[3,0],[-3,0]];
    letterxyfoldbot = [[-3,-3],[-3,0],[3,0],[3,-0.5],[-2,-0.5],[-2,-2],[3,-2],[3,-3],[-3,-3]];
    }
     else if (option=="F"){
      showfoldlr=false;
   showfoldbt=false;
        symmetrylinev=false;
    symmetrylineh=false;
     letterxy=[[-3,-3],[-3,3],[3,3],[3,2],[-2,2],[-2,0.5],[3,0.5],[3,-0.5],[-2,-0.5],[-2,-3],[-3,-3]];
    help = "This letter has no line of symmetry";
    }
    else if (option=="G"){
      showfoldlr=false;
   showfoldbt=false;
        symmetrylinev=false;
    symmetrylineh=false;
     letterxy=[[-3,-3],[-3,3],[3,3],[3,2],[-2,2],[-2,-2],[2,-2],[2,-0.5],[0,-0.5],[0,0.5],[3,0.5],[3,-3],[-3,-3]];
    help = "This letter has no line of symmetry";
    }
    else if (option=="H"){
        showfoldlr=true;
   showfoldbt=true;
        symmetrylinev=true;
    symmetrylineh=true;
       showfoldlr=true;
   showfoldbt=true;
     letterxy=[[-3,-3],[-3,3],[-2,3],[-2,0.5],[2,0.5],[2,3],[3,3],[3,-3],[2,-3],[2,-0.5],[-2,-0.5],[-2,-3],[-3,-3]];
    help = "This letter has 2 lines of symmetry";
   letterxystay = [[-3,-3],[-3,3],[-2,3],[-2,0.5],[0,0.5],[0,-0.5],[-2,-0.5],[-2,-3],[-3,-3]];
    letterxyfold = [[0,0.5],[2,0.5],[2,3],[3,3],[3,-3],[2,-3],[2,-0.5],[0,-0.5]];
    letterxystaytop = [[-3,0],[-3,3],[-2,3],[-2,0.5],[2,0.5],[2,3],[3,3],[3,0],[-3,0]];
    letterxyfoldbot = [[-3,-3],[-3,0],[3,0],[3,-3],[2,-3],[2,-0.5],[-2,-0.5],[-2,-3],[-3,-3]];
   
    }
    else if (option=="I"){
      showfoldlr=true;
   showfoldbt=true;
        symmetrylinev=true;
    symmetrylineh=true;
     letterxy=[[-0.5,-3],[-0.5,3],[0.5,3],[0.5,-3],[-0.5,-3]];
    help = "This letter has 2 lines of symmetry";
    letterxystay = [[-0.5,-3],[-0.5,3],[0,3],[0,-3],[-0.5,-3]];
    letterxyfold = [[0,-3],[0,3],[0.5,3],[0.5,-3],[0,-3]];
    letterxystaytop = [[-0.5,0],[-0.5,3],[0.5,3],[0.5,0],[-0.5,0]];
    letterxyfoldbot = [[-0.5,-3],[-0.5,0],[0.5,0],[0.5,-3],[-0.5,-3]];
    }
    else if (option=="J"){
      showfoldlr=false;
   showfoldbt=false;
        symmetrylinev=false;
    symmetrylineh=false;
   //letterxy=[[-3,-3],[-3,0],[-2,0],[-2,-2],[2,-2],[2,3],[3,3],[-3,3],[-3,-3]];
  letterxy=[[-3,-3],[-3,0],[-2,0],[-2,-2],[2,-2],[2,3],[3,3],[3,-3],[-3,-3]];
    help = "This letter has no line of symmetry";
    }
  	else if (option=="K"){
      showfoldlr=false;
   showfoldbt=true;
        symmetrylinev=false;
    symmetrylineh=true;
   //letterxy=[[-3,-3],[-3,0],[-2,0],[-2,-2],[2,-2],[2,3],[3,3],[-3,3],[-3,-3]];
  letterxy=[[-3,-3],[-3,3],[-2,3],[-2,0.5],[1.5,3],[3,3],[-1,0],[3,-3],[1.5,-3],[-2,-0.5],[-2,-3],[-3,-3]];
    help = "This letter has 1 line of symmetry";
     letterxystaytop = [[-3,0],[-3,3],[-2,3],[-2,0.5],[1.5,3],[3,3],[-1,0],[-3,0]];
    letterxyfoldbot = [[-3,-3],[-3,0],[-1,0],[3,-3],[1.5,-3],[-2,-0.5],[-2,-3],[-3,-3]];
    }
    else if (option=="L"){
      showfoldlr=false;
   showfoldbt=false;
        symmetrylinev=false;
    symmetrylineh=false;
   //letterxy=[[-3,-3],[-3,0],[-2,0],[-2,-2],[2,-2],[2,3],[3,3],[-3,3],[-3,-3]];
  letterxy=[[-3,-3],[-3,3],[-2,3],[-2,2],[-2,-2],[3,-2],[3,-3],[-3,-3]];
    help = "This letter has no line of symmetry";
    }
    else if (option=="M"){
   
        symmetrylinev=true;
    symmetrylineh=false;
   //letterxy=[[-3,-3],[-3,0],[-2,0],[-2,-2],[2,-2],[2,3],[3,3],[-3,3],[-3,-3]];
  letterxy=[[-3,-3],[-3,3],[-2,3],[0,-1],[2,3],[3,3],[3,-3],[2,-3],[2,0],[0.5,-3],[-0.5,-3],[-2,0],[-2,-3],[-3,-3]];
    help = "This letter has 1 line of symmetry";
      letterxystay = [[-3,-3],[-3,3],[-2,3],[0,-1],[0,-3],[-0.5,-3],[-2,0],[-2,-3],[-3,-3]];
    letterxyfold = [[0,-1],[2,3],[3,3],[3,-3],[2,-3],[2,0],[0.5,-3],[0,-3]];
    }
    else if (option=="N"){
      showfoldlr=false;
   showfoldbt=false;
        symmetrylinev=false;
    symmetrylineh=false;
   //letterxy=[[-3,-3],[-3,0],[-2,0],[-2,-2],[2,-2],[2,3],[3,3],[-3,3],[-3,-3]];
  letterxy=[[-3,-3],[-3,3],[-2,3],[2,-1.5],[2,3],[3,3],[3,-3],[2,-3],[-2,1.5],[-2,-3],[-3,-3]];
    help = "This letter has no line of symmetry";
    }
     else if (option=="O"){
        showfoldlr=true;
   showfoldbt=true;
        symmetrylinev=true;
    symmetrylineh=true;
   //letterxy=[[-3,-3],[-3,0],[-2,0],[-2,-2],[2,-2],[2,3],[3,3],[-3,3],[-3,-3]];
  letterxy=[[-3,-3],[-3,3],[3,3],[3,-3],[-3,-3],[-2,-2,0],[2,-2],[2,2],[-2,2],[-2,-2],[-3,-3,0]];
    help = "This letter has 2 lines of symmetry";
        letterxystay = [[-3,-3],[-3,3],[0,3],[0,2],[-2,2],[-2,-2],[0,-2],[0,-3],[-3,-3]];
    letterxyfold = [[0,3],[3,3],[3,-3],[0,-3],[0,-2],[2,-2],[2,2],[0,2],[0,3]];
     letterxystaytop = [[-3,0],[-3,3],[3,3],[3,0],[2,0],[2,2],[-2,2],[-2,0]];
    letterxyfoldbot = [[-3,-3],[-3,0],[-2,0],[-2,-2],[2,-2],[2,0],[3,0],[3,-3]];
    }
     else if (option=="P"){
      showfoldlr=false;
   showfoldbt=false;
        symmetrylinev=false;
    symmetrylineh=false;
   //letterxy=[[-3,-3],[-3,0],[-2,0],[-2,-2],[2,-2],[2,3],[3,3],[-3,3],[-3,-3]];
  letterxy=[[-3,-3],[-3,3],[3,3],[3,-0.5],[-2,-0.5],[-2,-3],[-3,-3],[-2,0.5,0],[2,0.5],[2,2],[-2,2],[-2,0.5],[-3,3,0]];
    help = "This letter has no line of symmetry";
    }
     else if (option=="Q"){
      showfoldlr=false;
   showfoldbt=false;
        symmetrylinev=false;
    symmetrylineh=false;
   //letterxy=[[-3,-3],[-3,0],[-2,0],[-2,-2],[2,-2],[2,3],[3,3],[-3,3],[-3,-3]];
  letterxy=[[-3,-3],[-3,3],[3,3],[3,-3],[2,-3],[3,-4],[2,-4],[1,-3],[-3,-3],[-2,-2],[0,-2],[-1,-1],[0,-1],[1,-2],[2,-2],[2,2],[-2,2],[-2,-2],[-3,-3,0]];
    help = "This letter has no line of symmetry";
    }
  	else if (option=="R"){
      showfoldlr=false;
   showfoldbt=false;
        symmetrylinev=false;
    symmetrylineh=false;
   //letterxy=[[-3,-3],[-3,0],[-2,0],[-2,-2],[2,-2],[2,3],[3,3],[-3,3],[-3,-3]];
  letterxy=[[-3,-3],[-3,3],[3,3],[3,-0.5],[1,-0.5],[3,-3],[1.5,-3],[-0.5,-0.5],[-2,-0.5],[-2,-3],[-3,-3],[-2,0.5],[2,0.5],[2,2],[-2,2],[-2,0.5],[-3,-3,0]];
    help = "This letter has no line of symmetry";
    }
    else if (option=="S"){
      showfoldlr=false;
   showfoldbt=false;
        symmetrylinev=false;
    symmetrylineh=false;
   //letterxy=[[-3,-3],[-3,0],[-2,0],[-2,-2],[2,-2],[2,3],[3,3],[-3,3],[-3,-3]];
  letterxy=[[-3,-3],[-3,-2],[2,-2],[2,-0.5],[-3,-0.5],[-3,3],[3,3],[3,2],[-2,2],[-2,0.5],[3,0.5],[3,-3],[-3,-3,0]];
    help = "This letter has no line of symmetry";
    }
   else if (option=="T"){
        showfoldlr=true;
   showfoldbt=false;
        symmetrylinev=true;
    symmetrylineh=false;
     letterxy=[[-0.5,-3],[-0.5,2],[-3,2],[-3,3],[3,3],[3,2],[0.5,2],[0.5,-3],[-0.5,-3]];
    help = "This letter has 1 line of symmetry";
         letterxystay = [[-0.5,-3],[-0.5,2],[-3,2],[-3,3],[0,3],[0,-3],[-0.5,-3]];
    letterxyfold = [[0,3],[3,3],[3,2],[0.5,2],[0.5,-3],[0,-3],[0,3]];
    // letterxystaytop = [[-3,-3],[-3,3],[2.5,3],[3,2.5],[3,-2.5],[2.5,-3],[-3,-3],[-2,-2,0],[2,-2],[2,2,],[-2,2],[-2,-2],[-3,-3,0]];
   // letterxyfoldbot = [[-3,-3],[-3,3],[2.5,3],[3,2.5],[3,-2.5],[2.5,-3],[-3,-3],[-2,-2,0],[2,-2],[2,2,],[-2,2],[-2,-2],[-3,-3,0]];
    }
    else if (option=="U"){
        showfoldlr=true;
   showfoldbt=false;
        symmetrylinev=true;
    symmetrylineh=false;
   //letterxy=[[-3,-3],[-3,0],[-2,0],[-2,-2],[2,-2],[2,3],[3,3],[-3,3],[-3,-3]];
  letterxy=[[-3,-3],[-3,3],[-2,3],[-2,-2],[2,-2],[2,3],[3,3],[3,-3],[-3,-3]];
    help = "This letter has 1 line of symmetry";
          letterxystay = [[-3,-3],[-3,3],[-2,3],[-2,-2],[0,-2],[0,-3],[-3,-3]];
    letterxyfold = [[0,-2],[2,-2],[2,3],[3,3],[3,-3],[0,-3]];
    }
     else if (option=="V"){
        showfoldlr=true;
   showfoldbt=false;
        symmetrylinev=true;
    symmetrylineh=false;
     letterxy=[[-0.5,-3],[-3,3],[-2,3],[0,-1.5],[2,3],[3,3],[0.5,-3],[-0.5,-3]];
    help = "This letter has 1 line of symmetry";
          letterxystay = [[-0.5,-3],[-3,3],[-2,3],[0,-1.5],[0,-3],[-0.5,-3]];
    letterxyfold = [[0,-1.5],[2,3],[3,3],[0.5,-3],[0,-3]];
    }
    else if (option=="W"){
        showfoldlr=true;
   showfoldbt=false;
        symmetrylinev=true;
    symmetrylineh=false;
     letterxy=[[-2,-3],[-3,3],[-2,3],[-1.5,-1],[-0.5,3],[0.5,3],[1.5,-1],[2,3],[3,3],[2,-3],[1,-3],[0,1],[-1,-3],[-2,-3]];
    help = "This letter has 1 line of symmetry";
          letterxystay = [[-2,-3],[-3,3],[-2,3],[-1.5,-1],[-0.5,3],[0,3],[0,1],[-1,-3],[-2,-3]];
    letterxyfold = [[0,3],[0.5,3],[1.5,-1],[2,3],[3,3],[2,-3],[1,-3],[0,1]];
    }
  else if (option=="X"){
        showfoldlr=true;
   showfoldbt=true;
        symmetrylinev=true;
    symmetrylineh=true;
   //letterxy=[[-3,-3],[-3,0],[-2,0],[-2,-2],[2,-2],[2,3],[3,3],[-3,3],[-3,-3]];
  letterxy=[[-3,-3],[-0.7,0],[-3,3],[-2,3],[0,0.7],[2,3],[3,3],[0.7,0],[3,-3],[2,-3],[0,-0.7],[-2,-3],[-3,-3]];
    help = "This letter has 2 line of symmetry";
     letterxystay = [[-3,-3],[-0.7,0],[-3,3],[-2,3],[0,0.7],[0,-0.7],[-2,-3],[-3,-3]];
    letterxyfold = [[0,0.7],[2,3],[3,3],[0.7,0],[3,-3],[2,-3],[0,-0.7]];
     letterxystaytop = [[-0.7,0],[-3,3],[-2,3],[0,0.7],[2,3],[3,3],[0.7,0]];
    letterxyfoldbot = [[-3,-3],[-0.7,0],[0.7,0],[3,-3],[2,-3],[0,-0.7],[-2,-3],[-3,-3]];
    }
    
    else if (option=="Y"){
       showfoldlr=true;
   showfoldbt=false;
        symmetrylinev=true;
    symmetrylineh=false;
     letterxy=[[-0.5,-3],[-0.5,0],[-3,3],[-2,3],[0,1],[2,3],[3,3],[0.5,0],[0.5,-3],[-0.5,-3]];
    help = "This letter has 1 line of symmetry";
          letterxystay = [[-0.5,-3],[-0.5,0],[-3,3],[-2,3],[0,1],[0,-3],[-0.5,-3]];
    letterxyfold = [[0,1],[2,3],[3,3],[0.5,0],[0.5,-3],[0,-3]];
    }
  else if (option=="Z"){
      showfoldlr=false;
   showfoldbt=false;
        symmetrylinev=false;
    symmetrylineh=false;
   //letterxy=[[-3,-3],[-3,0],[-2,0],[-2,-2],[2,-2],[2,3],[3,3],[-3,3],[-3,-3]];
  letterxy=[[-3,-3],[-3,-2],[1.5,2],[-3,2],[-3,3],[3,3],[3,2],[-1.5,-2],[3,-2],[3,-3],[-3,-3]];
    help = "This letter has no line of symmetry";
    }
    
    
  showfoldbts=showfoldbt;
  showfoldlrs=showfoldlr;

}); // HtmlView Page setting action 'OnChange' for element 'comboBox'
          _view.comboBox.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'comboBox'
          _view.playPauseButtonLR.setAction("OffClick", function(_data,_info) {
  text="paused";
  _pause();

}); // HtmlView Page setting action 'OffClick' for element 'playPauseButtonLR'
          _view.playPauseButtonLR.linkProperty("State",  function() { return _isPaused; } ); // HtmlView Page linking property 'State' for element 'playPauseButtonLR'
          _view.playPauseButtonLR.setAction("OnClick", function(_data,_info) {
  dty=0;
  dt=0.05;
  dt2=0;
  dt3=0;
  _play();
  text="playing";
  showfoldlr=false;
  showfoldbt=false;
  showlrbt=true;

}); // HtmlView Page setting action 'OnClick' for element 'playPauseButtonLR'
          _view.playPauseButtonLR.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'playPauseButtonLR'
          _view.playPauseButtonDU.setAction("OffClick", function(_data,_info) {
  text="paused";
  _pause();

}); // HtmlView Page setting action 'OffClick' for element 'playPauseButtonDU'
          _view.playPauseButtonDU.linkProperty("State",  function() { return _isPaused; } ); // HtmlView Page linking property 'State' for element 'playPauseButtonDU'
          _view.playPauseButtonDU.setAction("OnClick", function(_data,_info) {
  dty=0.05;
  dt=0.0;
  dt2=0;
  dt3=0;
  _play();
  text="playing";
  showfoldlr=false;
  showfoldbt=false;
  showlrbt=true;

}); // HtmlView Page setting action 'OnClick' for element 'playPauseButtonDU'
          _view.playPauseButtonDU.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'playPauseButtonDU'
          _view.playPauseButtonleftrightfold.setAction("OffClick", function(_data,_info) {
  dt3=0.;
  dt2=0.05;
  dt22=0; //fold to the right
  dt=0.0;
  dty=0;
  achange=1; // move right
  bchange=0.5; //flip up
  _play();
  text="playing";
  showfoldbt=false;
  showlrbt=false;

}); // HtmlView Page setting action 'OffClick' for element 'playPauseButtonleftrightfold'
          _view.playPauseButtonleftrightfold.linkProperty("Disabled",  function() { return _isPlaying; } ); // HtmlView Page linking property 'Disabled' for element 'playPauseButtonleftrightfold'
          _view.playPauseButtonleftrightfold.setAction("OnClick", function(_data,_info) {
  dt3=0.;
  dt2=0.05;
  dt22=0; //fold to the right
  dt=0.0;
  dty=0;
  achange=-1; //move left
  bchange=0.5; // flip down
  _play();
  text="playing";
  showfoldbt=false;
  showlrbt=false;

}); // HtmlView Page setting action 'OnClick' for element 'playPauseButtonleftrightfold'
          _view.playPauseButtonleftrightfold.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'playPauseButtonleftrightfold'
          _view.playPauseButtonleftrightfold.linkProperty("Display",  function() { return showfoldlr?"inline-block":"none"; } ); // HtmlView Page linking property 'Display' for element 'playPauseButtonleftrightfold'
          _view.playPauseButtontopbottom.setAction("OffClick", function(_data,_info) {
  dt3=0.05;
  dt2=0;
  dt22=0; //fold to the right
  dt=0.0;
  dty=0;
  cchange=-0.25; //move left control direction
  dchange=-0.5; // flip up
  _play();
  text="playing";
  showfoldlr=false;
  showlrbt=false;

}); // HtmlView Page setting action 'OffClick' for element 'playPauseButtontopbottom'
          _view.playPauseButtontopbottom.linkProperty("Disabled",  function() { return _isPlaying; } ); // HtmlView Page linking property 'Disabled' for element 'playPauseButtontopbottom'
          _view.playPauseButtontopbottom.setAction("OnClick", function(_data,_info) {
  dt3=0.05; //flip up
  dt2=0.0;
  dt22=0; //fold to the right
  dt=0.0;
  dty=0;
  cchange=-0.25; //move left need to control direction
  dchange=0.5; // flip up
  _play();
  text="playing";
  showfoldlr=false;
  showlrbt=false;

}); // HtmlView Page setting action 'OnClick' for element 'playPauseButtontopbottom'
          _view.playPauseButtontopbottom.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'playPauseButtontopbottom'
          _view.playPauseButtontopbottom.linkProperty("Display",  function() { return showfoldbt?"inline-block":"none"; } ); // HtmlView Page linking property 'Display' for element 'playPauseButtontopbottom'
          _view.resetButton2.setAction("OnClick", function(_data,_info) {
  _reset();

}); // HtmlView Page setting action 'OnClick' for element 'resetButton2'
          _view.resetButton2.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'resetButton2'
          _view.slider.linkProperty("Value",  function() { return a; }, function(_v) { a = _v; } ); // HtmlView Page linking property 'Value' for element 'slider'
          _view.slider2.linkProperty("Value",  function() { return b; }, function(_v) { b = _v; } ); // HtmlView Page linking property 'Value' for element 'slider2'
          _view.slider22.linkProperty("Value",  function() { return c; }, function(_v) { c = _v; } ); // HtmlView Page linking property 'Value' for element 'slider22'
          _view.slider222.linkProperty("Value",  function() { return d; }, function(_v) { d = _v; } ); // HtmlView Page linking property 'Value' for element 'slider222'
          _view.slider223.linkProperty("Value",  function() { return e; }, function(_v) { e = _v; } ); // HtmlView Page linking property 'Value' for element 'slider223'
          _view.slider224.linkProperty("Value",  function() { return f; }, function(_v) { f = _v; } ); // HtmlView Page linking property 'Value' for element 'slider224'
          _view.plottingPanel.linkProperty("Height",  function() { return ""+window.innerHeight*0.9; } ); // HtmlView Page linking property 'Height' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("Width",  function() { return Width1; }, function(_v) { Width1 = _v; } ); // HtmlView Page linking property 'Width' for element 'plottingPanel'
          _view.plottingPanel.setAction("OnDoubleClick", function(_data,_info) {
  //toggleFullScreen();

}); // HtmlView Page setting action 'OnDoubleClick' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("TRMessage",  function() { return help; }, function(_v) { help = _v; } ); // HtmlView Page linking property 'TRMessage' for element 'plottingPanel'
          _view.plottingPanel.setAction("OnOrientationChange", function(_data,_info) {
  _update();

}); // HtmlView Page setting action 'OnOrientationChange' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("TLMessage",  function() { return text; }, function(_v) { text = _v; } ); // HtmlView Page linking property 'TLMessage' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("Visibility",  function() { return world===true; } ); // HtmlView Page linking property 'Visibility' for element 'plottingPanel'
          _view.A.linkProperty("Points",  function() { return [[-3,-3],[-3,3],[3,3],[3,-3],[2,-3],[2,-1],[-2,-1],[-2,-3],[-3,-3],[-2,0],[2,0],[2,2],[-2,2],[-2,0]]; } ); // HtmlView Page linking property 'Points' for element 'A'
          _view.A.linkProperty("SizeX",  function() { return scalextext; }, function(_v) { scalextext = _v; } ); // HtmlView Page linking property 'SizeX' for element 'A'
          _view.A.linkProperty("SizeY",  function() { return scaleytext; }, function(_v) { scaleytext = _v; } ); // HtmlView Page linking property 'SizeY' for element 'A'
          _view.B.linkProperty("Points",  function() { return [[-3,-3],[-3,3],[3,3],[3,1],[2,0],[3,-1],[3,-3],[-3,-3,0],[-2,-2],[2,-2],[0.5,-0.5],[-2,-0.5],[-2,-2],[-2,0.5,0],[0.5,0.5],[2,2],[-2,2],[-2,0.5],[-2,-2,0],[-3,-3,0]]; } ); // HtmlView Page linking property 'Points' for element 'B'
          _view.B.linkProperty("SizeX",  function() { return scalextext; }, function(_v) { scalextext = _v; } ); // HtmlView Page linking property 'SizeX' for element 'B'
          _view.B.linkProperty("SizeY",  function() { return scaleytext; }, function(_v) { scaleytext = _v; } ); // HtmlView Page linking property 'SizeY' for element 'B'
          _view.letterxy2base.linkProperty("Points",  function() { return letterxy; }, function(_v) { letterxy = _v; } ); // HtmlView Page linking property 'Points' for element 'letterxy2base'
          _view.letterxy.linkProperty("Points",  function() { return letterxy; }, function(_v) { letterxy = _v; } ); // HtmlView Page linking property 'Points' for element 'letterxy'
          _view.letterxy.linkProperty("SizeX",  function() { return scalextext; }, function(_v) { scalextext = _v; } ); // HtmlView Page linking property 'SizeX' for element 'letterxy'
          _view.letterxy.linkProperty("Visibility",  function() { return showlrbt; }, function(_v) { showlrbt = _v; } ); // HtmlView Page linking property 'Visibility' for element 'letterxy'
          _view.letterxy.linkProperty("SizeY",  function() { return scaleytext; }, function(_v) { scaleytext = _v; } ); // HtmlView Page linking property 'SizeY' for element 'letterxy'
          _view.text.linkProperty("X",  function() { return xtext; }, function(_v) { xtext = _v; } ); // HtmlView Page linking property 'X' for element 'text'
          _view.text.linkProperty("Y",  function() { return ytext; }, function(_v) { ytext = _v; } ); // HtmlView Page linking property 'Y' for element 'text'
          _view.text.linkProperty("Text",  function() { return letter; }, function(_v) { letter = _v; } ); // HtmlView Page linking property 'Text' for element 'text'
          _view.symmetryv.linkProperty("Visibility",  function() { return symmetrylinev; }, function(_v) { symmetrylinev = _v; } ); // HtmlView Page linking property 'Visibility' for element 'symmetryv'
          _view.symmetryh.linkProperty("Visibility",  function() { return symmetrylineh; }, function(_v) { symmetrylineh = _v; } ); // HtmlView Page linking property 'Visibility' for element 'symmetryh'
          _view.help.linkProperty("Text",  function() { return help; }, function(_v) { help = _v; } ); // HtmlView Page linking property 'Text' for element 'help'
          _view.group.linkProperty("X",  function() { return xtextmirror; }, function(_v) { xtextmirror = _v; } ); // HtmlView Page linking property 'X' for element 'group'
          _view.group.linkProperty("Y",  function() { return ytextmirror; }, function(_v) { ytextmirror = _v; } ); // HtmlView Page linking property 'Y' for element 'group'
          _view.mirror.linkProperty("Text",  function() { return letter; }, function(_v) { letter = _v; } ); // HtmlView Page linking property 'Text' for element 'mirror'
          _view.mirror.linkProperty("ScaleY",  function() { return scaleytext; }, function(_v) { scaleytext = _v; } ); // HtmlView Page linking property 'ScaleY' for element 'mirror'
          _view.mirror.linkProperty("ScaleX",  function() { return scalextext; }, function(_v) { scalextext = _v; } ); // HtmlView Page linking property 'ScaleX' for element 'mirror'
          _view.mirror2.linkProperty("Text",  function() { return letter; }, function(_v) { letter = _v; } ); // HtmlView Page linking property 'Text' for element 'mirror2'
          _view.mirror2.linkProperty("ScaleY",  function() { return scaleytext; }, function(_v) { scaleytext = _v; } ); // HtmlView Page linking property 'ScaleY' for element 'mirror2'
          _view.mirror2.linkProperty("ScaleX",  function() { return scalextext; }, function(_v) { scalextext = _v; } ); // HtmlView Page linking property 'ScaleX' for element 'mirror2'
          _view.letterxystayFOLDTOTHERIGHT.linkProperty("Points",  function() { return letterxystay; }, function(_v) { letterxystay = _v; } ); // HtmlView Page linking property 'Points' for element 'letterxystayFOLDTOTHERIGHT'
          _view.letterxystayFOLDTOTHERIGHT.linkProperty("Transformation",  function() { return [a2,b2,c2,d2,e2,f2]; } ); // HtmlView Page linking property 'Transformation' for element 'letterxystayFOLDTOTHERIGHT'
          _view.letterxystayFOLDTOTHERIGHT.linkProperty("Visibility",  function() { return showfoldlr; }, function(_v) { showfoldlr = _v; } ); // HtmlView Page linking property 'Visibility' for element 'letterxystayFOLDTOTHERIGHT'
          _view.letterxystayFOLDTOTHERIGHT.setAction("OnPress", function(_data,_info) {
  if (achange2<=0){
    dt3=0.;
  dt2=0.0;
  dt22=0.05;
  dt=0.0;
  dty=0;
  achange2=-1; //move left
  bchange2=0.5; // flip down
  _play();
  text="playing";
  showfoldbt=false;
  showlrbt=false;
  }
  else if (achange2>0){
    dt3=0.;
  dt22=0.05;
  dt2=0.0;
  dt=0.0;
  dty=0;
  achange2=1; // move right
  bchange2=0.5; //flip up 0.5
  _play();
  text="playing";
  showfoldbt=false;
  showlrbt=false;
    }

}); // HtmlView Page setting action 'OnPress' for element 'letterxystayFOLDTOTHERIGHT'
          _view.letterxystay2top.linkProperty("Points",  function() { return letterxystaytop; }, function(_v) { letterxystaytop = _v; } ); // HtmlView Page linking property 'Points' for element 'letterxystay2top'
          _view.letterxystay2top.linkProperty("Visibility",  function() { return showfoldbt; }, function(_v) { showfoldbt = _v; } ); // HtmlView Page linking property 'Visibility' for element 'letterxystay2top'
          _view.letterxyfoldtotheleft.linkProperty("Points",  function() { return letterxyfold; }, function(_v) { letterxyfold = _v; } ); // HtmlView Page linking property 'Points' for element 'letterxyfoldtotheleft'
          _view.letterxyfoldtotheleft.linkProperty("Transformation",  function() { return [a,b,c,d,e,f]; } ); // HtmlView Page linking property 'Transformation' for element 'letterxyfoldtotheleft'
          _view.letterxyfoldtotheleft.linkProperty("Visibility",  function() { return showfoldlr; }, function(_v) { showfoldlr = _v; } ); // HtmlView Page linking property 'Visibility' for element 'letterxyfoldtotheleft'
          _view.letterxyfoldtotheleft.setAction("OnPress", function(_data,_info) {
  if (achange<=0){
    dt3=0.;
  dt2=0.05;
  dt22=0; //fold to the right
  dt=0.0;
  dty=0;
  achange=-1; //move left
  bchange=0.5; // flip down
  _play();
  text="playing";
  showfoldbt=false;
  showlrbt=false;
  }
  else if (achange>0){
    dt3=0.;
  dt2=0.05;
  dt22=0; //fold to the right
  dt=0.0;
  dty=0;
  achange=1; // move right
  bchange=0.5; //flip up 0.5
  _play();
  text="playing";
  showfoldbt=false;
  showlrbt=false;
    }

}); // HtmlView Page setting action 'OnPress' for element 'letterxyfoldtotheleft'
          _view.foldvertical.linkProperty("Visibility",  function() { return showfoldlr; }, function(_v) { showfoldlr = _v; } ); // HtmlView Page linking property 'Visibility' for element 'foldvertical'
          _view.letterxyfold2bottom.linkProperty("Points",  function() { return letterxyfoldbot; }, function(_v) { letterxyfoldbot = _v; } ); // HtmlView Page linking property 'Points' for element 'letterxyfold2bottom'
          _view.letterxyfold2bottom.linkProperty("Transformation",  function() { return [a,b,c,d,e,f]; } ); // HtmlView Page linking property 'Transformation' for element 'letterxyfold2bottom'
          _view.letterxyfold2bottom.linkProperty("Visibility",  function() { return showfoldbt; }, function(_v) { showfoldbt = _v; } ); // HtmlView Page linking property 'Visibility' for element 'letterxyfold2bottom'
          _view.letterxyfold2bottom.setAction("OnPress", function(_data,_info) {
  if (dchange<=0){
    dt3=0.05; //flip up
  dt2=0.0;
  dt22=0; //fold to the right
  dt=0.0;
  dty=0;
  cchange=-0.25; //move left need to control direction
  dchange=-0.5; // flip up
  _play();
  text="playing";
  showfoldlr=false;
  showlrbt=false;
  statetopbot=false;//sync playbuttons
  }
  else if (dchange>0){
  dt3=0.05;
  dt2=0;
  dt22=0; //fold to the right
  dt=0.0;
  dty=0;
  cchange=-0.25; //move left control direction
  dchange=0.5; // flip up
  _play();
  text="playing";
  showfoldlr=false;
  showlrbt=false;
  statetopbot=true;//sync playbuttons
  }

}); // HtmlView Page setting action 'OnPress' for element 'letterxyfold2bottom'
          _view.foldhorizontal.linkProperty("Visibility",  function() { return showfoldbt; }, function(_v) { showfoldbt = _v; } ); // HtmlView Page linking property 'Visibility' for element 'foldhorizontal'
          break;
      } // end of switch
    }; // end of new reset

    _model.setView(_view);
    _model.reset();
    _view._enableEPub();
  } // end of _selectView

  _model.setAutoplay(false);
  _model.setFPS(20);
  _model.setStepsPerDisplay(1);
  _selectView(-1); // this includes _model.reset()
  return _model;
}

function symmetryletter_View (_topFrame,_viewNumber,_libraryPath,_codebasePath) {
  var _view;
  switch(_viewNumber) {
    case -10 : break; // make Lint happy
    default :
    case 0: _view = symmetryletter_View_0 (_topFrame); break;
  } // end of switch

  if (_codebasePath) _view._setResourcePath(_codebasePath);

  if (_libraryPath) _view._setLibraryPath(_libraryPath);


  return _view;
} // end of main function

function symmetryletter_View_0 (_topFrame) {
  var _view = EJSS_CORE.createView(_topFrame);

  _view._reset = function() {
    _view._clearAll();
    _view._addElement(EJSS_INTERFACE.panel,"fullscreen", _view._topFrame) // EJsS HtmlView.HtmlView Page: declaration of element 'fullscreen'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controlPanel", _view.fullscreen) // EJsS HtmlView.HtmlView Page: declaration of element 'controlPanel'
      .setProperty("Width","100%") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'controlPanel'
      .setProperty("Display","inline-block") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'controlPanel'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"vectorcompo", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'vectorcompo'
      .setProperty("Text","Explore the Symmetric Letter!") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'vectorcompo'
      ;

    _view._addElement(EJSS_INTERFACE.comboBox,"comboBox", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'comboBox'
      .setProperty("Tooltip","select user_defined rays to show") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'comboBox'
      ;

    _view._addElement(EJSS_INTERFACE.twoStateButton,"playPauseButtonLR", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'playPauseButtonLR'
      .setProperty("TextOn","►") // EJsS HtmlView.HtmlView Page: setting property 'TextOn' for element 'playPauseButtonLR'
      .setProperty("Tooltip","Play/Pause") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'playPauseButtonLR'
      .setProperty("TextOff","||") // EJsS HtmlView.HtmlView Page: setting property 'TextOff' for element 'playPauseButtonLR'
      ;

    _view._addElement(EJSS_INTERFACE.twoStateButton,"playPauseButtonDU", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'playPauseButtonDU'
      .setProperty("TextOn","▼") // EJsS HtmlView.HtmlView Page: setting property 'TextOn' for element 'playPauseButtonDU'
      .setProperty("Tooltip","Play/Pause") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'playPauseButtonDU'
      .setProperty("TextOff","||") // EJsS HtmlView.HtmlView Page: setting property 'TextOff' for element 'playPauseButtonDU'
      ;

    _view._addElement(EJSS_INTERFACE.twoStateButton,"playPauseButtonleftrightfold", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'playPauseButtonleftrightfold'
      .setProperty("TextOn","👐") // EJsS HtmlView.HtmlView Page: setting property 'TextOn' for element 'playPauseButtonleftrightfold'
      .setProperty("Tooltip","Fold left/Unfold right") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'playPauseButtonleftrightfold'
      .setProperty("TextOff","🙏") // EJsS HtmlView.HtmlView Page: setting property 'TextOff' for element 'playPauseButtonleftrightfold'
      ;

    _view._addElement(EJSS_INTERFACE.twoStateButton,"playPauseButtontopbottom", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'playPauseButtontopbottom'
      .setProperty("TextOn","🙏") // EJsS HtmlView.HtmlView Page: setting property 'TextOn' for element 'playPauseButtontopbottom'
      .setProperty("CSS",{ "transform":"rotate(90deg)" }) // EJsS HtmlView.HtmlView Page: setting property 'CSS' for element 'playPauseButtontopbottom'
      .setProperty("Tooltip","Fold up/Unfold down") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'playPauseButtontopbottom'
      .setProperty("TextOff","👐") // EJsS HtmlView.HtmlView Page: setting property 'TextOff' for element 'playPauseButtontopbottom'
      ;

    _view._addElement(EJSS_INTERFACE.button,"resetButton2", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'resetButton2'
      .setProperty("Text","↻") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'resetButton2'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"slider", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'slider'
      .setProperty("Minimum",-1) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'slider'
      .setProperty("Maximum",1) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'slider'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'slider'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"slider2", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'slider2'
      .setProperty("Minimum",-1) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'slider2'
      .setProperty("Maximum",1) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'slider2'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'slider2'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"slider22", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'slider22'
      .setProperty("Minimum",-1) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'slider22'
      .setProperty("Maximum",1) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'slider22'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'slider22'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"slider222", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'slider222'
      .setProperty("Minimum",-1) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'slider222'
      .setProperty("Maximum",1) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'slider222'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'slider222'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"slider223", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'slider223'
      .setProperty("Minimum",-1) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'slider223'
      .setProperty("Maximum",1) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'slider223'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'slider223'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"slider224", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'slider224'
      .setProperty("Minimum",-1) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'slider224'
      .setProperty("Maximum",1) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'slider224'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'slider224'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"panel", _view.fullscreen) // EJsS HtmlView.HtmlView Page: declaration of element 'panel'
      .setProperty("Height","100%") // EJsS HtmlView.HtmlView Page: setting property 'Height' for element 'panel'
      .setProperty("Width","100%") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'panel'
      ;

    _view._addElement(EJSS_DRAWING2D.plottingPanel,"plottingPanel", _view.panel) // EJsS HtmlView.HtmlView Page: declaration of element 'plottingPanel'
      .setProperty("Gutters",[0,0,0,0]) // EJsS HtmlView.HtmlView Page: setting property 'Gutters' for element 'plottingPanel'
      .setProperty("ShowAreaRectangle",false) // EJsS HtmlView.HtmlView Page: setting property 'ShowAreaRectangle' for element 'plottingPanel'
      .setProperty("EnabledZooming",false) // EJsS HtmlView.HtmlView Page: setting property 'EnabledZooming' for element 'plottingPanel'
      .setProperty("YScalePrecision",1) // EJsS HtmlView.HtmlView Page: setting property 'YScalePrecision' for element 'plottingPanel'
      .setProperty("XFixedTick",0) // EJsS HtmlView.HtmlView Page: setting property 'XFixedTick' for element 'plottingPanel'
      .setProperty("YFixedTick",0) // EJsS HtmlView.HtmlView Page: setting property 'YFixedTick' for element 'plottingPanel'
      .setProperty("XTickStep",1) // EJsS HtmlView.HtmlView Page: setting property 'XTickStep' for element 'plottingPanel'
      .setProperty("YTickStep",1) // EJsS HtmlView.HtmlView Page: setting property 'YTickStep' for element 'plottingPanel'
      .setProperty("XAutoTicks",false) // EJsS HtmlView.HtmlView Page: setting property 'XAutoTicks' for element 'plottingPanel'
      .setProperty("Enabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Enabled' for element 'plottingPanel'
      .setProperty("SquareAspect",true) // EJsS HtmlView.HtmlView Page: setting property 'SquareAspect' for element 'plottingPanel'
      .setProperty("MaximumY",3) // EJsS HtmlView.HtmlView Page: setting property 'MaximumY' for element 'plottingPanel'
      .setProperty("MaximumX",3) // EJsS HtmlView.HtmlView Page: setting property 'MaximumX' for element 'plottingPanel'
      .setProperty("EnabledDragging","ENABLED_NONE") // EJsS HtmlView.HtmlView Page: setting property 'EnabledDragging' for element 'plottingPanel'
      .setProperty("YAutoTicks",false) // EJsS HtmlView.HtmlView Page: setting property 'YAutoTicks' for element 'plottingPanel'
      .setProperty("MinimumX",-3) // EJsS HtmlView.HtmlView Page: setting property 'MinimumX' for element 'plottingPanel'
      .setProperty("MinimumY",-3) // EJsS HtmlView.HtmlView Page: setting property 'MinimumY' for element 'plottingPanel'
      .setProperty("AutoScaleY",false) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleY' for element 'plottingPanel'
      .setProperty("AutoScaleX",false) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleX' for element 'plottingPanel'
      .setProperty("XScalePrecision",1) // EJsS HtmlView.HtmlView Page: setting property 'XScalePrecision' for element 'plottingPanel'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"letterscaletecnique", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'letterscaletecnique'
      ;

    _view._addElement(EJSS_DRAWING2D.polygon,"A", _view.letterscaletecnique) // EJsS HtmlView.HtmlView Page: declaration of element 'A'
      .setProperty("FillColor","Magenta") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'A'
      .setProperty("LineColor","Magenta") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'A'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'A'
      ;

    _view._addElement(EJSS_DRAWING2D.polygon,"B", _view.letterscaletecnique) // EJsS HtmlView.HtmlView Page: declaration of element 'B'
      .setProperty("FillColor","Cyan") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'B'
      .setProperty("LineColor","Cyan") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'B'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'B'
      ;

    _view._addElement(EJSS_DRAWING2D.polygon,"letterxy2base", _view.letterscaletecnique) // EJsS HtmlView.HtmlView Page: declaration of element 'letterxy2base'
      .setProperty("LineColor","Blue") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'letterxy2base'
      ;

    _view._addElement(EJSS_DRAWING2D.polygon,"letterxy", _view.letterscaletecnique) // EJsS HtmlView.HtmlView Page: declaration of element 'letterxy'
      .setProperty("FillColor","rgba(0,255,0,0.5)") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'letterxy'
      .setProperty("LineColor","rgba(0,255,0,0.5)") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'letterxy'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"original", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'original'
      ;

    _view._addElement(EJSS_DRAWING2D.text,"text", _view.original) // EJsS HtmlView.HtmlView Page: declaration of element 'text'
      .setProperty("RelativePosition","CENTERED") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element 'text'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'text'
      .setProperty("EnabledPosition","ENABLED_ANY") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element 'text'
      .setProperty("Font","normal bold 500px ") // EJsS HtmlView.HtmlView Page: setting property 'Font' for element 'text'
      ;

    _view._addElement(EJSS_DRAWING2D.arrow,"symmetryv", _view.original) // EJsS HtmlView.HtmlView Page: declaration of element 'symmetryv'
      .setProperty("MarkEnd","TRIANGLE") // EJsS HtmlView.HtmlView Page: setting property 'MarkEnd' for element 'symmetryv'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'symmetryv'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'symmetryv'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'symmetryv'
      .setProperty("MarkStart","INVTRIANGLE") // EJsS HtmlView.HtmlView Page: setting property 'MarkStart' for element 'symmetryv'
      .setProperty("SizeY",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'symmetryv'
      .setProperty("LineWidth",5) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'symmetryv'
      .setProperty("Offset","CENTERED") // EJsS HtmlView.HtmlView Page: setting property 'Offset' for element 'symmetryv'
      ;

    _view._addElement(EJSS_DRAWING2D.arrow,"symmetryh", _view.original) // EJsS HtmlView.HtmlView Page: declaration of element 'symmetryh'
      .setProperty("MarkEnd","TRIANGLE") // EJsS HtmlView.HtmlView Page: setting property 'MarkEnd' for element 'symmetryh'
      .setProperty("SizeX",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'symmetryh'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'symmetryh'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'symmetryh'
      .setProperty("MarkStart","INVTRIANGLE") // EJsS HtmlView.HtmlView Page: setting property 'MarkStart' for element 'symmetryh'
      .setProperty("SizeY",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'symmetryh'
      .setProperty("LineWidth",5) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'symmetryh'
      .setProperty("Offset","CENTERED") // EJsS HtmlView.HtmlView Page: setting property 'Offset' for element 'symmetryh'
      ;

    _view._addElement(EJSS_DRAWING2D.text,"help", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'help'
      .setProperty("Sensitivity",100) // EJsS HtmlView.HtmlView Page: setting property 'Sensitivity' for element 'help'
      .setProperty("FontSize","2vw") // EJsS HtmlView.HtmlView Page: setting property 'FontSize' for element 'help'
      .setProperty("RelativePosition","CENTERED") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element 'help'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'help'
      .setProperty("Y",-3.5) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'help'
      .setProperty("EnabledPosition","ENABLED_ANY") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element 'help'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"group", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'group'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'group'
      ;

    _view._addElement(EJSS_DRAWING2D.text,"mirror", _view.group) // EJsS HtmlView.HtmlView Page: declaration of element 'mirror'
      .setProperty("FontFamily","Square") // EJsS HtmlView.HtmlView Page: setting property 'FontFamily' for element 'mirror'
      .setProperty("FillColor","Blue") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'mirror'
      .setProperty("FontSize",1200) // EJsS HtmlView.HtmlView Page: setting property 'FontSize' for element 'mirror'
      .setProperty("RelativePosition","CENTERED") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element 'mirror'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'mirror'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'mirror'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'mirror'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"shape", _view.group) // EJsS HtmlView.HtmlView Page: declaration of element 'shape'
      .setProperty("FillColor","rgba(0,0,255,0.0)") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'shape'
      .setProperty("SizeX",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'shape'
      .setProperty("ShapeType","WHEEL") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'shape'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'shape'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'shape'
      .setProperty("SizeY",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'shape'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'shape'
      ;

    _view._addElement(EJSS_DRAWING2D.text,"mirror2", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'mirror2'
      .setProperty("FillColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'mirror2'
      .setProperty("RelativePosition","CENTERED") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element 'mirror2'
      .setProperty("X",-7) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'mirror2'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'mirror2'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'mirror2'
      .setProperty("Font","normal normal 800 Square") // EJsS HtmlView.HtmlView Page: setting property 'Font' for element 'mirror2'
      ;

    _view._addElement(EJSS_DRAWING2D.polygon,"letterxystayFOLDTOTHERIGHT", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'letterxystayFOLDTOTHERIGHT'
      .setProperty("FillColor","rgba(0,0,255,0.5)") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'letterxystayFOLDTOTHERIGHT'
      .setProperty("Sensitivity",0) // EJsS HtmlView.HtmlView Page: setting property 'Sensitivity' for element 'letterxystayFOLDTOTHERIGHT'
      .setProperty("LineColor","Blue") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'letterxystayFOLDTOTHERIGHT'
      .setProperty("EnabledPosition","ENABLED_NO_MOVE") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element 'letterxystayFOLDTOTHERIGHT'
      ;

    _view._addElement(EJSS_DRAWING2D.polygon,"letterxystay2top", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'letterxystay2top'
      .setProperty("FillColor","rgba(0,0,255,0.5)") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'letterxystay2top'
      .setProperty("LineColor","Blue") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'letterxystay2top'
      ;

    _view._addElement(EJSS_DRAWING2D.polygon,"letterxyfoldtotheleft", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'letterxyfoldtotheleft'
      .setProperty("FillColor","rgba(0,0,255,0.5)") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'letterxyfoldtotheleft'
      .setProperty("Sensitivity",0) // EJsS HtmlView.HtmlView Page: setting property 'Sensitivity' for element 'letterxyfoldtotheleft'
      .setProperty("LineColor","Blue") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'letterxyfoldtotheleft'
      .setProperty("EnabledPosition","ENABLED_NO_MOVE") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element 'letterxyfoldtotheleft'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"foldvertical", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'foldvertical'
      ;

    _view._addElement(EJSS_DRAWING2D.polygon,"letterxyfold2bottom", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'letterxyfold2bottom'
      .setProperty("FillColor","rgba(0,0,255,0.5)") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'letterxyfold2bottom'
      .setProperty("Sensitivity",0) // EJsS HtmlView.HtmlView Page: setting property 'Sensitivity' for element 'letterxyfold2bottom'
      .setProperty("LineColor","Blue") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'letterxyfold2bottom'
      .setProperty("EnabledPosition","ENABLED_NO_MOVE") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element 'letterxyfold2bottom'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"foldhorizontal", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'foldhorizontal'
      ;

  };

  return _view;
}


//--><!]]></script>
  </head>
  <body>
    <div role="button" id="_topFrame" style="text-align:center"></div>
  <div id="metadata" class="metadata">
    <br />
    <div id="title_author">
      <hr />
      <b>Title and author:</b>
      <p>
      Symmetry of Letters<br />
     <img alt="Logo" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/01Math/dawn/ejss_src_symmetryletter/symmetryletter/Screen Shot 2017-10-27 at 1.11.38 PM.png" />
      </p>
      <p>
      <img alt="author image" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/01Math/dawn/ejss_src_symmetryletter/1authorlookangphoto5050.png" />
      <img alt="author image" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/01Math/dawn/ejss_src_symmetryletter/01authorPacoEsquembre2011.png" />
      <img alt="author image" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/01Math/dawn/ejss_src_symmetryletter/01authorFelix_J_Garcia_Clemente.png" />
 weelookang@gmail.com; Francisco Esquembre; Felix J. Garcia Clemente
      </p>
    </div>
    <hr />
    <p></p>
    <div id="copyright_message">
      <div class="cc_left"  style="float:left">&#169; 2018, weelookang@gmail.com; Francisco Esquembre; Felix J. Garcia Clemente. Compiled with EJS 6.0_beta (180814)
</div>
      <div class="cc_right" style="float:right">    Released under a <a rel="license" target="_blank" href="http://creativecommons.org/licenses/by-nc-sa/4.0/deed.en_US"> <img alt="Creative Commons Attribution-NonCommercial-ShareAlike" src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_6.0_beta/bin/javascript/lib/images/cc_icon.png" /> </a> license.</div>
    </div>
  </div>
    <script type="text/javascript"><!--//--><![CDATA[//><!--
      var _model;
      var _scorm;
      window.addEventListener('load',
        function () { 
          _model =  new symmetryletter("_topFrame","file:/Users/lookang/Google%20Drive/PublicLawrence/EjsS_6.0_beta/bin/javascript/lib/","file:/Users/lookang/Google%20Drive/PublicLawrence/workspace/source/EJSS/01Math/dawn/ejss_src_symmetryletter/");
          if (typeof _isApp !== "undefined" && _isApp) _model.setRunAlways(true);
          TextResizeDetector.TARGET_ELEMENT_ID = '_topFrame';
          TextResizeDetector.USER_INIT_FUNC = function () {
            var iBase = TextResizeDetector.addEventListener(function(e,args) {
              _model._fontResized(args[0].iBase,args[0].iSize,args[0].iDelta);
              },null);
            _model._fontResized(iBase);
          };
          _model.onload();
        }, false);
    //--><!]]></script>
  </body>
</html>
