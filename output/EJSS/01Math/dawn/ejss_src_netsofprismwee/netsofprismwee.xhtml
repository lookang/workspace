<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Nets of Prism</title>
    <link rel="stylesheet"  type="text/css" href="file:///Users/lookang/Google Drive/PublicLawrence/workspace/output/_ejs_library/css/ejss.css" />
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/scripts/common_script.js"></script>
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/scripts/textresizedetector.js"></script>
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/ejsS.v1.min.js"></script>
<script type="text/javascript"><!--//--><![CDATA[//><!--
/* _inputParameters: an object with different values for the model parameters */
function netsofprismwee(_topFrame,_libraryPath,_codebasePath, _inputParameters) {
  var _model = EJSS_CORE.createAnimationLMS();
  var _view;
  var _isPlaying = false;
  var _isPaused = true;
  var _isMobile = (navigator===undefined) ? false : navigator.userAgent.match(/iPhone|iPad|iPod|Android|BlackBerry|Opera Mini|IEMobile/i);

var _stringProperties = {};
  var _tools = {
    showInputDialog : EJSS_INTERFACE.BoxPanel.showInputDialog,
    showOkDialog : EJSS_INTERFACE.BoxPanel.showOkDialog,
    showOkCancelDialog : EJSS_INTERFACE.BoxPanel.showOkCancelDialog,
    downloadText: EJSS_TOOLS.File.downloadText,
    uploadText: function(action) { EJSS_TOOLS.File.uploadText(_model,action); } 
  };

  function _play()  { _isPaused = false; _isPlaying = true;  _model.play();  }
  function _pause() { _isPaused = true;  _isPlaying = false; _model.pause(); }
  function _step()  { _pause();  _model.step(); }
  function _reset() { _model.reset();  _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); }
  _model._play  = _play;
  _model._pause = _pause;
  _model._step  = _step;
  _model._reset = _reset;
  function _update() { _model.update(); }
  function _initialize() { _model.initialize(); }
  function _setFPS(_fps) { _model.setFPS(_fps); }
  function _setDelay(_delay) { _model.setDelay(_delay); }
  function _setStepsPerDisplay(_spd) { _model.setStepsPerDisplay(_spd); }
  function _setUpdateView(_updateView) { _model.setUpdateView(_updateView); }
  function _setAutoplay(_auto) { _model.setAutoplay(_auto); }
  function _println(_message) { console.log(_message); }

  function _breakAfterThisPage() { _model.setShouldBreak(true); }

  function _resetSolvers() { if (_model.resetSolvers) _model.resetSolvers(); }

  function _saveText(name,type,content) { if (_model.saveText) _model.saveText(name,type,content); }

  function _saveState(name) { if (_model.saveState) _model.saveState(name); }

  function _saveImage(name,panelname) { if (_model.saveImage) _model.saveImage(name,panelname); }

  function _readState(url,type) { if (_model.readState) _model.readState(url,type); }

  function _readText(url,type,varname) { if (_model.readText) _model.readText(url,type,varname); }

  function _getStringProperty(propertyName) {
    var _value = _stringProperties[propertyName];
    if (_value===undefined) return propertyName;
    else return _value;
  }
  var __pagesEnabled = [];
  function _setPageEnabled(pageName,enabled) { __pagesEnabled[pageName] = enabled; }

  var mode; // EjsS Model.Variables.Var Table.mode
  var selected; // EjsS Model.Variables.Var Table.selected
  var selected1; // EjsS Model.Variables.Var Table.selected1
  var showunfoldoption; // EjsS Model.Variables.Var Table.showunfoldoption
  var range; // EjsS Model.Variables.Var Table.range
  var xmin; // EjsS Model.Variables.Var Table.xmin
  var xmax; // EjsS Model.Variables.Var Table.xmax
  var ymin; // EjsS Model.Variables.Var Table.ymin
  var ymax; // EjsS Model.Variables.Var Table.ymax
  var zmin; // EjsS Model.Variables.Var Table.zmin
  var zmax; // EjsS Model.Variables.Var Table.zmax
  var t; // EjsS Model.Variables.Var Table.t
  var t0; // EjsS Model.Variables.Var Table.t0
  var dt; // EjsS Model.Variables.Var Table.dt
  var size; // EjsS Model.Variables.Var Table.size
  var size2; // EjsS Model.Variables.Var Table.size2
  var stroke; // EjsS Model.Variables.Var Table.stroke
  var pi; // EjsS Model.Variables.Var Table.pi
  var blue; // EjsS Model.Variables.Var Table.blue
  var green; // EjsS Model.Variables.Var Table.green
  var green2; // EjsS Model.Variables.Var Table.green2
  var yellow; // EjsS Model.Variables.Var Table.yellow
  var clr; // EjsS Model.Variables.Var Table.clr
  var clr2; // EjsS Model.Variables.Var Table.clr2
  var clabel; // EjsS Model.Variables.Var Table.clabel
  var npt; // EjsS Model.Variables.Var Table.npt

  var x; // EjsS Model.Variables.prism.x
  var y; // EjsS Model.Variables.prism.y
  var z; // EjsS Model.Variables.prism.z
  var r; // EjsS Model.Variables.prism.r
  var ctatop; // EjsS Model.Variables.prism.ctatop
  var ctatoprate; // EjsS Model.Variables.prism.ctatoprate
  var xsize; // EjsS Model.Variables.prism.xsize
  var ysize; // EjsS Model.Variables.prism.ysize
  var zsize; // EjsS Model.Variables.prism.zsize
  var topshow; // EjsS Model.Variables.prism.topshow
  var error; // EjsS Model.Variables.prism.error
  var angle; // EjsS Model.Variables.prism.angle
  var ctaright; // EjsS Model.Variables.prism.ctaright
  var ctarightrate; // EjsS Model.Variables.prism.ctarightrate
  var cta; // EjsS Model.Variables.prism.cta
  var ctarate; // EjsS Model.Variables.prism.ctarate
  var ctafront; // EjsS Model.Variables.prism.ctafront
  var ctafrontrate; // EjsS Model.Variables.prism.ctafrontrate
  var ctaback; // EjsS Model.Variables.prism.ctaback
  var ctabackrate; // EjsS Model.Variables.prism.ctabackrate

  var xgroup; // EjsS Model.Variables.debug.xgroup
  var ygroup; // EjsS Model.Variables.debug.ygroup
  var zgroup; // EjsS Model.Variables.debug.zgroup
  var xpos; // EjsS Model.Variables.debug.xpos
  var ypos; // EjsS Model.Variables.debug.ypos
  var zpos; // EjsS Model.Variables.debug.zpos
  var tx; // EjsS Model.Variables.debug.tx
  var ty; // EjsS Model.Variables.debug.ty
  var tz; // EjsS Model.Variables.debug.tz
  var tw; // EjsS Model.Variables.debug.tw
  var theta; // EjsS Model.Variables.debug.theta
  var rotx; // EjsS Model.Variables.debug.rotx
  var roty; // EjsS Model.Variables.debug.roty
  var rotz; // EjsS Model.Variables.debug.rotz

  var _privateOdesList;
  var _ODEi_evolution1;
  var userEvents1=[];

  _model.getOdes = function() { return [_ODEi_evolution1]; };

  _model.removeEvents = function(){
    userEvents1=[];
  };

  function _serialize() { return _model.serialize(); }

  _model._userSerialize = function() {
    return {
      mode : mode,
      selected : selected,
      selected1 : selected1,
      showunfoldoption : showunfoldoption,
      range : range,
      xmin : xmin,
      xmax : xmax,
      ymin : ymin,
      ymax : ymax,
      zmin : zmin,
      zmax : zmax,
      t : t,
      t0 : t0,
      dt : dt,
      size : size,
      size2 : size2,
      stroke : stroke,
      pi : pi,
      blue : blue,
      green : green,
      green2 : green2,
      yellow : yellow,
      clr : clr,
      clr2 : clr2,
      clabel : clabel,
      npt : npt,
      x : x,
      y : y,
      z : z,
      r : r,
      ctatop : ctatop,
      ctatoprate : ctatoprate,
      xsize : xsize,
      ysize : ysize,
      zsize : zsize,
      topshow : topshow,
      error : error,
      angle : angle,
      ctaright : ctaright,
      ctarightrate : ctarightrate,
      cta : cta,
      ctarate : ctarate,
      ctafront : ctafront,
      ctafrontrate : ctafrontrate,
      ctaback : ctaback,
      ctabackrate : ctabackrate,
      xgroup : xgroup,
      ygroup : ygroup,
      zgroup : zgroup,
      xpos : xpos,
      ypos : ypos,
      zpos : zpos,
      tx : tx,
      ty : ty,
      tz : tz,
      tw : tw,
      theta : theta,
      rotx : rotx,
      roty : roty,
      rotz : rotz
    };
  };

  _model._readParameters = function(json) {
    if(typeof json.mode != "undefined") mode = json.mode;
    if(typeof json.selected != "undefined") selected = json.selected;
    if(typeof json.selected1 != "undefined") selected1 = json.selected1;
    if(typeof json.showunfoldoption != "undefined") showunfoldoption = json.showunfoldoption;
    if(typeof json.range != "undefined") range = json.range;
    if(typeof json.xmin != "undefined") xmin = json.xmin;
    if(typeof json.xmax != "undefined") xmax = json.xmax;
    if(typeof json.ymin != "undefined") ymin = json.ymin;
    if(typeof json.ymax != "undefined") ymax = json.ymax;
    if(typeof json.zmin != "undefined") zmin = json.zmin;
    if(typeof json.zmax != "undefined") zmax = json.zmax;
    if(typeof json.t != "undefined") t = json.t;
    if(typeof json.t0 != "undefined") t0 = json.t0;
    if(typeof json.dt != "undefined") dt = json.dt;
    if(typeof json.size != "undefined") size = json.size;
    if(typeof json.size2 != "undefined") size2 = json.size2;
    if(typeof json.stroke != "undefined") stroke = json.stroke;
    if(typeof json.pi != "undefined") pi = json.pi;
    if(typeof json.blue != "undefined") blue = json.blue;
    if(typeof json.green != "undefined") green = json.green;
    if(typeof json.green2 != "undefined") green2 = json.green2;
    if(typeof json.yellow != "undefined") yellow = json.yellow;
    if(typeof json.clr != "undefined") clr = json.clr;
    if(typeof json.clr2 != "undefined") clr2 = json.clr2;
    if(typeof json.clabel != "undefined") clabel = json.clabel;
    if(typeof json.npt != "undefined") npt = json.npt;
    if(typeof json.x != "undefined") x = json.x;
    if(typeof json.y != "undefined") y = json.y;
    if(typeof json.z != "undefined") z = json.z;
    if(typeof json.r != "undefined") r = json.r;
    if(typeof json.ctatop != "undefined") ctatop = json.ctatop;
    if(typeof json.ctatoprate != "undefined") ctatoprate = json.ctatoprate;
    if(typeof json.xsize != "undefined") xsize = json.xsize;
    if(typeof json.ysize != "undefined") ysize = json.ysize;
    if(typeof json.zsize != "undefined") zsize = json.zsize;
    if(typeof json.topshow != "undefined") topshow = json.topshow;
    if(typeof json.error != "undefined") error = json.error;
    if(typeof json.angle != "undefined") angle = json.angle;
    if(typeof json.ctaright != "undefined") ctaright = json.ctaright;
    if(typeof json.ctarightrate != "undefined") ctarightrate = json.ctarightrate;
    if(typeof json.cta != "undefined") cta = json.cta;
    if(typeof json.ctarate != "undefined") ctarate = json.ctarate;
    if(typeof json.ctafront != "undefined") ctafront = json.ctafront;
    if(typeof json.ctafrontrate != "undefined") ctafrontrate = json.ctafrontrate;
    if(typeof json.ctaback != "undefined") ctaback = json.ctaback;
    if(typeof json.ctabackrate != "undefined") ctabackrate = json.ctabackrate;
    if(typeof json.xgroup != "undefined") xgroup = json.xgroup;
    if(typeof json.ygroup != "undefined") ygroup = json.ygroup;
    if(typeof json.zgroup != "undefined") zgroup = json.zgroup;
    if(typeof json.xpos != "undefined") xpos = json.xpos;
    if(typeof json.ypos != "undefined") ypos = json.ypos;
    if(typeof json.zpos != "undefined") zpos = json.zpos;
    if(typeof json.tx != "undefined") tx = json.tx;
    if(typeof json.ty != "undefined") ty = json.ty;
    if(typeof json.tz != "undefined") tz = json.tz;
    if(typeof json.tw != "undefined") tw = json.tw;
    if(typeof json.theta != "undefined") theta = json.theta;
    if(typeof json.rotx != "undefined") rotx = json.rotx;
    if(typeof json.roty != "undefined") roty = json.roty;
    if(typeof json.rotz != "undefined") rotz = json.rotz;
  };

  _model._inputAndPublicParameters = ["mode",  "selected",  "selected1",  "showunfoldoption",  "range",  "xmin",  "xmax",  "ymin",  "ymax",  "zmin",  "zmax",  "t",  "t0",  "dt",  "size",  "size2",  "stroke",  "pi",  "blue",  "green",  "green2",  "yellow",  "clr",  "clr2",  "clabel",  "npt",  "x",  "y",  "z",  "r",  "ctatop",  "ctatoprate",  "xsize",  "ysize",  "zsize",  "topshow",  "error",  "angle",  "ctaright",  "ctarightrate",  "cta",  "ctarate",  "ctafront",  "ctafrontrate",  "ctaback",  "ctabackrate",  "xgroup",  "ygroup",  "zgroup",  "xpos",  "ypos",  "zpos",  "tx",  "ty",  "tz",  "tw",  "theta",  "rotx",  "roty",  "rotz"]; 

  _model._outputAndPublicParameters = ["mode",  "selected",  "selected1",  "showunfoldoption",  "range",  "xmin",  "xmax",  "ymin",  "ymax",  "zmin",  "zmax",  "t",  "t0",  "dt",  "size",  "size2",  "stroke",  "pi",  "blue",  "green",  "green2",  "yellow",  "clr",  "clr2",  "clabel",  "npt",  "x",  "y",  "z",  "r",  "ctatop",  "ctatoprate",  "xsize",  "ysize",  "zsize",  "topshow",  "error",  "angle",  "ctaright",  "ctarightrate",  "cta",  "ctarate",  "ctafront",  "ctafrontrate",  "ctaback",  "ctabackrate",  "xgroup",  "ygroup",  "zgroup",  "xpos",  "ypos",  "zpos",  "tx",  "ty",  "tz",  "tw",  "theta",  "rotx",  "roty",  "rotz"];

  function _unserialize(json) { return _model.unserialize(json); }

  _model._userUnserialize = function(json) {
    _model._readParameters(json);
   _resetSolvers();
   _model.update();
  };

  _model.addToReset(function() {
    __pagesEnabled["Init Page"] = true;
    __pagesEnabled["Evol Page 2"] = true;
    __pagesEnabled["1R"] = true;
    __pagesEnabled["1L"] = true;
    __pagesEnabled["1F"] = true;
    __pagesEnabled["1B"] = true;
    __pagesEnabled["1RF"] = true;
    __pagesEnabled["1LF"] = true;
    __pagesEnabled["1FF"] = true;
    __pagesEnabled["1BF"] = true;
    __pagesEnabled["2F"] = true;
    __pagesEnabled["2B"] = true;
  });

  _model.addToReset(function() {
    mode = 0; // EjsS Model.Variables.Var Table.mode
    selected = new Array(1); // EjsS Model.Variables.Var Table.selected
    (function () {
      var _i0;
      for (_i0=0; _i0<1; _i0+=1) {  // EjsS Model.Variables.Var Table.selected
        selected[_i0] = "net 1 fold";  // EjsS Model.Variables.Var Table.selected
      }
    }());
    selected1 = new Array(1); // EjsS Model.Variables.Var Table.selected1
    (function () {
      var _i0;
      for (_i0=0; _i0<1; _i0+=1) {  // EjsS Model.Variables.Var Table.selected1
        selected1[_i0] = "prism";  // EjsS Model.Variables.Var Table.selected1
      }
    }());
    showunfoldoption = false; // EjsS Model.Variables.Var Table.showunfoldoption
    range = 2; // EjsS Model.Variables.Var Table.range
    xmin = -range/2; // EjsS Model.Variables.Var Table.xmin
    xmax = range/2; // EjsS Model.Variables.Var Table.xmax
    ymin = -range/2; // EjsS Model.Variables.Var Table.ymin
    ymax = range/2; // EjsS Model.Variables.Var Table.ymax
    zmin = -range/2; // EjsS Model.Variables.Var Table.zmin
    zmax = range/2; // EjsS Model.Variables.Var Table.zmax
    t = 0.0; // EjsS Model.Variables.Var Table.t
    t0 = t; // EjsS Model.Variables.Var Table.t0
    dt = 0.05; // EjsS Model.Variables.Var Table.dt
    size = range/50.; // EjsS Model.Variables.Var Table.size
    size2 = size/2; // EjsS Model.Variables.Var Table.size2
    stroke = 5; // EjsS Model.Variables.Var Table.stroke
    pi = Math.PI; // EjsS Model.Variables.Var Table.pi
    blue = "rgb(0,0,255)"; // EjsS Model.Variables.Var Table.blue
    green = "rgb(0,255,0)"; // EjsS Model.Variables.Var Table.green
    green2 = "rgb(0,255,0)"; // EjsS Model.Variables.Var Table.green2
    yellow = "rgb(255,255,0)"; // EjsS Model.Variables.Var Table.yellow
    clr = "yellow"; // EjsS Model.Variables.Var Table.clr
    clr2 = "yellow"; // EjsS Model.Variables.Var Table.clr2
    clabel = "current flow"; // EjsS Model.Variables.Var Table.clabel
    npt = 500; // EjsS Model.Variables.Var Table.npt
  });

  _model.addToReset(function() {
    x = 1; // EjsS Model.Variables.prism.x
    y = 1; // EjsS Model.Variables.prism.y
    z = 1; // EjsS Model.Variables.prism.z
    r = Math.sqrt(2); // EjsS Model.Variables.prism.r
    ctatop = 0; // EjsS Model.Variables.prism.ctatop
    ctatoprate = 0; // EjsS Model.Variables.prism.ctatoprate
    xsize = 1; // EjsS Model.Variables.prism.xsize
    ysize = 1; // EjsS Model.Variables.prism.ysize
    zsize = 1; // EjsS Model.Variables.prism.zsize
    topshow = false; // EjsS Model.Variables.prism.topshow
    error = 0.0001; // EjsS Model.Variables.prism.error
    angle = Math.atan2(y/2,zsize); // EjsS Model.Variables.prism.angle
    ctaright = 2*pi+angle; // EjsS Model.Variables.prism.ctaright
    ctarightrate = -pi; // EjsS Model.Variables.prism.ctarightrate
    cta = 2*pi-angle; // EjsS Model.Variables.prism.cta
    ctarate = pi; // EjsS Model.Variables.prism.ctarate
    ctafront = 2*pi-angle; // EjsS Model.Variables.prism.ctafront
    ctafrontrate = pi; // EjsS Model.Variables.prism.ctafrontrate
    ctaback = 2*pi+angle; // EjsS Model.Variables.prism.ctaback
    ctabackrate = -pi; // EjsS Model.Variables.prism.ctabackrate
  });

  _model.addToReset(function() {
  });

  if (_inputParameters) {
    _inputParameters = _model.parseInputParameters(_inputParameters);
    if (_inputParameters) _model.addToReset(function() { _model._readParameters(_inputParameters); });
  }

  _model.addToReset(function() {
    _privateOdesList=[];
    _ODEi_evolution1 = _ODE_evolution1();
    _privateOdesList.push(_ODEi_evolution1);
  });

  _model.addToReset(function() {
    _model.setAutoplay(false);
    _model.setPauseOnPageExit(true);
    _model.setFPS(20);
    _model.setStepsPerDisplay(1);
  });

  function OnOrientationChange() {  // > CustomCode.OnOrientationChange:1
  //if(typeof parent.device != 'undefined')  // > CustomCode.OnOrientationChange:2
  //  _view.mytext.setText(parent.device.platform)  // > CustomCode.OnOrientationChange:3
  //else  // > CustomCode.OnOrientationChange:4
  //  _view.mytext.setText("nada:");  // > CustomCode.OnOrientationChange:5
  // check platform for Apps  // > CustomCode.OnOrientationChange:6
  var iOSapp =  (typeof parent.device != 'undefined' && parent.device.platform == "iOS");  // > CustomCode.OnOrientationChange:7
  var Androidapp = (typeof parent.device != 'undefined' && parent.device.platform == "Android");  // > CustomCode.OnOrientationChange:8
  // check platform for web browsers  // > CustomCode.OnOrientationChange:9
  var iOS =/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;  // > CustomCode.OnOrientationChange:10
  var iPad =/iPad/.test(navigator.userAgent) && !window.MSStream;  // > CustomCode.OnOrientationChange:11
  var iPhone = /iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;  // > CustomCode.OnOrientationChange:12
  var Android= /Android|android/i.test(navigator.userAgent);  // > CustomCode.OnOrientationChange:13
  //_view.mytext.setText(_view.mytext.getText() + "-orient:" + window.orientation + "-" + iOSapp + "-" + Androidapp);  // > CustomCode.OnOrientationChange:14
  switch (window.orientation) {  // > CustomCode.OnOrientationChange:15
    case 0:  // > CustomCode.OnOrientationChange:16
    case 180:  // > CustomCode.OnOrientationChange:17
      this.screenOrientation = 'portrait';  // > CustomCode.OnOrientationChange:18
    //  if (iOSapp){ // does not seems to work  // > CustomCode.OnOrientationChange:19
        //   return Math.max(window.screen.width,window.screen.height)*0.9;  // > CustomCode.OnOrientationChange:20
     //   return window.screen.height*0.7;  //0.1 for app and 0.1 for nonfullscreenapp    // > CustomCode.OnOrientationChange:21
        // return window.screen.height;  // > CustomCode.OnOrientationChange:22
        //  return window.innerHeight;  // > CustomCode.OnOrientationChange:23
        // return document.documentElement.clientHeight;  // > CustomCode.OnOrientationChange:24
     // }  // > CustomCode.OnOrientationChange:25
        // > CustomCode.OnOrientationChange:26
     // else {  // > CustomCode.OnOrientationChange:27
        // return Math.max(window.innerWidth,window.innerHeight)*0.9;  // > CustomCode.OnOrientationChange:28
        return window.innerHeight*0.9;  // > CustomCode.OnOrientationChange:29
     // }  // > CustomCode.OnOrientationChange:30
      break;  // > CustomCode.OnOrientationChange:31
    case 90:  // > CustomCode.OnOrientationChange:32
    case -90:  // > CustomCode.OnOrientationChange:33
      this.screenOrientation = 'landscape';  // > CustomCode.OnOrientationChange:34
     // if (iOSapp){ // App  // > CustomCode.OnOrientationChange:35
     //   return window.screen.width*0.7;    // > CustomCode.OnOrientationChange:36
        // return window.screen.height;  // > CustomCode.OnOrientationChange:37
        //  return window.innerHeight;  // > CustomCode.OnOrientationChange:38
        //  return document.documentElement.clientHeight;  // > CustomCode.OnOrientationChange:39
     // }  // > CustomCode.OnOrientationChange:40
        // > CustomCode.OnOrientationChange:41
    //  else { // browser Android and PC  // > CustomCode.OnOrientationChange:42
        // return Math.min(window.innerWidth,window.innerHeight)*0.9;  // > CustomCode.OnOrientationChange:43
        // alert("browser Android and PC");  // > CustomCode.OnOrientationChange:44
        return window.innerHeight*0.9;  // > CustomCode.OnOrientationChange:45
    //  }  // > CustomCode.OnOrientationChange:46
      break;  // > CustomCode.OnOrientationChange:47
    default:  // > CustomCode.OnOrientationChange:48
      this.screenOrientation = 'unknown';  // > CustomCode.OnOrientationChange:49
      //       return (iPad)?""+(window.screen.width+window.screen.height)*0.4:((iPhone)?""+window.screen.width:_view._format(window.innerHeight*0.9,"0"));  // > CustomCode.OnOrientationChange:50
      return window.innerHeight*0.9;  // > CustomCode.OnOrientationChange:51
  }  // > CustomCode.OnOrientationChange:52
  }  // > CustomCode.OnOrientationChange:53

  _model.addToInitialization(function() {
    if (!__pagesEnabled["Init Page"]) return;
    selected[0]="net 1 unfold";  // > Initialization.Init Page:1
  });

  _model.addToInitialization(function() {
    _initializeSolvers();
  });

  _model.addToEvolution(function() {
    if (!__pagesEnabled["Evol Page 2"]) return;
    _ODEi_evolution1.step();
  });

  _model.addToFixedRelations(function() { _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); });

  _model.addToFixedRelations(function() { _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); });

  function _initializeSolvers() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].initializeSolver();
  }

  function _automaticResetSolvers() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].automaticResetSolver();
  }

  _model.resetSolvers = function() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].resetSolver();
  };

  _getODE = function (_odeName) {
    if (_odeName=="Evol Page 2") return _ODEi_evolution1;
    return null;
  }

  function _getEventSolver(_odeName) {
    var ode = _getODE(_odeName);
    if (ode===null) return null;
    return ode.getEventSolver();
  }

  function _setSolverClass(_odeName, _engine) {
    var ode = _getODE(_odeName);
    if (ode===null) return;
    if (!_engine.setODE) {
      var classname = _engine.toLowerCase();
      if      (classname.indexOf("boga")>=0)   _engine = EJSS_ODE_SOLVERS.bogackiShampine23;
      else if (classname.indexOf("cash")>=0)   _engine = EJSS_ODE_SOLVERS.cashKarp45;
      else if (classname.indexOf("dopri5")>=0) _engine = EJSS_ODE_SOLVERS.dopri5;
      else if (classname.indexOf("dopri8")>=0) _engine = EJSS_ODE_SOLVERS.dopri853;
      else if (classname.indexOf("richa")>=0)  _engine = EJSS_ODE_SOLVERS.eulerRichardson;
      else if (classname.indexOf("euler")>=0)  _engine = EJSS_ODE_SOLVERS.euler;
      else if (classname.indexOf("fehlberg87")>=0) _engine = EJSS_ODE_SOLVERS.fehlberg87;
      else if (classname.indexOf("fehlberg8")>=0)  _engine = EJSS_ODE_SOLVERS.fehlberg8;
      else if (classname.indexOf("radau")>=0)   _engine = EJSS_ODE_SOLVERS.radau5;
      else if (classname.indexOf("runge")>=0)  _engine = EJSS_ODE_SOLVERS.rungeKutta4;
      else if (classname.indexOf("rk4")>=0)    _engine = EJSS_ODE_SOLVERS.rungeKutta4;
      else if (classname.indexOf("verlet")>=0) _engine = EJSS_ODE_SOLVERS.velocityVerlet;
    }
    if (_engine) ode.setSolverClass(_engine);
  }

  function _ODE_evolution1() {
    var __odeSelf = {};
    var __eventSolver;
    var __solverClass = EJSS_ODE_SOLVERS.euler;
    var __state=[];
    var _ODE_evolution1_Event1;
    var _ODE_evolution1_Event2;
    var _ODE_evolution1_Event3;
    var _ODE_evolution1_Event4;
    var _ODE_evolution1_Event5;
    var _ODE_evolution1_Event6;
    var _ODE_evolution1_Event7;
    var _ODE_evolution1_Event8;
    var _ODE_evolution1_Event9;
    var _ODE_evolution1_Event10;
    var __ignoreErrors=false;
    var __mustInitialize=true;
    var __isEnabled=true;
    var __mustUserReinitialize=false;
    var __mustReinitialize=true;


    __odeSelf._getOdeVars = function (){ return["cta","ctafront","ctaback","ctaright","t"]};

    __odeSelf.setSolverClass = function(__aSolverClass) {
      __solverClass = __aSolverClass;
      __instantiateSolver();
    };

    function __instantiateSolver() {
      __state=[];
      __pushState();
      __eventSolver = EJSS_ODE_SOLVERS.interpolatorEventSolver(__solverClass(),__odeSelf);
      __mustInitialize = true;
    }

    __odeSelf.setEnabled = function(_enabled) { __isEnabled = _enabled; };

    __odeSelf.getIndependentVariableValue = function() { return __eventSolver.getIndependentVariableValue(); };

    __odeSelf.getInternalStepSize = function() { return __eventSolver.getInternalStepSize(); };

    __odeSelf.isAccelerationIndependentOfVelocity = function() { return false; };

    __odeSelf.initializeSolver = function() {
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); return; }
      __pushState();
      __eventSolver.initialize(dt);
      __eventSolver.setBestInterpolation(false);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.removeAllEvents();
      if (__pagesEnabled["1R"]) __eventSolver.addEvent(_ODE_evolution1_Event1());
      if (__pagesEnabled["1L"]) __eventSolver.addEvent(_ODE_evolution1_Event2());
      if (__pagesEnabled["1F"]) __eventSolver.addEvent(_ODE_evolution1_Event3());
      if (__pagesEnabled["1B"]) __eventSolver.addEvent(_ODE_evolution1_Event4());
      if (__pagesEnabled["1RF"]) __eventSolver.addEvent(_ODE_evolution1_Event5());
      if (__pagesEnabled["1LF"]) __eventSolver.addEvent(_ODE_evolution1_Event6());
      if (__pagesEnabled["1FF"]) __eventSolver.addEvent(_ODE_evolution1_Event7());
      if (__pagesEnabled["1BF"]) __eventSolver.addEvent(_ODE_evolution1_Event8());
      if (__pagesEnabled["2F"]) __eventSolver.addEvent(_ODE_evolution1_Event9());
      if (__pagesEnabled["2B"]) __eventSolver.addEvent(_ODE_evolution1_Event10());
      for(k in userEvents1){__eventSolver.addEvent(userEvents1[k]);}
      __eventSolver.setEstimateFirstStep(false);
      __eventSolver.setEnableExceptions(false);
      __eventSolver.setTolerances(0.00001,0.00001);
      __mustReinitialize = true;
      __mustInitialize = false;
    };

    function __pushState() {
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        if (__state[__cIn]!=cta) __mustReinitialize = true;
        __state[__cIn++] = cta;
        if (__state[__cIn]!=ctafront) __mustReinitialize = true;
        __state[__cIn++] = ctafront;
        if (__state[__cIn]!=ctaback) __mustReinitialize = true;
        __state[__cIn++] = ctaback;
        if (__state[__cIn]!=ctaright) __mustReinitialize = true;
        __state[__cIn++] = ctaright;
        if (__state[__cIn]!=t) __mustReinitialize = true;
        __state[__cIn++] = t;
    }

    function __arraysChanged () {
      return false;
    }

    __odeSelf.getEventSolver = function() {
      return __eventSolver;
    };

    __odeSelf.resetSolver = function() {
      __mustUserReinitialize = true;
    };

    __odeSelf.automaticResetSolver = function() {
      __mustReinitialize = true;
    };

    function __errorAction () {
      if (__ignoreErrors) return;
      console.log (__eventSolver.getErrorMessage());
      _pause();
      // Make sure the solver is reinitialized;
      __mustReinitialize = true;
    }

    __odeSelf.step = function() { return __privateStep(false); };

    __odeSelf.solverStep = function() { return __privateStep(true); };

    function __privateStep(__takeMaximumStep) {
      if (!__isEnabled) return 0;
      if (dt===0) return 0;
      if (__mustInitialize) __odeSelf.initializeSolver();
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); }
      __eventSolver.setStepSize(dt);
      __eventSolver.setInternalStepSize(dt);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.setTolerances(0.00001,0.00001);
      __pushState();
      if (__mustUserReinitialize) { 
        __eventSolver.userReinitialize();
        __mustUserReinitialize = false;
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      else if (__mustReinitialize) { 
        __eventSolver.reinitialize();
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      var __stepTaken = __takeMaximumStep ? __eventSolver.maxStep() : __eventSolver.step();
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        cta = __state[__cOut++];
        ctafront = __state[__cOut++];
        ctaback = __state[__cOut++];
        ctaright = __state[__cOut++];
        t = __state[__cOut++];
      // Check for error
      if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      return __stepTaken;
    }

    __odeSelf.getState = function() { return __state; };

    __odeSelf.getRate = function(_aState,_aRate) {
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var cta = _aState[__cOut++];
        var ctafront = _aState[__cOut++];
        var ctaback = _aState[__cOut++];
        var ctaright = _aState[__cOut++];
        var t = _aState[__cOut++];
      // Compute the rate
        var __cRate=0;
        _aRate[__cRate++] = ctarate; // Rate for ODE: Evol Page 2:cta
        _aRate[__cRate++] = ctafrontrate; // Rate for ODE: Evol Page 2:ctafront
        _aRate[__cRate++] = ctabackrate; // Rate for ODE: Evol Page 2:ctaback
        _aRate[__cRate++] = ctarightrate; // Rate for ODE: Evol Page 2:ctaright
        _aRate[__cRate++] = 1; // independent variable
        return _aRate;
    }; //end of getRate

    __odeSelf._addEvent = function(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent){
    var User_Event = function (userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent) {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return eventType; };

      _eventSelf.getRootFindingMethod = function() { return eventMethod; };

      _eventSelf.getMaxIterations = function() { return maxIter; };

      _eventSelf.getTolerance = function() { return eventTolerance; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var cta = _aState[__cOut++];
        var ctafront = _aState[__cOut++];
        var ctaback = _aState[__cOut++];
        var ctaright = _aState[__cOut++];
        var t = _aState[__cOut++];
      return eval(userCondition);
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        cta = __state[__cOut++];
        ctafront = __state[__cOut++];
        ctaback = __state[__cOut++];
        ctaright = __state[__cOut++];
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = cta;
        __state[__cIn++] = ctafront;
        __state[__cIn++] = ctaback;
        __state[__cIn++] = ctaright;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        if (undefined != functions) eval(functions.toString());
        eval(userAction);
        return endAtEvent;
      }

      return _eventSelf;
    }; // End of event

   userEvents1.push(User_Event(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent));
   }

    _ODE_evolution1_Event1 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var cta = _aState[__cOut++];
        var ctafront = _aState[__cOut++];
        var ctaback = _aState[__cOut++];
        var ctaright = _aState[__cOut++];
        var t = _aState[__cOut++];
        if ( _view.comboBox.getProperty("SelectedOptions")=="net 1 unfold"){  // > Event zero-condition for page Evol Page 2:1
          return ctaright -3*pi/2;  // > Event zero-condition for page Evol Page 2:2
        }  // > Event zero-condition for page Evol Page 2:3
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        cta = __state[__cOut++];
        ctafront = __state[__cOut++];
        ctaback = __state[__cOut++];
        ctaright = __state[__cOut++];
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = cta;
        __state[__cIn++] = ctafront;
        __state[__cIn++] = ctaback;
        __state[__cIn++] = ctaright;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        ctarightrate=0;  // > Event action for page Evol Page 2:1
        return true;
      }

      return _eventSelf;
    }; // End of event

    _ODE_evolution1_Event2 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var cta = _aState[__cOut++];
        var ctafront = _aState[__cOut++];
        var ctaback = _aState[__cOut++];
        var ctaright = _aState[__cOut++];
        var t = _aState[__cOut++];
        if ( _view.comboBox.getProperty("SelectedOptions")=="net 1 unfold"){  // > Event zero-condition for page Evol Page 2:1
          return cta -5*pi/2;  // > Event zero-condition for page Evol Page 2:2
        }  // > Event zero-condition for page Evol Page 2:3
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        cta = __state[__cOut++];
        ctafront = __state[__cOut++];
        ctaback = __state[__cOut++];
        ctaright = __state[__cOut++];
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = cta;
        __state[__cIn++] = ctafront;
        __state[__cIn++] = ctaback;
        __state[__cIn++] = ctaright;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        ctarate=0;  // > Event action for page Evol Page 2:1
        return true;
      }

      return _eventSelf;
    }; // End of event

    _ODE_evolution1_Event3 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var cta = _aState[__cOut++];
        var ctafront = _aState[__cOut++];
        var ctaback = _aState[__cOut++];
        var ctaright = _aState[__cOut++];
        var t = _aState[__cOut++];
        if ( _view.comboBox.getProperty("SelectedOptions")=="net 1 unfold"){  // > Event zero-condition for page Evol Page 2:1
          return ctafront -5*pi/2;  // > Event zero-condition for page Evol Page 2:2
        }  // > Event zero-condition for page Evol Page 2:3
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        cta = __state[__cOut++];
        ctafront = __state[__cOut++];
        ctaback = __state[__cOut++];
        ctaright = __state[__cOut++];
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = cta;
        __state[__cIn++] = ctafront;
        __state[__cIn++] = ctaback;
        __state[__cIn++] = ctaright;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        ctafrontrate=0;  // > Event action for page Evol Page 2:1
        return true;
      }

      return _eventSelf;
    }; // End of event

    _ODE_evolution1_Event4 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var cta = _aState[__cOut++];
        var ctafront = _aState[__cOut++];
        var ctaback = _aState[__cOut++];
        var ctaright = _aState[__cOut++];
        var t = _aState[__cOut++];
        if ( _view.comboBox.getProperty("SelectedOptions")=="net 1 unfold"){  // > Event zero-condition for page Evol Page 2:1
          return ctaback -3*pi/2;  // > Event zero-condition for page Evol Page 2:2
        }  // > Event zero-condition for page Evol Page 2:3
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        cta = __state[__cOut++];
        ctafront = __state[__cOut++];
        ctaback = __state[__cOut++];
        ctaright = __state[__cOut++];
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = cta;
        __state[__cIn++] = ctafront;
        __state[__cIn++] = ctaback;
        __state[__cIn++] = ctaright;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        ctabackrate=0;  // > Event action for page Evol Page 2:1
        _pause();  // > Event action for page Evol Page 2:2
        ctarate=-pi;  // > Event action for page Evol Page 2:3
        ctafrontrate=-pi;    // > Event action for page Evol Page 2:4
        ctabackrate=pi;  // > Event action for page Evol Page 2:5
        ctarightrate=pi;  // > Event action for page Evol Page 2:6
        return true;
      }

      return _eventSelf;
    }; // End of event

    _ODE_evolution1_Event5 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var cta = _aState[__cOut++];
        var ctafront = _aState[__cOut++];
        var ctaback = _aState[__cOut++];
        var ctaright = _aState[__cOut++];
        var t = _aState[__cOut++];
        if ( _view.comboBox.getProperty("SelectedOptions")=="net 1 unfold"){  // > Event zero-condition for page Evol Page 2:1
          return ctaright -(2*pi+angle+error);  // > Event zero-condition for page Evol Page 2:2
        }  // > Event zero-condition for page Evol Page 2:3
        //ok grey  // > Event zero-condition for page Evol Page 2:4
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        cta = __state[__cOut++];
        ctafront = __state[__cOut++];
        ctaback = __state[__cOut++];
        ctaright = __state[__cOut++];
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = cta;
        __state[__cIn++] = ctafront;
        __state[__cIn++] = ctaback;
        __state[__cIn++] = ctaright;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        ctarightrate=0;  // > Event action for page Evol Page 2:1
        return true;
      }

      return _eventSelf;
    }; // End of event

    _ODE_evolution1_Event6 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var cta = _aState[__cOut++];
        var ctafront = _aState[__cOut++];
        var ctaback = _aState[__cOut++];
        var ctaright = _aState[__cOut++];
        var t = _aState[__cOut++];
        if ( _view.comboBox.getProperty("SelectedOptions")=="net 1 unfold"){  // > Event zero-condition for page Evol Page 2:1
          return cta -(2*pi-angle-error); //minus error  // > Event zero-condition for page Evol Page 2:2
        }  // > Event zero-condition for page Evol Page 2:3
        // left teal  // > Event zero-condition for page Evol Page 2:4
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        cta = __state[__cOut++];
        ctafront = __state[__cOut++];
        ctaback = __state[__cOut++];
        ctaright = __state[__cOut++];
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = cta;
        __state[__cIn++] = ctafront;
        __state[__cIn++] = ctaback;
        __state[__cIn++] = ctaright;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        ctarate=0;  // > Event action for page Evol Page 2:1
        return true;
      }

      return _eventSelf;
    }; // End of event

    _ODE_evolution1_Event7 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var cta = _aState[__cOut++];
        var ctafront = _aState[__cOut++];
        var ctaback = _aState[__cOut++];
        var ctaright = _aState[__cOut++];
        var t = _aState[__cOut++];
        if ( _view.comboBox.getProperty("SelectedOptions")=="net 1 unfold"){  // > Event zero-condition for page Evol Page 2:1
          return ctafront -(2*pi-angle-error); // minus for rotate to work  // > Event zero-condition for page Evol Page 2:2
        }  // > Event zero-condition for page Evol Page 2:3
        //ok  // > Event zero-condition for page Evol Page 2:4
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        cta = __state[__cOut++];
        ctafront = __state[__cOut++];
        ctaback = __state[__cOut++];
        ctaright = __state[__cOut++];
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = cta;
        __state[__cIn++] = ctafront;
        __state[__cIn++] = ctaback;
        __state[__cIn++] = ctaright;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        ctafrontrate=0;  // > Event action for page Evol Page 2:1
        return true;
      }

      return _eventSelf;
    }; // End of event

    _ODE_evolution1_Event8 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var cta = _aState[__cOut++];
        var ctafront = _aState[__cOut++];
        var ctaback = _aState[__cOut++];
        var ctaright = _aState[__cOut++];
        var t = _aState[__cOut++];
        if ( _view.comboBox.getProperty("SelectedOptions")=="net 1 unfold"){  // > Event zero-condition for page Evol Page 2:1
          return ctaback -(2*pi+angle);  // > Event zero-condition for page Evol Page 2:2
        }  // > Event zero-condition for page Evol Page 2:3
        //ok  // > Event zero-condition for page Evol Page 2:4
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        cta = __state[__cOut++];
        ctafront = __state[__cOut++];
        ctaback = __state[__cOut++];
        ctaright = __state[__cOut++];
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = cta;
        __state[__cIn++] = ctafront;
        __state[__cIn++] = ctaback;
        __state[__cIn++] = ctaright;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        ctabackrate=0;  // > Event action for page Evol Page 2:1
        _pause();  // > Event action for page Evol Page 2:2
        ctarate=+pi;  // > Event action for page Evol Page 2:3
        ctafrontrate=+pi;    // > Event action for page Evol Page 2:4
        ctabackrate=-pi;  // > Event action for page Evol Page 2:5
        ctarightrate=-pi;  // > Event action for page Evol Page 2:6
        return true;
      }

      return _eventSelf;
    }; // End of event

    _ODE_evolution1_Event9 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var cta = _aState[__cOut++];
        var ctafront = _aState[__cOut++];
        var ctaback = _aState[__cOut++];
        var ctaright = _aState[__cOut++];
        var t = _aState[__cOut++];
        if ( _view.comboBox.getProperty("SelectedOptions")=="net 2 unfold"){  // > Event zero-condition for page Evol Page 2:1
          return ctafront -5*pi/2;  // > Event zero-condition for page Evol Page 2:2
        }  // > Event zero-condition for page Evol Page 2:3
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        cta = __state[__cOut++];
        ctafront = __state[__cOut++];
        ctaback = __state[__cOut++];
        ctaright = __state[__cOut++];
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = cta;
        __state[__cIn++] = ctafront;
        __state[__cIn++] = ctaback;
        __state[__cIn++] = ctaright;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        ctafrontrate=0;  // > Event action for page Evol Page 2:1
        ctarightrate=-pi;  // > Event action for page Evol Page 2:2
        return true;
      }

      return _eventSelf;
    }; // End of event

    _ODE_evolution1_Event10 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var cta = _aState[__cOut++];
        var ctafront = _aState[__cOut++];
        var ctaback = _aState[__cOut++];
        var ctaright = _aState[__cOut++];
        var t = _aState[__cOut++];
        if ( _view.comboBox.getProperty("SelectedOptions")=="net 2 unfold"){  // > Event zero-condition for page Evol Page 2:1
          return ctaback -3*pi/2;  // > Event zero-condition for page Evol Page 2:2
        }  // > Event zero-condition for page Evol Page 2:3
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        cta = __state[__cOut++];
        ctafront = __state[__cOut++];
        ctaback = __state[__cOut++];
        ctaright = __state[__cOut++];
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = cta;
        __state[__cIn++] = ctafront;
        __state[__cIn++] = ctaback;
        __state[__cIn++] = ctaright;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        ctabackrate=0;  // > Event action for page Evol Page 2:1
        ctarate=pi;  // > Event action for page Evol Page 2:2
        return true;
      }

      return _eventSelf;
    }; // End of event

    __instantiateSolver();

    return __odeSelf;
  }

  function _historic_cta(__time) {
    var __index = 0;
    return _ODEi_evolution1.getEventSolver().getStateHistory().interpolate(__time,__index);
  }

  function _historic_ctafront(__time) {
    var __index = 0 + 1;
    return _ODEi_evolution1.getEventSolver().getStateHistory().interpolate(__time,__index);
  }

  function _historic_ctaback(__time) {
    var __index = 0 + 1 + 1;
    return _ODEi_evolution1.getEventSolver().getStateHistory().interpolate(__time,__index);
  }

  function _historic_ctaright(__time) {
    var __index = 0 + 1 + 1 + 1;
    return _ODEi_evolution1.getEventSolver().getStateHistory().interpolate(__time,__index);
  }

    _model._fontResized = function(iBase,iSize,iDelta) {
      _view._fontResized(iBase,iSize,iDelta);
  }; // end of _fontResized

  function _getViews() {
    var _viewsInfo = [];
    var _counter = 0;
    _viewsInfo[_counter++] = { name : "HtmlView Page", width : 800, height : 600 };
    return _viewsInfo;
  } // end of _getViews

  function _selectView(_viewNumber) {
    _view = null;
    _view = new netsofprismwee_View(_topFrame,_viewNumber,_libraryPath,_codebasePath);
    var _view_super_reset = _view._reset;
    _view._reset = function() {
      _view_super_reset();
      switch(_viewNumber) {
        case -10 : break; // make Lint happy
        default :
        case 0:
          _view.drawingPanel3D.linkProperty("MaximumZ",  function() { return zmax; }, function(_v) { zmax = _v; } ); // HtmlView Page linking property 'MaximumZ' for element 'drawingPanel3D'
          _view.drawingPanel3D.linkProperty("MaximumY",  function() { return ymax; }, function(_v) { ymax = _v; } ); // HtmlView Page linking property 'MaximumY' for element 'drawingPanel3D'
          _view.drawingPanel3D.linkProperty("MaximumX",  function() { return xmax; }, function(_v) { xmax = _v; } ); // HtmlView Page linking property 'MaximumX' for element 'drawingPanel3D'
          _view.drawingPanel3D.linkProperty("MinimumX",  function() { return xmin; }, function(_v) { xmin = _v; } ); // HtmlView Page linking property 'MinimumX' for element 'drawingPanel3D'
          _view.drawingPanel3D.linkProperty("MinimumY",  function() { return ymin; }, function(_v) { ymin = _v; } ); // HtmlView Page linking property 'MinimumY' for element 'drawingPanel3D'
          _view.drawingPanel3D.linkProperty("MinimumZ",  function() { return zmin; }, function(_v) { zmin = _v; } ); // HtmlView Page linking property 'MinimumZ' for element 'drawingPanel3D'
          _view.BaseFrontRightp2.linkProperty("X",  function() { return xsize/2; } ); // HtmlView Page linking property 'X' for element 'BaseFrontRightp2'
          _view.BaseFrontRightp2.linkProperty("Y",  function() { return ysize/2; } ); // HtmlView Page linking property 'Y' for element 'BaseFrontRightp2'
          _view.BaseFrontLeft2.linkProperty("X",  function() { return xsize/2; } ); // HtmlView Page linking property 'X' for element 'BaseFrontLeft2'
          _view.BaseFrontLeft2.linkProperty("Y",  function() { return -ysize/2; } ); // HtmlView Page linking property 'Y' for element 'BaseFrontLeft2'
          _view.BaseBackRightp22.linkProperty("X",  function() { return -xsize/2; } ); // HtmlView Page linking property 'X' for element 'BaseBackRightp22'
          _view.BaseBackRightp22.linkProperty("Y",  function() { return ysize/2; } ); // HtmlView Page linking property 'Y' for element 'BaseBackRightp22'
          _view.BaseBackLeft.linkProperty("X",  function() { return -xsize/2; } ); // HtmlView Page linking property 'X' for element 'BaseBackLeft'
          _view.BaseBackLeft.linkProperty("Y",  function() { return -ysize/2; } ); // HtmlView Page linking property 'Y' for element 'BaseBackLeft'
          _view.bottomzpurple.linkProperty("SizeX",  function() { return xsize; }, function(_v) { xsize = _v; } ); // HtmlView Page linking property 'SizeX' for element 'bottomzpurple'
          _view.bottomzpurple.linkProperty("SizeY",  function() { return ysize; }, function(_v) { ysize = _v; } ); // HtmlView Page linking property 'SizeY' for element 'bottomzpurple'
          _view.right.linkProperty("Transformation",  function() { return [[ctaright,ctaright,0,0]]; } ); // HtmlView Page linking property 'Transformation' for element 'right'
          _view.right.linkProperty("Y",  function() { return y/2; } ); // HtmlView Page linking property 'Y' for element 'right'
          _view.Topright.linkProperty("Z",  function() { return Math.abs(zsize/Math.cos(angle)); } ); // HtmlView Page linking property 'Z' for element 'Topright'
          _view.tetrahedron3D2.linkProperty("BottomRadius",  function() { return x; }, function(_v) { x = _v; } ); // HtmlView Page linking property 'BottomRadius' for element 'tetrahedron3D2'
          _view.tetrahedron3D2.linkProperty("SizeX",  function() { return xsize; }, function(_v) { xsize = _v; } ); // HtmlView Page linking property 'SizeX' for element 'tetrahedron3D2'
          _view.tetrahedron3D2.linkProperty("Z",  function() { return Math.abs(zsize/Math.cos(angle)/2); } ); // HtmlView Page linking property 'Z' for element 'tetrahedron3D2'
          _view.tetrahedron3D2.linkProperty("SizeZ",  function() { return zsize/Math.cos(angle); } ); // HtmlView Page linking property 'SizeZ' for element 'tetrahedron3D2'
          _view.plane3D.linkProperty("Transformation",  function() { return [[angle,angle,0,0]]; } ); // HtmlView Page linking property 'Transformation' for element 'plane3D'
          _view.plane3D.linkProperty("SizeX",  function() { return xsize; }, function(_v) { xsize = _v; } ); // HtmlView Page linking property 'SizeX' for element 'plane3D'
          _view.plane3D.linkProperty("X",  function() { return xpos; }, function(_v) { xpos = _v; } ); // HtmlView Page linking property 'X' for element 'plane3D'
          _view.plane3D.linkProperty("Y",  function() { return ypos; }, function(_v) { ypos = _v; } ); // HtmlView Page linking property 'Y' for element 'plane3D'
          _view.plane3D.linkProperty("Z",  function() { return zpos; }, function(_v) { zpos = _v; } ); // HtmlView Page linking property 'Z' for element 'plane3D'
          _view.plane3D.linkProperty("SizeZ",  function() { return zsize; }, function(_v) { zsize = _v; } ); // HtmlView Page linking property 'SizeZ' for element 'plane3D'
          _view.plane3D.linkProperty("SizeY",  function() { return ysize; }, function(_v) { ysize = _v; } ); // HtmlView Page linking property 'SizeY' for element 'plane3D'
          _view.left.linkProperty("Transformation",  function() { return [[cta,cta,0,0]]; } ); // HtmlView Page linking property 'Transformation' for element 'left'
          _view.left.linkProperty("Y",  function() { return -y/2; } ); // HtmlView Page linking property 'Y' for element 'left'
          _view.TopLeft.linkProperty("Z",  function() { return Math.abs(zsize/Math.cos(angle)); } ); // HtmlView Page linking property 'Z' for element 'TopLeft'
          _view.tetrahedron3D22.linkProperty("BottomRadius",  function() { return x; }, function(_v) { x = _v; } ); // HtmlView Page linking property 'BottomRadius' for element 'tetrahedron3D22'
          _view.tetrahedron3D22.linkProperty("SizeX",  function() { return xsize; }, function(_v) { xsize = _v; } ); // HtmlView Page linking property 'SizeX' for element 'tetrahedron3D22'
          _view.tetrahedron3D22.linkProperty("Z",  function() { return Math.abs(zsize/Math.cos(angle)/2); } ); // HtmlView Page linking property 'Z' for element 'tetrahedron3D22'
          _view.tetrahedron3D22.linkProperty("SizeZ",  function() { return zsize/Math.cos(angle); } ); // HtmlView Page linking property 'SizeZ' for element 'tetrahedron3D22'
          _view.front.linkProperty("Transformation",  function() { return [[ctafront,0,ctafront,0]]; } ); // HtmlView Page linking property 'Transformation' for element 'front'
          _view.front.linkProperty("X",  function() { return x/2; } ); // HtmlView Page linking property 'X' for element 'front'
          _view.TopLeft2.linkProperty("Z",  function() { return Math.abs(zsize/Math.cos(angle)); } ); // HtmlView Page linking property 'Z' for element 'TopLeft2'
          _view.tetrahedron3D222.linkProperty("BottomRadius",  function() { return x; }, function(_v) { x = _v; } ); // HtmlView Page linking property 'BottomRadius' for element 'tetrahedron3D222'
          _view.tetrahedron3D222.linkProperty("Z",  function() { return Math.abs(zsize/Math.cos(angle)/2); } ); // HtmlView Page linking property 'Z' for element 'tetrahedron3D222'
          _view.tetrahedron3D222.linkProperty("SizeZ",  function() { return zsize/Math.cos(angle); } ); // HtmlView Page linking property 'SizeZ' for element 'tetrahedron3D222'
          _view.tetrahedron3D222.linkProperty("SizeY",  function() { return ysize; }, function(_v) { ysize = _v; } ); // HtmlView Page linking property 'SizeY' for element 'tetrahedron3D222'
          _view.back.linkProperty("Transformation",  function() { return [[ctaback,0,ctaback,0]]; } ); // HtmlView Page linking property 'Transformation' for element 'back'
          _view.back.linkProperty("X",  function() { return -x/2; } ); // HtmlView Page linking property 'X' for element 'back'
          _view.tetrahedron3D2222.linkProperty("BottomRadius",  function() { return x; }, function(_v) { x = _v; } ); // HtmlView Page linking property 'BottomRadius' for element 'tetrahedron3D2222'
          _view.tetrahedron3D2222.linkProperty("Z",  function() { return Math.abs(zsize/Math.cos(angle)/2); } ); // HtmlView Page linking property 'Z' for element 'tetrahedron3D2222'
          _view.tetrahedron3D2222.linkProperty("SizeZ",  function() { return zsize/Math.cos(angle); } ); // HtmlView Page linking property 'SizeZ' for element 'tetrahedron3D2222'
          _view.tetrahedron3D2222.linkProperty("SizeY",  function() { return ysize; }, function(_v) { ysize = _v; } ); // HtmlView Page linking property 'SizeY' for element 'tetrahedron3D2222'
          _view.TopLeft3.linkProperty("Z",  function() { return Math.abs(zsize/Math.cos(angle)); } ); // HtmlView Page linking property 'Z' for element 'TopLeft3'
          _view.debug.linkProperty("Transformation",  function() { return [[ctaright,ctaright,0,0]]; } ); // HtmlView Page linking property 'Transformation' for element 'debug'
          _view.debug.linkProperty("X",  function() { return xgroup; }, function(_v) { xgroup = _v; } ); // HtmlView Page linking property 'X' for element 'debug'
          _view.debug.linkProperty("Y",  function() { return ygroup; }, function(_v) { ygroup = _v; } ); // HtmlView Page linking property 'Y' for element 'debug'
          _view.debug.linkProperty("Z",  function() { return zgroup; }, function(_v) { zgroup = _v; } ); // HtmlView Page linking property 'Z' for element 'debug'
          _view.debug2.linkProperty("Transformation",  function() { return [[1.57,1.57,0,0]]; } ); // HtmlView Page linking property 'Transformation' for element 'debug2'
          _view.debug2.linkProperty("SizeX",  function() { return xsize; }, function(_v) { xsize = _v; } ); // HtmlView Page linking property 'SizeX' for element 'debug2'
          _view.debug2.linkProperty("X",  function() { return xpos; }, function(_v) { xpos = _v; } ); // HtmlView Page linking property 'X' for element 'debug2'
          _view.debug2.linkProperty("Y",  function() { return ypos; }, function(_v) { ypos = _v; } ); // HtmlView Page linking property 'Y' for element 'debug2'
          _view.debug2.linkProperty("Z",  function() { return zpos; }, function(_v) { zpos = _v; } ); // HtmlView Page linking property 'Z' for element 'debug2'
          _view.debug2.linkProperty("SizeY",  function() { return ysize; }, function(_v) { ysize = _v; } ); // HtmlView Page linking property 'SizeY' for element 'debug2'
          _view.tetrahedron3D.linkProperty("BottomRadius",  function() { return r; }, function(_v) { r = _v; } ); // HtmlView Page linking property 'BottomRadius' for element 'tetrahedron3D'
          _view.tetrahedron3D.linkProperty("Transformation",  function() { return [[pi/4,0,0,pi/4]]; } ); // HtmlView Page linking property 'Transformation' for element 'tetrahedron3D'
          _view.tetrahedron3D.linkProperty("SizeX",  function() { return xsize; }, function(_v) { xsize = _v; } ); // HtmlView Page linking property 'SizeX' for element 'tetrahedron3D'
          _view.tetrahedron3D.linkProperty("Z",  function() { return z/2; } ); // HtmlView Page linking property 'Z' for element 'tetrahedron3D'
          _view.tetrahedron3D.linkProperty("SizeZ",  function() { return zsize; }, function(_v) { zsize = _v; } ); // HtmlView Page linking property 'SizeZ' for element 'tetrahedron3D'
          _view.tetrahedron3D.linkProperty("SizeY",  function() { return ysize; }, function(_v) { ysize = _v; } ); // HtmlView Page linking property 'SizeY' for element 'tetrahedron3D'
          _view.net2.linkProperty("Visibility",  function() { return _view.comboBox.getProperty("SelectedOptions")=="net 2 unfold"; } ); // HtmlView Page linking property 'Visibility' for element 'net2'
          _view.BaseFrontLeft22.linkProperty("X",  function() { return xsize/2; } ); // HtmlView Page linking property 'X' for element 'BaseFrontLeft22'
          _view.BaseFrontLeft22.linkProperty("Y",  function() { return -ysize/2; } ); // HtmlView Page linking property 'Y' for element 'BaseFrontLeft22'
          _view.BaseFrontRightp22.linkProperty("X",  function() { return xsize/2; } ); // HtmlView Page linking property 'X' for element 'BaseFrontRightp22'
          _view.BaseFrontRightp22.linkProperty("Y",  function() { return ysize/2; } ); // HtmlView Page linking property 'Y' for element 'BaseFrontRightp22'
          _view.BaseBackLeft2.linkProperty("X",  function() { return -xsize/2; } ); // HtmlView Page linking property 'X' for element 'BaseBackLeft2'
          _view.BaseBackLeft2.linkProperty("Y",  function() { return -ysize/2; } ); // HtmlView Page linking property 'Y' for element 'BaseBackLeft2'
          _view.BaseBackRightp222.linkProperty("X",  function() { return -xsize/2; } ); // HtmlView Page linking property 'X' for element 'BaseBackRightp222'
          _view.BaseBackRightp222.linkProperty("Y",  function() { return ysize/2; } ); // HtmlView Page linking property 'Y' for element 'BaseBackRightp222'
          _view.bottomzpurple2.linkProperty("SizeX",  function() { return xsize; }, function(_v) { xsize = _v; } ); // HtmlView Page linking property 'SizeX' for element 'bottomzpurple2'
          _view.bottomzpurple2.linkProperty("SizeY",  function() { return ysize; }, function(_v) { ysize = _v; } ); // HtmlView Page linking property 'SizeY' for element 'bottomzpurple2'
          _view.front2.linkProperty("Transformation",  function() { return [[ctafront,0,ctafront,0]]; } ); // HtmlView Page linking property 'Transformation' for element 'front2'
          _view.front2.linkProperty("X",  function() { return x/2; } ); // HtmlView Page linking property 'X' for element 'front2'
          _view.Topright2.linkProperty("Z",  function() { return Math.abs(zsize/Math.cos(angle)); } ); // HtmlView Page linking property 'Z' for element 'Topright2'
          _view.tetrahedron3D2223.linkProperty("BottomRadius",  function() { return x; }, function(_v) { x = _v; } ); // HtmlView Page linking property 'BottomRadius' for element 'tetrahedron3D2223'
          _view.tetrahedron3D2223.linkProperty("Z",  function() { return Math.abs(zsize/Math.cos(angle)/2); } ); // HtmlView Page linking property 'Z' for element 'tetrahedron3D2223'
          _view.tetrahedron3D2223.linkProperty("SizeZ",  function() { return zsize/Math.cos(angle); } ); // HtmlView Page linking property 'SizeZ' for element 'tetrahedron3D2223'
          _view.tetrahedron3D2223.linkProperty("SizeY",  function() { return ysize; }, function(_v) { ysize = _v; } ); // HtmlView Page linking property 'SizeY' for element 'tetrahedron3D2223'
          _view.right2.linkProperty("Transformation",  function() { return [[ctaright-angle,0,0,ctaright-angle]]; } ); // HtmlView Page linking property 'Transformation' for element 'right2'
          _view.right2.linkProperty("X",  function() { return xgroup; }, function(_v) { xgroup = _v; } ); // HtmlView Page linking property 'X' for element 'right2'
          _view.right2.linkProperty("Y",  function() { return ygroup; }, function(_v) { ygroup = _v; } ); // HtmlView Page linking property 'Y' for element 'right2'
          _view.right2.linkProperty("Z",  function() { return zgroup; }, function(_v) { zgroup = _v; } ); // HtmlView Page linking property 'Z' for element 'right2'
          _view.rotatepoint.linkProperty("X",  function() { return xpos; }, function(_v) { xpos = _v; } ); // HtmlView Page linking property 'X' for element 'rotatepoint'
          _view.rotatepoint.linkProperty("Y",  function() { return ypos; }, function(_v) { ypos = _v; } ); // HtmlView Page linking property 'Y' for element 'rotatepoint'
          _view.rotatepoint.linkProperty("Z",  function() { return zpos; }, function(_v) { zpos = _v; } ); // HtmlView Page linking property 'Z' for element 'rotatepoint'
          _view.Topright3.linkProperty("Z",  function() { return Math.abs(zsize/Math.cos(angle)); } ); // HtmlView Page linking property 'Z' for element 'Topright3'
          _view.tetrahedron3D23.linkProperty("BottomRadius",  function() { return x; }, function(_v) { x = _v; } ); // HtmlView Page linking property 'BottomRadius' for element 'tetrahedron3D23'
          _view.tetrahedron3D23.linkProperty("Transformation",  function() { return [[angle,rotx,roty,rotz]]; } ); // HtmlView Page linking property 'Transformation' for element 'tetrahedron3D23'
          _view.tetrahedron3D23.linkProperty("SizeX",  function() { return xsize; }, function(_v) { xsize = _v; } ); // HtmlView Page linking property 'SizeX' for element 'tetrahedron3D23'
          _view.tetrahedron3D23.linkProperty("X",  function() { return -x/2; } ); // HtmlView Page linking property 'X' for element 'tetrahedron3D23'
          _view.tetrahedron3D23.linkProperty("Y",  function() { return y/4; } ); // HtmlView Page linking property 'Y' for element 'tetrahedron3D23'
          _view.tetrahedron3D23.linkProperty("Z",  function() { return Math.abs(zsize/Math.cos(angle)/2); } ); // HtmlView Page linking property 'Z' for element 'tetrahedron3D23'
          _view.tetrahedron3D23.linkProperty("SizeZ",  function() { return zsize/Math.cos(angle); } ); // HtmlView Page linking property 'SizeZ' for element 'tetrahedron3D23'
          _view.back2.linkProperty("Transformation",  function() { return [[ctaback,0,ctaback,0]]; } ); // HtmlView Page linking property 'Transformation' for element 'back2'
          _view.back2.linkProperty("X",  function() { return -x/2; } ); // HtmlView Page linking property 'X' for element 'back2'
          _view.Topright4.linkProperty("Z",  function() { return Math.abs(zsize/Math.cos(angle)); } ); // HtmlView Page linking property 'Z' for element 'Topright4'
          _view.tetrahedron3D22222.linkProperty("BottomRadius",  function() { return x; }, function(_v) { x = _v; } ); // HtmlView Page linking property 'BottomRadius' for element 'tetrahedron3D22222'
          _view.tetrahedron3D22222.linkProperty("Z",  function() { return Math.abs(zsize/Math.cos(angle)/2); } ); // HtmlView Page linking property 'Z' for element 'tetrahedron3D22222'
          _view.tetrahedron3D22222.linkProperty("SizeZ",  function() { return zsize/Math.cos(angle); } ); // HtmlView Page linking property 'SizeZ' for element 'tetrahedron3D22222'
          _view.tetrahedron3D22222.linkProperty("SizeY",  function() { return ysize; }, function(_v) { ysize = _v; } ); // HtmlView Page linking property 'SizeY' for element 'tetrahedron3D22222'
          _view.debugrotation.linkProperty("Transformation",  function() { return [[ctaback,ctaback,0,0]]; } ); // HtmlView Page linking property 'Transformation' for element 'debugrotation'
          _view.debugrotation.linkProperty("X",  function() { return xgroup; }, function(_v) { xgroup = _v; } ); // HtmlView Page linking property 'X' for element 'debugrotation'
          _view.debugrotation.linkProperty("Y",  function() { return ygroup; }, function(_v) { ygroup = _v; } ); // HtmlView Page linking property 'Y' for element 'debugrotation'
          _view.debugrotation.linkProperty("Z",  function() { return zgroup; }, function(_v) { zgroup = _v; } ); // HtmlView Page linking property 'Z' for element 'debugrotation'
          _view.debug3.linkProperty("BottomRadius",  function() { return x; }, function(_v) { x = _v; } ); // HtmlView Page linking property 'BottomRadius' for element 'debug3'
          _view.debug3.linkProperty("Z",  function() { return Math.abs(zsize/Math.cos(angle)/2); } ); // HtmlView Page linking property 'Z' for element 'debug3'
          _view.debug3.linkProperty("SizeZ",  function() { return zsize/Math.cos(angle); } ); // HtmlView Page linking property 'SizeZ' for element 'debug3'
          _view.debug3.linkProperty("SizeY",  function() { return ysize; }, function(_v) { ysize = _v; } ); // HtmlView Page linking property 'SizeY' for element 'debug3'
          _view.comboBox.linkProperty("Options",  function() { return ["net 1 unfold"]; } ); // HtmlView Page linking property 'Options' for element 'comboBox'
          _view.comboBox.setAction("OnChange", function(_data,_info) {
  var opts = _view.comboBox.getProperty("SelectedOptions");  // array of options
      var option = (opts.length > 0)? opts[0]:""; // selected option 
  if ( option=="user_defined"){
    }
    //"M₁=1,M₂=1,velocities=0"
    else if ( option=="net 1 unfold"){
  //cta=pi;
  //ctafront=pi;
  //ctabackrate=pi;
  //ctarightrate=pi;
  //ctatoprate=pi;
  ctarate=pi;
  ctafrontrate=pi;  
  ctabackrate=-pi;
  ctarightrate=-pi;
  //_play();
    
   
    }
   
    else if ( option=="net 2 unfold"){
  ctarate=0;
  ctafrontrate=pi;  
  ctabackrate=-pi;
  ctarightrate=0;
    
    
    }
   
   if(parent.cordova) { // check it is running in Android
  //var option1 = _view.comboBox.getProperty("SelectedOptions");
         parent.TTS.speak(option, function () {
              // success
          }, function (reason) {
              // error
          });
      }
      else {
    var msg = new SpeechSynthesisUtterance(option);
  window.speechSynthesis.speak(msg);
  }

}); // HtmlView Page setting action 'OnChange' for element 'comboBox'
          _view.comboBox.linkProperty("Disabled",  function() { return t>0; } ); // HtmlView Page linking property 'Disabled' for element 'comboBox'
          _view.playPauseButton2.setAction("OffClick", function(_data,_info) {
  text="paused";
  isPaused=true;
  _pause();

}); // HtmlView Page setting action 'OffClick' for element 'playPauseButton2'
          _view.playPauseButton2.linkProperty("State",  function() { return _isPaused; } ); // HtmlView Page linking property 'State' for element 'playPauseButton2'
          _view.playPauseButton2.setAction("OnClick", function(_data,_info) {
  _play();
  isPaused=false;
  text="playing";

}); // HtmlView Page setting action 'OnClick' for element 'playPauseButton2'
          _view.resetButton.setAction("OnClick", function(_data,_info) {
  _reset();

}); // HtmlView Page setting action 'OnClick' for element 'resetButton'
          _view.timeField.linkProperty("Value",  function() { return angle; }, function(_v) { angle = _v; } ); // HtmlView Page linking property 'Value' for element 'timeField'
          _view.field2.linkProperty("Value",  function() { return cta; }, function(_v) { cta = _v; } ); // HtmlView Page linking property 'Value' for element 'field2'
          _view.field.linkProperty("Value",  function() { return ctafront; }, function(_v) { ctafront = _v; } ); // HtmlView Page linking property 'Value' for element 'field'
          _view.field4.linkProperty("Value",  function() { return ctaback; }, function(_v) { ctaback = _v; } ); // HtmlView Page linking property 'Value' for element 'field4'
          _view.field42.linkProperty("Value",  function() { return ctaright; }, function(_v) { ctaright = _v; } ); // HtmlView Page linking property 'Value' for element 'field42'
          _view.field422.linkProperty("Value",  function() { return ctatop; }, function(_v) { ctatop = _v; } ); // HtmlView Page linking property 'Value' for element 'field422'
          _view.field22.linkProperty("Value",  function() { return ctarate; }, function(_v) { ctarate = _v; } ); // HtmlView Page linking property 'Value' for element 'field22'
          _view.field3.linkProperty("Value",  function() { return ctafrontrate; }, function(_v) { ctafrontrate = _v; } ); // HtmlView Page linking property 'Value' for element 'field3'
          _view.field43.linkProperty("Value",  function() { return ctabackrate; }, function(_v) { ctabackrate = _v; } ); // HtmlView Page linking property 'Value' for element 'field43'
          _view.field423.linkProperty("Value",  function() { return ctarightrate; }, function(_v) { ctarightrate = _v; } ); // HtmlView Page linking property 'Value' for element 'field423'
          _view.field4222.linkProperty("Value",  function() { return ctatoprate; }, function(_v) { ctatoprate = _v; } ); // HtmlView Page linking property 'Value' for element 'field4222'
          _view.slider2.linkProperty("Value",  function() { return xgroup; }, function(_v) { xgroup = _v; } ); // HtmlView Page linking property 'Value' for element 'slider2'
          _view.slider3.linkProperty("Value",  function() { return ygroup; }, function(_v) { ygroup = _v; } ); // HtmlView Page linking property 'Value' for element 'slider3'
          _view.slider.linkProperty("Value",  function() { return zgroup; }, function(_v) { zgroup = _v; } ); // HtmlView Page linking property 'Value' for element 'slider'
          _view.slider4.linkProperty("Value",  function() { return xpos; }, function(_v) { xpos = _v; } ); // HtmlView Page linking property 'Value' for element 'slider4'
          _view.slider42.linkProperty("Value",  function() { return ypos; }, function(_v) { ypos = _v; } ); // HtmlView Page linking property 'Value' for element 'slider42'
          _view.slider432.linkProperty("Value",  function() { return zpos; }, function(_v) { zpos = _v; } ); // HtmlView Page linking property 'Value' for element 'slider432'
          _view.slider433.linkProperty("Minimum",  function() { return -pi; } ); // HtmlView Page linking property 'Minimum' for element 'slider433'
          _view.slider433.linkProperty("Maximum",  function() { return pi; }, function(_v) { pi = _v; } ); // HtmlView Page linking property 'Maximum' for element 'slider433'
          _view.slider433.linkProperty("Value",  function() { return theta; }, function(_v) { theta = _v; } ); // HtmlView Page linking property 'Value' for element 'slider433'
          _view.slider43.linkProperty("Minimum",  function() { return -pi; } ); // HtmlView Page linking property 'Minimum' for element 'slider43'
          _view.slider43.linkProperty("Maximum",  function() { return pi; }, function(_v) { pi = _v; } ); // HtmlView Page linking property 'Maximum' for element 'slider43'
          _view.slider43.linkProperty("Value",  function() { return rotx; }, function(_v) { rotx = _v; } ); // HtmlView Page linking property 'Value' for element 'slider43'
          _view.slider4342.linkProperty("Minimum",  function() { return -pi; } ); // HtmlView Page linking property 'Minimum' for element 'slider4342'
          _view.slider4342.linkProperty("Maximum",  function() { return pi; }, function(_v) { pi = _v; } ); // HtmlView Page linking property 'Maximum' for element 'slider4342'
          _view.slider4342.linkProperty("Value",  function() { return roty; }, function(_v) { roty = _v; } ); // HtmlView Page linking property 'Value' for element 'slider4342'
          _view.slider434.linkProperty("Minimum",  function() { return -pi; } ); // HtmlView Page linking property 'Minimum' for element 'slider434'
          _view.slider434.linkProperty("Maximum",  function() { return pi; }, function(_v) { pi = _v; } ); // HtmlView Page linking property 'Maximum' for element 'slider434'
          _view.slider434.linkProperty("Value",  function() { return rotz; }, function(_v) { rotz = _v; } ); // HtmlView Page linking property 'Value' for element 'slider434'
          break;
      } // end of switch
    }; // end of new reset

    _model.setView(_view);
    _model.reset();
    _view._enableEPub();
  } // end of _selectView

  _model.setAutoplay(false);
  _model.setFPS(20);
  _model.setStepsPerDisplay(1);
  _selectView(-1); // this includes _model.reset()
  return _model;
}

function netsofprismwee_View (_topFrame,_viewNumber,_libraryPath,_codebasePath) {
  var _view;
  switch(_viewNumber) {
    case -10 : break; // make Lint happy
    default :
    case 0: _view = netsofprismwee_View_0 (_topFrame); break;
  } // end of switch

  if (_codebasePath) _view._setResourcePath(_codebasePath);

  if (_libraryPath) _view._setLibraryPath(_libraryPath);


  return _view;
} // end of main function

function netsofprismwee_View_0 (_topFrame) {
  var _view = EJSS_CORE.createView(_topFrame);

  _view._reset = function() {
    _view._clearAll();
    _view._addElement(EJSS_INTERFACE.panel,"panel", _view._topFrame) // EJsS HtmlView.HtmlView Page: declaration of element 'panel'
      .setProperty("Height","100%") // EJsS HtmlView.HtmlView Page: setting property 'Height' for element 'panel'
      .setProperty("Width","100%") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'panel'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"topPanel", _view.panel) // EJsS HtmlView.HtmlView Page: declaration of element 'topPanel'
      .setProperty("Height","100%") // EJsS HtmlView.HtmlView Page: setting property 'Height' for element 'topPanel'
      .setProperty("Width","100%") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'topPanel'
      ;

    _view._addElement(EJSS_DRAWING3D.drawingPanel,"drawingPanel3D", _view.topPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'drawingPanel3D'
      .setProperty("Height",window.innerHeight*0.9) // EJsS HtmlView.HtmlView Page: setting property 'Height' for element 'drawingPanel3D'
      .setProperty("Width","100%") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'drawingPanel3D'
      .setProperty("CameraY",1) // EJsS HtmlView.HtmlView Page: setting property 'CameraY' for element 'drawingPanel3D'
      .setProperty("CameraX",4) // EJsS HtmlView.HtmlView Page: setting property 'CameraX' for element 'drawingPanel3D'
      .setProperty("CameraAltitude",30) // EJsS HtmlView.HtmlView Page: setting property 'CameraAltitude' for element 'drawingPanel3D'
      .setProperty("Enabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Enabled' for element 'drawingPanel3D'
      .setProperty("Lights",1) // EJsS HtmlView.HtmlView Page: setting property 'Lights' for element 'drawingPanel3D'
      .setProperty("CameraAzimuth",-30) // EJsS HtmlView.HtmlView Page: setting property 'CameraAzimuth' for element 'drawingPanel3D'
      .setProperty("DecorationType","CENTERED_AXES") // EJsS HtmlView.HtmlView Page: setting property 'DecorationType' for element 'drawingPanel3D'
      ;

    _view._addElement(EJSS_DRAWING3D.group,"net1", _view.drawingPanel3D) // EJsS HtmlView.HtmlView Page: declaration of element 'net1'
      ;

    _view._addElement(EJSS_DRAWING3D.sphere,"BaseFrontRightp2", _view.net1) // EJsS HtmlView.HtmlView Page: declaration of element 'BaseFrontRightp2'
      .setProperty("Radius",0.05) // EJsS HtmlView.HtmlView Page: setting property 'Radius' for element 'BaseFrontRightp2'
      .setProperty("Z",0) // EJsS HtmlView.HtmlView Page: setting property 'Z' for element 'BaseFrontRightp2'
      ;

    _view._addElement(EJSS_DRAWING3D.sphere,"BaseFrontLeft2", _view.net1) // EJsS HtmlView.HtmlView Page: declaration of element 'BaseFrontLeft2'
      .setProperty("Radius",0.05) // EJsS HtmlView.HtmlView Page: setting property 'Radius' for element 'BaseFrontLeft2'
      .setProperty("Z",0) // EJsS HtmlView.HtmlView Page: setting property 'Z' for element 'BaseFrontLeft2'
      ;

    _view._addElement(EJSS_DRAWING3D.sphere,"BaseBackRightp22", _view.net1) // EJsS HtmlView.HtmlView Page: declaration of element 'BaseBackRightp22'
      .setProperty("Radius",0.05) // EJsS HtmlView.HtmlView Page: setting property 'Radius' for element 'BaseBackRightp22'
      .setProperty("Z",0) // EJsS HtmlView.HtmlView Page: setting property 'Z' for element 'BaseBackRightp22'
      ;

    _view._addElement(EJSS_DRAWING3D.sphere,"BaseBackLeft", _view.net1) // EJsS HtmlView.HtmlView Page: declaration of element 'BaseBackLeft'
      .setProperty("Radius",0.05) // EJsS HtmlView.HtmlView Page: setting property 'Radius' for element 'BaseBackLeft'
      .setProperty("Z",0) // EJsS HtmlView.HtmlView Page: setting property 'Z' for element 'BaseBackLeft'
      ;

    _view._addElement(EJSS_DRAWING3D.plane,"bottomzpurple", _view.net1) // EJsS HtmlView.HtmlView Page: declaration of element 'bottomzpurple'
      .setProperty("FillColor","Blue") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'bottomzpurple'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'bottomzpurple'
      .setProperty("LineColor","rgb(128,0,128,1)") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'bottomzpurple'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'bottomzpurple'
      .setProperty("Z",0) // EJsS HtmlView.HtmlView Page: setting property 'Z' for element 'bottomzpurple'
      .setProperty("SizeZ",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeZ' for element 'bottomzpurple'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'bottomzpurple'
      ;

    _view._addElement(EJSS_DRAWING3D.group,"right", _view.net1) // EJsS HtmlView.HtmlView Page: declaration of element 'right'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'right'
      .setProperty("Z",0) // EJsS HtmlView.HtmlView Page: setting property 'Z' for element 'right'
      ;

    _view._addElement(EJSS_DRAWING3D.sphere,"Topright", _view.right) // EJsS HtmlView.HtmlView Page: declaration of element 'Topright'
      .setProperty("Radius",0.05) // EJsS HtmlView.HtmlView Page: setting property 'Radius' for element 'Topright'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'Topright'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'Topright'
      ;

    _view._addElement(EJSS_DRAWING3D.tetrahedron,"tetrahedron3D2", _view.right) // EJsS HtmlView.HtmlView Page: declaration of element 'tetrahedron3D2'
      .setProperty("ClosedBottom",false) // EJsS HtmlView.HtmlView Page: setting property 'ClosedBottom' for element 'tetrahedron3D2'
      .setProperty("FillColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'tetrahedron3D2'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'tetrahedron3D2'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'tetrahedron3D2'
      .setProperty("SizeY",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'tetrahedron3D2'
      ;

    _view._addElement(EJSS_DRAWING3D.plane,"plane3D", _view.right) // EJsS HtmlView.HtmlView Page: declaration of element 'plane3D'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'plane3D'
      ;

    _view._addElement(EJSS_DRAWING3D.group,"left", _view.net1) // EJsS HtmlView.HtmlView Page: declaration of element 'left'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'left'
      .setProperty("Z",0) // EJsS HtmlView.HtmlView Page: setting property 'Z' for element 'left'
      ;

    _view._addElement(EJSS_DRAWING3D.sphere,"TopLeft", _view.left) // EJsS HtmlView.HtmlView Page: declaration of element 'TopLeft'
      .setProperty("Radius",0.05) // EJsS HtmlView.HtmlView Page: setting property 'Radius' for element 'TopLeft'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'TopLeft'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'TopLeft'
      ;

    _view._addElement(EJSS_DRAWING3D.tetrahedron,"tetrahedron3D22", _view.left) // EJsS HtmlView.HtmlView Page: declaration of element 'tetrahedron3D22'
      .setProperty("ClosedBottom",false) // EJsS HtmlView.HtmlView Page: setting property 'ClosedBottom' for element 'tetrahedron3D22'
      .setProperty("FillColor","Cyan") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'tetrahedron3D22'
      .setProperty("Transparency",0.1) // EJsS HtmlView.HtmlView Page: setting property 'Transparency' for element 'tetrahedron3D22'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'tetrahedron3D22'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'tetrahedron3D22'
      .setProperty("SizeY",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'tetrahedron3D22'
      ;

    _view._addElement(EJSS_DRAWING3D.group,"front", _view.net1) // EJsS HtmlView.HtmlView Page: declaration of element 'front'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'front'
      .setProperty("Z",0) // EJsS HtmlView.HtmlView Page: setting property 'Z' for element 'front'
      ;

    _view._addElement(EJSS_DRAWING3D.sphere,"TopLeft2", _view.front) // EJsS HtmlView.HtmlView Page: declaration of element 'TopLeft2'
      .setProperty("Radius",0.05) // EJsS HtmlView.HtmlView Page: setting property 'Radius' for element 'TopLeft2'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'TopLeft2'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'TopLeft2'
      ;

    _view._addElement(EJSS_DRAWING3D.tetrahedron,"tetrahedron3D222", _view.front) // EJsS HtmlView.HtmlView Page: declaration of element 'tetrahedron3D222'
      .setProperty("ClosedBottom",false) // EJsS HtmlView.HtmlView Page: setting property 'ClosedBottom' for element 'tetrahedron3D222'
      .setProperty("FillColor","Red") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'tetrahedron3D222'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'tetrahedron3D222'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'tetrahedron3D222'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'tetrahedron3D222'
      ;

    _view._addElement(EJSS_DRAWING3D.group,"back", _view.net1) // EJsS HtmlView.HtmlView Page: declaration of element 'back'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'back'
      .setProperty("Z",0) // EJsS HtmlView.HtmlView Page: setting property 'Z' for element 'back'
      ;

    _view._addElement(EJSS_DRAWING3D.tetrahedron,"tetrahedron3D2222", _view.back) // EJsS HtmlView.HtmlView Page: declaration of element 'tetrahedron3D2222'
      .setProperty("ClosedBottom",true) // EJsS HtmlView.HtmlView Page: setting property 'ClosedBottom' for element 'tetrahedron3D2222'
      .setProperty("Transparency",0) // EJsS HtmlView.HtmlView Page: setting property 'Transparency' for element 'tetrahedron3D2222'
      .setProperty("FillColor","Yellow") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'tetrahedron3D2222'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'tetrahedron3D2222'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'tetrahedron3D2222'
      .setProperty("LineColor","Red") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'tetrahedron3D2222'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'tetrahedron3D2222'
      .setProperty("DrawFill",true) // EJsS HtmlView.HtmlView Page: setting property 'DrawFill' for element 'tetrahedron3D2222'
      ;

    _view._addElement(EJSS_DRAWING3D.sphere,"TopLeft3", _view.back) // EJsS HtmlView.HtmlView Page: declaration of element 'TopLeft3'
      .setProperty("Radius",0.05) // EJsS HtmlView.HtmlView Page: setting property 'Radius' for element 'TopLeft3'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'TopLeft3'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'TopLeft3'
      ;

    _view._addElement(EJSS_DRAWING3D.group,"debug", _view.drawingPanel3D) // EJsS HtmlView.HtmlView Page: declaration of element 'debug'
      ;

    _view._addElement(EJSS_DRAWING3D.plane,"debug2", _view.debug) // EJsS HtmlView.HtmlView Page: declaration of element 'debug2'
      .setProperty("FillColor","Yellow") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'debug2'
      .setProperty("SizeZ",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeZ' for element 'debug2'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'debug2'
      ;

    _view._addElement(EJSS_DRAWING3D.tetrahedron,"tetrahedron3D", _view.drawingPanel3D) // EJsS HtmlView.HtmlView Page: declaration of element 'tetrahedron3D'
      .setProperty("FillColor","LightGray") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'tetrahedron3D'
      .setProperty("DrawFill",false) // EJsS HtmlView.HtmlView Page: setting property 'DrawFill' for element 'tetrahedron3D'
      .setProperty("ClosedBottom",false) // EJsS HtmlView.HtmlView Page: setting property 'ClosedBottom' for element 'tetrahedron3D'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'tetrahedron3D'
      .setProperty("LineColor","LightGray") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'tetrahedron3D'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'tetrahedron3D'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'tetrahedron3D'
      ;

    _view._addElement(EJSS_DRAWING3D.group,"net2", _view.drawingPanel3D) // EJsS HtmlView.HtmlView Page: declaration of element 'net2'
      ;

    _view._addElement(EJSS_DRAWING3D.sphere,"BaseFrontLeft22", _view.net2) // EJsS HtmlView.HtmlView Page: declaration of element 'BaseFrontLeft22'
      .setProperty("Radius",0.05) // EJsS HtmlView.HtmlView Page: setting property 'Radius' for element 'BaseFrontLeft22'
      .setProperty("Z",0) // EJsS HtmlView.HtmlView Page: setting property 'Z' for element 'BaseFrontLeft22'
      ;

    _view._addElement(EJSS_DRAWING3D.sphere,"BaseFrontRightp22", _view.net2) // EJsS HtmlView.HtmlView Page: declaration of element 'BaseFrontRightp22'
      .setProperty("Radius",0.05) // EJsS HtmlView.HtmlView Page: setting property 'Radius' for element 'BaseFrontRightp22'
      .setProperty("Z",0) // EJsS HtmlView.HtmlView Page: setting property 'Z' for element 'BaseFrontRightp22'
      ;

    _view._addElement(EJSS_DRAWING3D.sphere,"BaseBackLeft2", _view.net2) // EJsS HtmlView.HtmlView Page: declaration of element 'BaseBackLeft2'
      .setProperty("Radius",0.05) // EJsS HtmlView.HtmlView Page: setting property 'Radius' for element 'BaseBackLeft2'
      .setProperty("Z",0) // EJsS HtmlView.HtmlView Page: setting property 'Z' for element 'BaseBackLeft2'
      ;

    _view._addElement(EJSS_DRAWING3D.sphere,"BaseBackRightp222", _view.net2) // EJsS HtmlView.HtmlView Page: declaration of element 'BaseBackRightp222'
      .setProperty("Radius",0.05) // EJsS HtmlView.HtmlView Page: setting property 'Radius' for element 'BaseBackRightp222'
      .setProperty("Z",0) // EJsS HtmlView.HtmlView Page: setting property 'Z' for element 'BaseBackRightp222'
      ;

    _view._addElement(EJSS_DRAWING3D.plane,"bottomzpurple2", _view.net2) // EJsS HtmlView.HtmlView Page: declaration of element 'bottomzpurple2'
      .setProperty("FillColor","rgb(128,0,128,1)") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'bottomzpurple2'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'bottomzpurple2'
      .setProperty("LineColor","rgb(128,0,128,1)") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'bottomzpurple2'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'bottomzpurple2'
      .setProperty("Z",0) // EJsS HtmlView.HtmlView Page: setting property 'Z' for element 'bottomzpurple2'
      .setProperty("SizeZ",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeZ' for element 'bottomzpurple2'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'bottomzpurple2'
      ;

    _view._addElement(EJSS_DRAWING3D.group,"front2", _view.net2) // EJsS HtmlView.HtmlView Page: declaration of element 'front2'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'front2'
      .setProperty("Z",0) // EJsS HtmlView.HtmlView Page: setting property 'Z' for element 'front2'
      ;

    _view._addElement(EJSS_DRAWING3D.sphere,"Topright2", _view.front2) // EJsS HtmlView.HtmlView Page: declaration of element 'Topright2'
      .setProperty("Radius",0.05) // EJsS HtmlView.HtmlView Page: setting property 'Radius' for element 'Topright2'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'Topright2'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'Topright2'
      ;

    _view._addElement(EJSS_DRAWING3D.tetrahedron,"tetrahedron3D2223", _view.front2) // EJsS HtmlView.HtmlView Page: declaration of element 'tetrahedron3D2223'
      .setProperty("ClosedBottom",false) // EJsS HtmlView.HtmlView Page: setting property 'ClosedBottom' for element 'tetrahedron3D2223'
      .setProperty("FillColor","Orange") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'tetrahedron3D2223'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'tetrahedron3D2223'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'tetrahedron3D2223'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'tetrahedron3D2223'
      ;

    _view._addElement(EJSS_DRAWING3D.group,"right2", _view.front2) // EJsS HtmlView.HtmlView Page: declaration of element 'right2'
      ;

    _view._addElement(EJSS_DRAWING3D.sphere,"rotatepoint", _view.right2) // EJsS HtmlView.HtmlView Page: declaration of element 'rotatepoint'
      .setProperty("Radius",0.05) // EJsS HtmlView.HtmlView Page: setting property 'Radius' for element 'rotatepoint'
      .setProperty("FillColor","Yellow") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'rotatepoint'
      .setProperty("LineColor","Yellow") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'rotatepoint'
      ;

    _view._addElement(EJSS_DRAWING3D.sphere,"centre", _view.right2) // EJsS HtmlView.HtmlView Page: declaration of element 'centre'
      .setProperty("Radius",0.05) // EJsS HtmlView.HtmlView Page: setting property 'Radius' for element 'centre'
      .setProperty("FillColor","Yellow") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'centre'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'centre'
      .setProperty("LineColor","Yellow") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'centre'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'centre'
      ;

    _view._addElement(EJSS_DRAWING3D.sphere,"Topright3", _view.right2) // EJsS HtmlView.HtmlView Page: declaration of element 'Topright3'
      .setProperty("Radius",0.05) // EJsS HtmlView.HtmlView Page: setting property 'Radius' for element 'Topright3'
      .setProperty("FillColor","Red") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'Topright3'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'Topright3'
      .setProperty("LineColor","Red") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'Topright3'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'Topright3'
      ;

    _view._addElement(EJSS_DRAWING3D.tetrahedron,"tetrahedron3D23", _view.right2) // EJsS HtmlView.HtmlView Page: declaration of element 'tetrahedron3D23'
      .setProperty("ClosedBottom",false) // EJsS HtmlView.HtmlView Page: setting property 'ClosedBottom' for element 'tetrahedron3D23'
      .setProperty("FillColor","LightGray") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'tetrahedron3D23'
      .setProperty("SizeY",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'tetrahedron3D23'
      ;

    _view._addElement(EJSS_DRAWING3D.group,"back2", _view.net2) // EJsS HtmlView.HtmlView Page: declaration of element 'back2'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'back2'
      .setProperty("Z",0) // EJsS HtmlView.HtmlView Page: setting property 'Z' for element 'back2'
      ;

    _view._addElement(EJSS_DRAWING3D.sphere,"Topright4", _view.back2) // EJsS HtmlView.HtmlView Page: declaration of element 'Topright4'
      .setProperty("Radius",0.05) // EJsS HtmlView.HtmlView Page: setting property 'Radius' for element 'Topright4'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'Topright4'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'Topright4'
      ;

    _view._addElement(EJSS_DRAWING3D.tetrahedron,"tetrahedron3D22222", _view.back2) // EJsS HtmlView.HtmlView Page: declaration of element 'tetrahedron3D22222'
      .setProperty("ClosedBottom",false) // EJsS HtmlView.HtmlView Page: setting property 'ClosedBottom' for element 'tetrahedron3D22222'
      .setProperty("FillColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'tetrahedron3D22222'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'tetrahedron3D22222'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'tetrahedron3D22222'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'tetrahedron3D22222'
      ;

    _view._addElement(EJSS_DRAWING3D.group,"debugrotation", _view.net2) // EJsS HtmlView.HtmlView Page: declaration of element 'debugrotation'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'debugrotation'
      ;

    _view._addElement(EJSS_DRAWING3D.tetrahedron,"debug3", _view.debugrotation) // EJsS HtmlView.HtmlView Page: declaration of element 'debug3'
      .setProperty("ClosedBottom",false) // EJsS HtmlView.HtmlView Page: setting property 'ClosedBottom' for element 'debug3'
      .setProperty("FillColor","Red") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'debug3'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'debug3'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'debug3'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'debug3'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controlPanel", _view.panel) // EJsS HtmlView.HtmlView Page: declaration of element 'controlPanel'
      .setProperty("Width","100%") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'controlPanel'
      .setProperty("CSS",{   "position" : "absolute",   "top" : "5%",    "margin-left":"0px",    "left":"0%" }) // EJsS HtmlView.HtmlView Page: setting property 'CSS' for element 'controlPanel'
      .setProperty("Display","inline-block") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'controlPanel'
      ;

    _view._addElement(EJSS_INTERFACE.comboBox,"comboBox", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'comboBox'
      .setProperty("Font","normal normal 3vw ") // EJsS HtmlView.HtmlView Page: setting property 'Font' for element 'comboBox'
      ;

    _view._addElement(EJSS_INTERFACE.twoStateButton,"playPauseButton2", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'playPauseButton2'
      .setProperty("Width","5vw") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'playPauseButton2'
      .setProperty("TextOn","▶") // EJsS HtmlView.HtmlView Page: setting property 'TextOn' for element 'playPauseButton2'
      .setProperty("Tooltip","Play/Pause") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'playPauseButton2'
      .setProperty("TextOff","❚❚") // EJsS HtmlView.HtmlView Page: setting property 'TextOff' for element 'playPauseButton2'
      .setProperty("Font","normal normal 3vw ") // EJsS HtmlView.HtmlView Page: setting property 'Font' for element 'playPauseButton2'
      ;

    _view._addElement(EJSS_INTERFACE.button,"resetButton", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'resetButton'
      .setProperty("Width","5vw") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'resetButton'
      .setProperty("Text","↻") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'resetButton'
      .setProperty("Font","normal normal 3vw ") // EJsS HtmlView.HtmlView Page: setting property 'Font' for element 'resetButton'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"timeLabel", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'timeLabel'
      .setProperty("Text","Time=") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'timeLabel'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'timeLabel'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"timeField", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'timeField'
      .setProperty("Width","50px") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'timeField'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'timeField'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'timeField'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'timeField'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"messagesLabel", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'messagesLabel'
      .setProperty("Text","s") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'messagesLabel'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'messagesLabel'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"panel2", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'panel2'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'panel2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"angel", _view.panel2) // EJsS HtmlView.HtmlView Page: declaration of element 'angel'
      .setProperty("Background","rgba(0,192,255,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'angel'
      .setProperty("Text","left ϑ = ") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'angel'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"field2", _view.panel2) // EJsS HtmlView.HtmlView Page: declaration of element 'field2'
      .setProperty("Width",30) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'field2'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'field2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"angel2", _view.panel2) // EJsS HtmlView.HtmlView Page: declaration of element 'angel2'
      .setProperty("Background","rgba(0,192,255,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'angel2'
      .setProperty("Text","front ") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'angel2'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"field", _view.panel2) // EJsS HtmlView.HtmlView Page: declaration of element 'field'
      .setProperty("Width",30) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'field'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'field'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"angel22", _view.panel2) // EJsS HtmlView.HtmlView Page: declaration of element 'angel22'
      .setProperty("Background","rgba(0,192,255,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'angel22'
      .setProperty("Text","backt ") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'angel22'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"field4", _view.panel2) // EJsS HtmlView.HtmlView Page: declaration of element 'field4'
      .setProperty("Width",30) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'field4'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'field4'
      .setProperty("Editable",true) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'field4'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"N4", _view.panel2) // EJsS HtmlView.HtmlView Page: declaration of element 'N4'
      .setProperty("Background","Green") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'N4'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'N4'
      .setProperty("Text","right") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'N4'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"field42", _view.panel2) // EJsS HtmlView.HtmlView Page: declaration of element 'field42'
      .setProperty("Width",30) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'field42'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'field42'
      .setProperty("Editable",true) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'field42'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"N42", _view.panel2) // EJsS HtmlView.HtmlView Page: declaration of element 'N42'
      .setProperty("Background","Green") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'N42'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'N42'
      .setProperty("Text","top") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'N42'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"field422", _view.panel2) // EJsS HtmlView.HtmlView Page: declaration of element 'field422'
      .setProperty("Width",30) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'field422'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'field422'
      .setProperty("Editable",true) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'field422'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"panel22", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'panel22'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'panel22'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"angel3", _view.panel22) // EJsS HtmlView.HtmlView Page: declaration of element 'angel3'
      .setProperty("Background","rgba(0,192,255,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'angel3'
      .setProperty("Text","left ϑ = ") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'angel3'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"field22", _view.panel22) // EJsS HtmlView.HtmlView Page: declaration of element 'field22'
      .setProperty("Width",30) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'field22'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'field22'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"angel23", _view.panel22) // EJsS HtmlView.HtmlView Page: declaration of element 'angel23'
      .setProperty("Background","rgba(0,192,255,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'angel23'
      .setProperty("Text","front ") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'angel23'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"field3", _view.panel22) // EJsS HtmlView.HtmlView Page: declaration of element 'field3'
      .setProperty("Width",30) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'field3'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'field3'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"angel222", _view.panel22) // EJsS HtmlView.HtmlView Page: declaration of element 'angel222'
      .setProperty("Background","rgba(0,192,255,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'angel222'
      .setProperty("Text","backt ") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'angel222'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"field43", _view.panel22) // EJsS HtmlView.HtmlView Page: declaration of element 'field43'
      .setProperty("Width",30) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'field43'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'field43'
      .setProperty("Editable",true) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'field43'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"N43", _view.panel22) // EJsS HtmlView.HtmlView Page: declaration of element 'N43'
      .setProperty("Background","Green") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'N43'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'N43'
      .setProperty("Text","right") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'N43'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"field423", _view.panel22) // EJsS HtmlView.HtmlView Page: declaration of element 'field423'
      .setProperty("Width",30) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'field423'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'field423'
      .setProperty("Editable",true) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'field423'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"N422", _view.panel22) // EJsS HtmlView.HtmlView Page: declaration of element 'N422'
      .setProperty("Background","Green") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'N422'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'N422'
      .setProperty("Text","top") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'N422'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"field4222", _view.panel22) // EJsS HtmlView.HtmlView Page: declaration of element 'field4222'
      .setProperty("Width",30) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'field4222'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'field4222'
      .setProperty("Editable",true) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'field4222'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"slider2", _view.panel22) // EJsS HtmlView.HtmlView Page: declaration of element 'slider2'
      .setProperty("ShowText",true) // EJsS HtmlView.HtmlView Page: setting property 'ShowText' for element 'slider2'
      .setProperty("Minimum",-1) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'slider2'
      .setProperty("Maximum",1) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'slider2'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'slider2'
      .setProperty("Step",0.1) // EJsS HtmlView.HtmlView Page: setting property 'Step' for element 'slider2'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"slider3", _view.panel22) // EJsS HtmlView.HtmlView Page: declaration of element 'slider3'
      .setProperty("ShowText",true) // EJsS HtmlView.HtmlView Page: setting property 'ShowText' for element 'slider3'
      .setProperty("Minimum",-1) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'slider3'
      .setProperty("Maximum",1) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'slider3'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'slider3'
      .setProperty("Step",0.1) // EJsS HtmlView.HtmlView Page: setting property 'Step' for element 'slider3'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"slider", _view.panel22) // EJsS HtmlView.HtmlView Page: declaration of element 'slider'
      .setProperty("ShowText",true) // EJsS HtmlView.HtmlView Page: setting property 'ShowText' for element 'slider'
      .setProperty("Minimum",-1) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'slider'
      .setProperty("Maximum",1) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'slider'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'slider'
      .setProperty("Step",0.1) // EJsS HtmlView.HtmlView Page: setting property 'Step' for element 'slider'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"slider4", _view.panel22) // EJsS HtmlView.HtmlView Page: declaration of element 'slider4'
      .setProperty("ShowText",true) // EJsS HtmlView.HtmlView Page: setting property 'ShowText' for element 'slider4'
      .setProperty("Minimum",-2) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'slider4'
      .setProperty("Maximum",2) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'slider4'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'slider4'
      .setProperty("Step",0.1) // EJsS HtmlView.HtmlView Page: setting property 'Step' for element 'slider4'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"slider42", _view.panel22) // EJsS HtmlView.HtmlView Page: declaration of element 'slider42'
      .setProperty("ShowText",true) // EJsS HtmlView.HtmlView Page: setting property 'ShowText' for element 'slider42'
      .setProperty("Minimum",-2) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'slider42'
      .setProperty("Maximum",2) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'slider42'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'slider42'
      .setProperty("Step",0.1) // EJsS HtmlView.HtmlView Page: setting property 'Step' for element 'slider42'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"slider432", _view.panel22) // EJsS HtmlView.HtmlView Page: declaration of element 'slider432'
      .setProperty("ShowText",true) // EJsS HtmlView.HtmlView Page: setting property 'ShowText' for element 'slider432'
      .setProperty("Minimum",-2) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'slider432'
      .setProperty("Maximum",2) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'slider432'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'slider432'
      .setProperty("Step",0.1) // EJsS HtmlView.HtmlView Page: setting property 'Step' for element 'slider432'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"slider433", _view.panel22) // EJsS HtmlView.HtmlView Page: declaration of element 'slider433'
      .setProperty("ShowText",true) // EJsS HtmlView.HtmlView Page: setting property 'ShowText' for element 'slider433'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'slider433'
      .setProperty("Step",0.1) // EJsS HtmlView.HtmlView Page: setting property 'Step' for element 'slider433'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"slider43", _view.panel22) // EJsS HtmlView.HtmlView Page: declaration of element 'slider43'
      .setProperty("ShowText",true) // EJsS HtmlView.HtmlView Page: setting property 'ShowText' for element 'slider43'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'slider43'
      .setProperty("Step",0.1) // EJsS HtmlView.HtmlView Page: setting property 'Step' for element 'slider43'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"slider4342", _view.panel22) // EJsS HtmlView.HtmlView Page: declaration of element 'slider4342'
      .setProperty("ShowText",true) // EJsS HtmlView.HtmlView Page: setting property 'ShowText' for element 'slider4342'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'slider4342'
      .setProperty("Step",0.1) // EJsS HtmlView.HtmlView Page: setting property 'Step' for element 'slider4342'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"slider434", _view.panel22) // EJsS HtmlView.HtmlView Page: declaration of element 'slider434'
      .setProperty("ShowText",true) // EJsS HtmlView.HtmlView Page: setting property 'ShowText' for element 'slider434'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'slider434'
      .setProperty("Step",0.1) // EJsS HtmlView.HtmlView Page: setting property 'Step' for element 'slider434'
      ;

  };

  return _view;
}


//--><!]]></script>
  </head>
  <body>
    <div role="button" id="_topFrame" style="text-align:center"></div>
  <div id="metadata" class="metadata">
    <br />
    <div id="title_author">
      <hr />
      <b>Title and author:</b>
      <p>
      Nets of Prism<br />
     <img alt="Logo" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/01Math/dawn/ejss_src_netsofprismwee/netsofprism/2016-07-12_1423s.png" />
     <img alt="Logo" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/01Math/dawn/ejss_src_netsofprismwee/netsofprism/2016-07-12_1424s.png" />
     <img alt="Logo" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/01Math/dawn/ejss_src_netsofprismwee/netsofprism/2016-07-12_1425s.png" />
      </p>
      <p>
      <img alt="author image" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/01Math/dawn/ejss_src_netsofprismwee/01authorlookang50x50.png" />
 lookang (weelookang@gmail.com)
      </p>
    </div>
    <hr />
    <p></p>
    <div id="copyright_message">
      <div class="cc_left"  style="float:left">&#169; 2018, Creative Commons Attribution.</div>
      <div class="cc_right" style="float:right">    Released under a <a rel="license" target="_blank" href="http://creativecommons.org/licenses/by-nc-sa/4.0/deed.en_US"> <img alt="Creative Commons Attribution-NonCommercial-ShareAlike" src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/images/cc_icon.png" /> </a> license.</div>
    </div>
  </div>
    <script type="text/javascript"><!--//--><![CDATA[//><!--
      var _model;
      var _scorm;
      window.addEventListener('load',
        function () { 
          _model =  new netsofprismwee("_topFrame","file:/Users/lookang/Google%20Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/","file:/Users/lookang/Google%20Drive/PublicLawrence/workspace/source/EJSS/01Math/dawn/ejss_src_netsofprismwee/");
          if (typeof _isApp !== "undefined" && _isApp) _model.setRunAlways(true);
          TextResizeDetector.TARGET_ELEMENT_ID = '_topFrame';
          TextResizeDetector.USER_INIT_FUNC = function () {
            var iBase = TextResizeDetector.addEventListener(function(e,args) {
              _model._fontResized(args[0].iBase,args[0].iSize,args[0].iDelta);
              },null);
            _model._fontResized(iBase);
          };
          _model.onload();
        }, false);
    //--><!]]></script>
  </body>
</html>
