<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Greatest common divisor (gcd) of two integers</title>
    <link rel="stylesheet"  type="text/css" href="file:///Users/lookang/Google Drive/PublicLawrence/workspace/output/_ejs_library/css/ejss.css" />
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/scripts/common_script.js"></script>
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/scripts/textresizedetector.js"></script>
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/ejsS.v1.min.js"></script>
<script type="text/javascript"><!--//--><![CDATA[//><!--
/* _inputParameters: an object with different values for the model parameters */
function GreaterCommonDivisor(_topFrame,_libraryPath,_codebasePath, _inputParameters) {
  var _model = EJSS_CORE.createAnimationLMS();
  var _view;
  var _isPlaying = false;
  var _isPaused = true;
  var _isMobile = (navigator===undefined) ? false : navigator.userAgent.match(/iPhone|iPad|iPod|Android|BlackBerry|Opera Mini|IEMobile/i);

var _stringProperties = {};
  var _tools = {
    showInputDialog : EJSS_INTERFACE.BoxPanel.showInputDialog,
    showOkDialog : EJSS_INTERFACE.BoxPanel.showOkDialog,
    showOkCancelDialog : EJSS_INTERFACE.BoxPanel.showOkCancelDialog,
    downloadText: EJSS_TOOLS.File.downloadText,
    uploadText: function(action) { EJSS_TOOLS.File.uploadText(_model,action); } 
  };

  function _play()  { _isPaused = false; _isPlaying = true;  _model.play();  }
  function _pause() { _isPaused = true;  _isPlaying = false; _model.pause(); }
  function _step()  { _pause();  _model.step(); }
  function _reset() { _model.reset();  _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); }
  _model._play  = _play;
  _model._pause = _pause;
  _model._step  = _step;
  _model._reset = _reset;
  function _update() { _model.update(); }
  function _initialize() { _model.initialize(); }
  function _setFPS(_fps) { _model.setFPS(_fps); }
  function _setDelay(_delay) { _model.setDelay(_delay); }
  function _setStepsPerDisplay(_spd) { _model.setStepsPerDisplay(_spd); }
  function _setUpdateView(_updateView) { _model.setUpdateView(_updateView); }
  function _setAutoplay(_auto) { _model.setAutoplay(_auto); }
  function _println(_message) { console.log(_message); }

  function _breakAfterThisPage() { _model.setShouldBreak(true); }

  function _resetSolvers() { if (_model.resetSolvers) _model.resetSolvers(); }

  function _saveText(name,type,content) { if (_model.saveText) _model.saveText(name,type,content); }

  function _saveState(name) { if (_model.saveState) _model.saveState(name); }

  function _saveImage(name,panelname) { if (_model.saveImage) _model.saveImage(name,panelname); }

  function _readState(url,type) { if (_model.readState) _model.readState(url,type); }

  function _readText(url,type,varname) { if (_model.readText) _model.readText(url,type,varname); }

  function _getStringProperty(propertyName) {
    var _value = _stringProperties[propertyName];
    if (_value===undefined) return propertyName;
    else return _value;
  }
  var __pagesEnabled = [];
  function _setPageEnabled(pageName,enabled) { __pagesEnabled[pageName] = enabled; }

  var x; // EjsS Model.Variables.simplespring.x
  var y; // EjsS Model.Variables.simplespring.y
  var font; // EjsS Model.Variables.simplespring.font

  _model.getOdes = function() { return []; };

  _model.removeEvents = function(){
  };

  function _serialize() { return _model.serialize(); }

  _model._userSerialize = function() {
    return {
      x : x,
      y : y,
      font : font
    };
  };

  _model._readParameters = function(json) {
    if(typeof json.x != "undefined") x = json.x;
    if(typeof json.y != "undefined") y = json.y;
    if(typeof json.font != "undefined") font = json.font;
  };

  _model._inputAndPublicParameters = ["x",  "y",  "font"]; 

  _model._outputAndPublicParameters = ["x",  "y",  "font"];

  function _unserialize(json) { return _model.unserialize(json); }

  _model._userUnserialize = function(json) {
    _model._readParameters(json);
   _resetSolvers();
   _model.update();
  };

  _model.addToReset(function() {
    __pagesEnabled["userPlay"] = true;
  });

  _model.addToReset(function() {
    x = 0; // EjsS Model.Variables.simplespring.x
    y = 0; // EjsS Model.Variables.simplespring.y
    font = "normal normal 2vw "; // EjsS Model.Variables.simplespring.font
  });

  if (_inputParameters) {
    _inputParameters = _model.parseInputParameters(_inputParameters);
    if (_inputParameters) _model.addToReset(function() { _model._readParameters(_inputParameters); });
  }

  _model.addToReset(function() {
    _model.setAutoplay(false);
    _model.setFPS(20);
    _model.setStepsPerDisplay(1);
  });

  function gcd_two_numbers(x, y) { //using 34,8 as example  // > CustomCode.gcd:1
    if ((typeof x !== 'number') || (typeof y !== 'number'))   // > CustomCode.gcd:2
      return false;  // > CustomCode.gcd:3
    x = Math.abs(x);  // > CustomCode.gcd:4
    y = Math.abs(y);  // > CustomCode.gcd:5
    while(y>0) {   // > CustomCode.gcd:6
      var t = y;       //dummy t variable  // > CustomCode.gcd:7
    //  alert("1t="+t); // first round t=8        second iteration t=2         bug repeat third t=8   bug fourth t=2  // > CustomCode.gcd:8
      y = x % y;      // 34%8 assign y =2                    y= 8%2 = 0          y =2           y =0  // > CustomCode.gcd:9
    //  alert("2y="+y); //first round=2  // > CustomCode.gcd:10
      x = t;           // assign t back to x                 x=2                 x=8             x= 2   // > CustomCode.gcd:11
     // alert("3x="+x);    // x =8  // > CustomCode.gcd:12
    }  // > CustomCode.gcd:13
    return x;  // > CustomCode.gcd:14
  //console.log(gcd_two_numbers(x, y));  // > CustomCode.gcd:15
  }  // > CustomCode.gcd:16

  _model.addToInitialization(function() {
    if (!__pagesEnabled["userPlay"]) return;
    var userPlay =   // > Initialization.userPlay:1
    "x=34;  \n"+  // > Initialization.userPlay:2
    "y=4;  \n"+  // > Initialization.userPlay:3
    "function gcd_two_numbers(x, y) { //using 34,8 as example  \n"+  // > Initialization.userPlay:4
    "  if ((typeof x !== 'number') || (typeof y !== 'number'))  \n"+  // > Initialization.userPlay:5
    "    return false;  \n"+  // > Initialization.userPlay:6
    "  x = Math.abs(x);  \n"+  // > Initialization.userPlay:7
    "  y = Math.abs(y);  \n"+  // > Initialization.userPlay:8
    "  while(y>0) {   \n"+  // > Initialization.userPlay:9
    "    var t = y;       //dummy t variable  \n"+  // > Initialization.userPlay:10
    "    y = x % y;      // 34%8 assign y =2                    y= 8%2 = 0          y =2           y =0  \n"+  // > Initialization.userPlay:11
    "    x = t;           // assign t back to x                 x=2                 x=8             x= 2  \n"+  // > Initialization.userPlay:12
    "  }  \n"+  // > Initialization.userPlay:13
    " return x;  \n"+  // > Initialization.userPlay:14
    " } \n"  // > Initialization.userPlay:15
       // > Initialization.userPlay:16
    _view.autoplayTextAreaMgeneral.setValue(userPlay); // put  // > Initialization.userPlay:17
  });

  _model.addToFixedRelations(function() { _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); });

  _model.addToFixedRelations(function() { _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); });

    _model._fontResized = function(iBase,iSize,iDelta) {
      _view._fontResized(iBase,iSize,iDelta);
  }; // end of _fontResized

  function _getViews() {
    var _viewsInfo = [];
    var _counter = 0;
    _viewsInfo[_counter++] = { name : "HtmlView Page", width : 800, height : 600 };
    return _viewsInfo;
  } // end of _getViews

  function _selectView(_viewNumber) {
    _view = null;
    _view = new GreaterCommonDivisor_View(_topFrame,_viewNumber,_libraryPath,_codebasePath);
    var _view_super_reset = _view._reset;
    _view._reset = function() {
      _view_super_reset();
      switch(_viewNumber) {
        case -10 : break; // make Lint happy
        default :
        case 0:
          _view.controlPanel.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'controlPanel'
          _view.field2.linkProperty("Value",  function() { return x; }, function(_v) { x = _v; } ); // HtmlView Page linking property 'Value' for element 'field2'
          _view.field2.setAction("OnChange", function(_data,_info) {
  gcd_two_numbers(x, y);

}); // HtmlView Page setting action 'OnChange' for element 'field2'
          _view.field.linkProperty("Value",  function() { return y; }, function(_v) { y = _v; } ); // HtmlView Page linking property 'Value' for element 'field'
          _view.field.setAction("OnChange", function(_data,_info) {
  gcd_two_numbers(x, y);

}); // HtmlView Page setting action 'OnChange' for element 'field'
          _view.field3.linkProperty("Value",  function() { return gcd_two_numbers(x, y); } ); // HtmlView Page linking property 'Value' for element 'field3'
          _view.field3.setAction("OnChange", _initialize); // HtmlView Page setting action 'OnChange' for element 'field3'
          _view.autoplayTextAreaMgeneral.setAction("OnChange", function(_data,_info) {
  var userPlay = _view.autoplayTextAreaMgeneral.getValue();
   try {
   eval(userPlay);
   //xgeneral=numeric.dot(matrix_invert(Mgeneral),bgeneral);
  gcd_two_numbers(x, y);
  }
  catch(error) {
    _tools.showOkCancelDialog("you can define your own variables. There should be an output for the solution I, or that could be some error in code, try again!");
    }

}); // HtmlView Page setting action 'OnChange' for element 'autoplayTextAreaMgeneral'
          _view.autoplayTextAreaMgeneral.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'autoplayTextAreaMgeneral'
          break;
      } // end of switch
    }; // end of new reset

    _model.setView(_view);
    _model.reset();
    _view._enableEPub();
  } // end of _selectView

  _model.setAutoplay(false);
  _model.setFPS(20);
  _model.setStepsPerDisplay(1);
  _selectView(-1); // this includes _model.reset()
  return _model;
}

function GreaterCommonDivisor_View (_topFrame,_viewNumber,_libraryPath,_codebasePath) {
  var _view;
  switch(_viewNumber) {
    case -10 : break; // make Lint happy
    default :
    case 0: _view = GreaterCommonDivisor_View_0 (_topFrame); break;
  } // end of switch

  if (_codebasePath) _view._setResourcePath(_codebasePath);

  if (_libraryPath) _view._setLibraryPath(_libraryPath);


  return _view;
} // end of main function

function GreaterCommonDivisor_View_0 (_topFrame) {
  var _view = EJSS_CORE.createView(_topFrame);

  _view._reset = function() {
    _view._clearAll();
    _view._addElement(EJSS_INTERFACE.panel,"fullscreen", _view._topFrame) // EJsS HtmlView.HtmlView Page: declaration of element 'fullscreen'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"control", _view.fullscreen) // EJsS HtmlView.HtmlView Page: declaration of element 'control'
      .setProperty("BorderWidth",1) // EJsS HtmlView.HtmlView Page: setting property 'BorderWidth' for element 'control'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"controlPanel", _view.control) // EJsS HtmlView.HtmlView Page: declaration of element 'controlPanel'
      .setProperty("CSS",{"display":"inline"}) // EJsS HtmlView.HtmlView Page: setting property 'CSS' for element 'controlPanel'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"label", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'label'
      .setProperty("Text","x=") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'label'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"field2", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'field2'
      .setProperty("Width","5vw") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'field2'
      .setProperty("Format","0") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'field2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"label2", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'label2'
      .setProperty("Text","y=") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'label2'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"field", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'field'
      .setProperty("Width","5vw") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'field'
      .setProperty("Format","0") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'field'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"label22", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'label22'
      .setProperty("Text","gcd(x,y)=") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'label22'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"field3", _view.controlPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'field3'
      .setProperty("Width","5vw") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'field3'
      .setProperty("Format","0") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'field3'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'field3'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"panel", _view.fullscreen) // EJsS HtmlView.HtmlView Page: declaration of element 'panel'
      .setProperty("Height","100%") // EJsS HtmlView.HtmlView Page: setting property 'Height' for element 'panel'
      .setProperty("Width","100%") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'panel'
      ;

    _view._addElement(EJSS_INTERFACE.textArea,"autoplayTextAreaMgeneral", _view.panel) // EJsS HtmlView.HtmlView Page: declaration of element 'autoplayTextAreaMgeneral'
      .setProperty("Height","80vh") // EJsS HtmlView.HtmlView Page: setting property 'Height' for element 'autoplayTextAreaMgeneral'
      .setProperty("Width","100%") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'autoplayTextAreaMgeneral'
      .setProperty("ChangeColorOnEdit",true) // EJsS HtmlView.HtmlView Page: setting property 'ChangeColorOnEdit' for element 'autoplayTextAreaMgeneral'
      .setProperty("Editable",true) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'autoplayTextAreaMgeneral'
      ;

  };

  return _view;
}


//--><!]]></script>
  </head>
  <body>
    <div role="button" id="_topFrame" style="text-align:center"></div>
  <div id="metadata" class="metadata">
    <br />
    <div id="title_author">
      <hr />
      <b>Title and author:</b>
      <p>
      Greatest common divisor (gcd) of two integers<br />
     <img alt="Logo" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/01Math/GreaterCommonDivisor/Screen Shot 2018-07-25 at 2.46.31 PM (2).png" />
      </p>
      <p>
      <img alt="author image" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/01Math/1authorlookangphoto5050.png" />
      <img alt="author image" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/01Math/01authorPacoEsquembre2011.png" />
      <img alt="author image" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/01Math/01authorFelix_J_Garcia_Clemente.png" />
 weelookang@gmail.com; Francisco Esquembre; Felix J. Garcia Clemente
      </p>
    </div>
    <hr />
    <p></p>
    <div id="copyright_message">
      <div class="cc_left"  style="float:left">&#169; 2018, weelookang@gmail.com; Francisco Esquembre; Felix J. Garcia Clemente.</div>
      <div class="cc_right" style="float:right">    Released under a <a rel="license" target="_blank" href="http://creativecommons.org/licenses/by-nc-sa/4.0/deed.en_US"> <img alt="Creative Commons Attribution-NonCommercial-ShareAlike" src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/images/cc_icon.png" /> </a> license.</div>
    </div>
  </div>
    <script type="text/javascript"><!--//--><![CDATA[//><!--
      var _model;
      var _scorm;
      window.addEventListener('load',
        function () { 
          _model =  new GreaterCommonDivisor("_topFrame","file:/Users/lookang/Google%20Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/","file:/Users/lookang/Google%20Drive/PublicLawrence/workspace/source/EJSS/01Math/");
          if (typeof _isApp !== "undefined" && _isApp) _model.setRunAlways(true);
          TextResizeDetector.TARGET_ELEMENT_ID = '_topFrame';
          TextResizeDetector.USER_INIT_FUNC = function () {
            var iBase = TextResizeDetector.addEventListener(function(e,args) {
              _model._fontResized(args[0].iBase,args[0].iSize,args[0].iDelta);
              },null);
            _model._fontResized(iBase);
          };
          _model.onload();
        }, false);
    //--><!]]></script>
  </body>
</html>
