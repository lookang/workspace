<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Hanging Simple Harmonic Oscillator</title>
    <link rel="stylesheet"  type="text/css" href="file:///Users/lookang/Google Drive/PublicLawrence/workspace/output/_ejs_library/css/ejss.css" />
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/scripts/common_script.js"></script>
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/scripts/textresizedetector.js"></script>
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/ejsS.v1.min.js"></script>
<script type="text/javascript"><!--//--><![CDATA[//><!--
/* _inputParameters: an object with different values for the model parameters */
function PICUP_Hanging_SHO_Python_frem(_topFrame,_libraryPath,_codebasePath, _inputParameters) {
  var _model = EJSS_CORE.createAnimationLMS();
  var _view;
  var _isPlaying = false;
  var _isPaused = true;
  var _isMobile = (navigator===undefined) ? false : navigator.userAgent.match(/iPhone|iPad|iPod|Android|BlackBerry|Opera Mini|IEMobile/i);

var _stringProperties = {};
  var _tools = {
    showInputDialog : EJSS_INTERFACE.BoxPanel.showInputDialog,
    showOkDialog : EJSS_INTERFACE.BoxPanel.showOkDialog,
    showOkCancelDialog : EJSS_INTERFACE.BoxPanel.showOkCancelDialog,
    downloadText: EJSS_TOOLS.File.downloadText,
    uploadText: function(action) { EJSS_TOOLS.File.uploadText(_model,action); } 
  };

  function _play()  { _isPaused = false; _isPlaying = true;  _model.play();  }
  function _pause() { _isPaused = true;  _isPlaying = false; _model.pause(); }
  function _step()  { _pause();  _model.step(); }
  function _reset() { _model.reset();  _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); }
  _model._play  = _play;
  _model._pause = _pause;
  _model._step  = _step;
  _model._reset = _reset;
  function _update() { _model.update(); }
  function _initialize() { _model.initialize(); }
  function _setFPS(_fps) { _model.setFPS(_fps); }
  function _setDelay(_delay) { _model.setDelay(_delay); }
  function _setStepsPerDisplay(_spd) { _model.setStepsPerDisplay(_spd); }
  function _setUpdateView(_updateView) { _model.setUpdateView(_updateView); }
  function _setAutoplay(_auto) { _model.setAutoplay(_auto); }
  function _println(_message) { console.log(_message); }

  function _breakAfterThisPage() { _model.setShouldBreak(true); }

  function _resetSolvers() { if (_model.resetSolvers) _model.resetSolvers(); }

  function _saveText(name,type,content) { if (_model.saveText) _model.saveText(name,type,content); }

  function _saveState(name) { if (_model.saveState) _model.saveState(name); }

  function _saveImage(name,panelname) { if (_model.saveImage) _model.saveImage(name,panelname); }

  function _readState(url,type) { if (_model.readState) _model.readState(url,type); }

  function _readText(url,type,varname) { if (_model.readText) _model.readText(url,type,varname); }

  function _getStringProperty(propertyName) {
    var _value = _stringProperties[propertyName];
    if (_value===undefined) return propertyName;
    else return _value;
  }
  var __pagesEnabled = [];
  function _setPageEnabled(pageName,enabled) { __pagesEnabled[pageName] = enabled; }

  var dt; // EjsS Model.Variables.Parameters.dt
  var vi; // EjsS Model.Variables.Parameters.vi
  var yi; // EjsS Model.Variables.Parameters.yi
  var m; // EjsS Model.Variables.Parameters.m
  var g; // EjsS Model.Variables.Parameters.g
  var k; // EjsS Model.Variables.Parameters.k
  var t_steps; // EjsS Model.Variables.Parameters.t_steps

  var dtt; // EjsS Model.Variables.lookang.dtt
  var dtt2; // EjsS Model.Variables.lookang.dtt2
  var t; // EjsS Model.Variables.lookang.t
  var tEC; // EjsS Model.Variables.lookang.tEC
  var y_Eulert; // EjsS Model.Variables.lookang.y_Eulert
  var y_Eulerts; // EjsS Model.Variables.lookang.y_Eulerts
  var y_ECt; // EjsS Model.Variables.lookang.y_ECt
  var y_exactt; // EjsS Model.Variables.lookang.y_exactt
  var v_Eulert; // EjsS Model.Variables.lookang.v_Eulert
  var v_Eulerts; // EjsS Model.Variables.lookang.v_Eulerts
  var v_ECt; // EjsS Model.Variables.lookang.v_ECt
  var v_exactt; // EjsS Model.Variables.lookang.v_exactt
  var energyEulert; // EjsS Model.Variables.lookang.energyEulert
  var energyECt; // EjsS Model.Variables.lookang.energyECt

  var time; // EjsS Model.Variables.Arrays.time
  var y_Euler; // EjsS Model.Variables.Arrays.y_Euler
  var y_EC; // EjsS Model.Variables.Arrays.y_EC
  var y_exact; // EjsS Model.Variables.Arrays.y_exact
  var v_Euler; // EjsS Model.Variables.Arrays.v_Euler
  var v_EC; // EjsS Model.Variables.Arrays.v_EC
  var v_exact; // EjsS Model.Variables.Arrays.v_exact
  var energyEuler; // EjsS Model.Variables.Arrays.energyEuler
  var energyEC; // EjsS Model.Variables.Arrays.energyEC

  var font; // EjsS Model.Variables.Display.font
  var fonta; // EjsS Model.Variables.Display.fonta
  var fontb; // EjsS Model.Variables.Display.fontb
  var Height1; // EjsS Model.Variables.Display.Height1
  var Height2; // EjsS Model.Variables.Display.Height2
  var Height3; // EjsS Model.Variables.Display.Height3
  var stshow; // EjsS Model.Variables.Display.stshow
  var vtshow; // EjsS Model.Variables.Display.vtshow
  var etshow; // EjsS Model.Variables.Display.etshow
  var eulershow; // EjsS Model.Variables.Display.eulershow
  var eulercromershow; // EjsS Model.Variables.Display.eulercromershow
  var exactshow; // EjsS Model.Variables.Display.exactshow

  var _privateOdesList;
  var _ODEi_evolution1;
  var userEvents1=[];
  var _ODEi_evolution2;
  var userEvents2=[];

  _model.getOdes = function() { return [_ODEi_evolution1,_ODEi_evolution2]; };

  _model.removeEvents = function(){
    userEvents1=[];
    userEvents2=[];
  };

  function _serialize() { return _model.serialize(); }

  _model._userSerialize = function() {
    return {
      dt : dt,
      vi : vi,
      yi : yi,
      m : m,
      g : g,
      k : k,
      t_steps : t_steps,
      dtt : dtt,
      dtt2 : dtt2,
      t : t,
      tEC : tEC,
      y_Eulert : y_Eulert,
      y_Eulerts : y_Eulerts,
      y_ECt : y_ECt,
      y_exactt : y_exactt,
      v_Eulert : v_Eulert,
      v_Eulerts : v_Eulerts,
      v_ECt : v_ECt,
      v_exactt : v_exactt,
      energyEulert : energyEulert,
      energyECt : energyECt,
      time : time,
      y_Euler : y_Euler,
      y_EC : y_EC,
      y_exact : y_exact,
      v_Euler : v_Euler,
      v_EC : v_EC,
      v_exact : v_exact,
      energyEuler : energyEuler,
      energyEC : energyEC,
      font : font,
      fonta : fonta,
      fontb : fontb,
      Height1 : Height1,
      Height2 : Height2,
      Height3 : Height3,
      stshow : stshow,
      vtshow : vtshow,
      etshow : etshow,
      eulershow : eulershow,
      eulercromershow : eulercromershow,
      exactshow : exactshow
    };
  };

  _model._readParameters = function(json) {
    if(typeof json.dt != "undefined") dt = json.dt;
    if(typeof json.vi != "undefined") vi = json.vi;
    if(typeof json.yi != "undefined") yi = json.yi;
    if(typeof json.m != "undefined") m = json.m;
    if(typeof json.g != "undefined") g = json.g;
    if(typeof json.k != "undefined") k = json.k;
    if(typeof json.t_steps != "undefined") t_steps = json.t_steps;
    if(typeof json.dtt != "undefined") dtt = json.dtt;
    if(typeof json.dtt2 != "undefined") dtt2 = json.dtt2;
    if(typeof json.t != "undefined") t = json.t;
    if(typeof json.tEC != "undefined") tEC = json.tEC;
    if(typeof json.y_Eulert != "undefined") y_Eulert = json.y_Eulert;
    if(typeof json.y_Eulerts != "undefined") y_Eulerts = json.y_Eulerts;
    if(typeof json.y_ECt != "undefined") y_ECt = json.y_ECt;
    if(typeof json.y_exactt != "undefined") y_exactt = json.y_exactt;
    if(typeof json.v_Eulert != "undefined") v_Eulert = json.v_Eulert;
    if(typeof json.v_Eulerts != "undefined") v_Eulerts = json.v_Eulerts;
    if(typeof json.v_ECt != "undefined") v_ECt = json.v_ECt;
    if(typeof json.v_exactt != "undefined") v_exactt = json.v_exactt;
    if(typeof json.energyEulert != "undefined") energyEulert = json.energyEulert;
    if(typeof json.energyECt != "undefined") energyECt = json.energyECt;
    if(typeof json.time != "undefined") time = json.time;
    if(typeof json.y_Euler != "undefined") y_Euler = json.y_Euler;
    if(typeof json.y_EC != "undefined") y_EC = json.y_EC;
    if(typeof json.y_exact != "undefined") y_exact = json.y_exact;
    if(typeof json.v_Euler != "undefined") v_Euler = json.v_Euler;
    if(typeof json.v_EC != "undefined") v_EC = json.v_EC;
    if(typeof json.v_exact != "undefined") v_exact = json.v_exact;
    if(typeof json.energyEuler != "undefined") energyEuler = json.energyEuler;
    if(typeof json.energyEC != "undefined") energyEC = json.energyEC;
    if(typeof json.font != "undefined") font = json.font;
    if(typeof json.fonta != "undefined") fonta = json.fonta;
    if(typeof json.fontb != "undefined") fontb = json.fontb;
    if(typeof json.Height1 != "undefined") Height1 = json.Height1;
    if(typeof json.Height2 != "undefined") Height2 = json.Height2;
    if(typeof json.Height3 != "undefined") Height3 = json.Height3;
    if(typeof json.stshow != "undefined") stshow = json.stshow;
    if(typeof json.vtshow != "undefined") vtshow = json.vtshow;
    if(typeof json.etshow != "undefined") etshow = json.etshow;
    if(typeof json.eulershow != "undefined") eulershow = json.eulershow;
    if(typeof json.eulercromershow != "undefined") eulercromershow = json.eulercromershow;
    if(typeof json.exactshow != "undefined") exactshow = json.exactshow;
  };

  _model._inputAndPublicParameters = ["dt",  "vi",  "yi",  "m",  "g",  "k",  "t_steps",  "dtt",  "dtt2",  "t",  "tEC",  "y_Eulert",  "y_Eulerts",  "y_ECt",  "y_exactt",  "v_Eulert",  "v_Eulerts",  "v_ECt",  "v_exactt",  "energyEulert",  "energyECt",  "time",  "y_Euler",  "y_EC",  "y_exact",  "v_Euler",  "v_EC",  "v_exact",  "energyEuler",  "energyEC",  "font",  "fonta",  "fontb",  "Height1",  "Height2",  "Height3",  "stshow",  "vtshow",  "etshow",  "eulershow",  "eulercromershow",  "exactshow"]; 

  _model._outputAndPublicParameters = ["dt",  "vi",  "yi",  "m",  "g",  "k",  "t_steps",  "dtt",  "dtt2",  "t",  "tEC",  "y_Eulert",  "y_Eulerts",  "y_ECt",  "y_exactt",  "v_Eulert",  "v_Eulerts",  "v_ECt",  "v_exactt",  "energyEulert",  "energyECt",  "time",  "y_Euler",  "y_EC",  "y_exact",  "v_Euler",  "v_EC",  "v_exact",  "energyEuler",  "energyEC",  "font",  "fonta",  "fontb",  "Height1",  "Height2",  "Height3",  "stshow",  "vtshow",  "etshow",  "eulershow",  "eulercromershow",  "exactshow"];

  function _unserialize(json) { return _model.unserialize(json); }

  _model._userUnserialize = function(json) {
    _model._readParameters(json);
   _resetSolvers();
   _model.update();
  };

  _model.addToReset(function() {
    __pagesEnabled["New Arrays"] = true;
    __pagesEnabled["Initial Conditions"] = true;
    __pagesEnabled["Main Loop"] = true;
    __pagesEnabled["axes"] = true;
    __pagesEnabled["undefined"] = true;
    __pagesEnabled["Euler"] = true;
    __pagesEnabled["euler-Cromer"] = true;
    __pagesEnabled["exact"] = true;
    __pagesEnabled["Evol Page"] = false;
    __pagesEnabled["Evol Page 2"] = false;
    __pagesEnabled["ExactSolution"] = false;
  });

  _model.addToReset(function() {
    dt = 0.01; // EjsS Model.Variables.Parameters.dt
    vi = 0; // EjsS Model.Variables.Parameters.vi
    yi = 0.1; // EjsS Model.Variables.Parameters.yi
    m = 1.0; // EjsS Model.Variables.Parameters.m
    g = 9.8; // EjsS Model.Variables.Parameters.g
    k = 10; // EjsS Model.Variables.Parameters.k
    t_steps = 2000; // EjsS Model.Variables.Parameters.t_steps
  });

  _model.addToReset(function() {
    dtt = dt; // EjsS Model.Variables.lookang.dtt
    dtt2 = dt; // EjsS Model.Variables.lookang.dtt2
    t = 0; // EjsS Model.Variables.lookang.t
    tEC = 0; // EjsS Model.Variables.lookang.tEC
    y_Eulert = yi; // EjsS Model.Variables.lookang.y_Eulert
    y_Eulerts = yi; // EjsS Model.Variables.lookang.y_Eulerts
    y_ECt = yi; // EjsS Model.Variables.lookang.y_ECt
    y_exactt = yi; // EjsS Model.Variables.lookang.y_exactt
    v_Eulert = vi; // EjsS Model.Variables.lookang.v_Eulert
    v_Eulerts = vi; // EjsS Model.Variables.lookang.v_Eulerts
    v_ECt = vi; // EjsS Model.Variables.lookang.v_ECt
    v_exactt = vi; // EjsS Model.Variables.lookang.v_exactt
    energyEulert = 0; // EjsS Model.Variables.lookang.energyEulert
    energyECt = 0; // EjsS Model.Variables.lookang.energyECt
  });

  _model.addToReset(function() {
    time = new Array(t_steps); // EjsS Model.Variables.Arrays.time
    (function () {
      var _i0;
      for (_i0=0; _i0<t_steps; _i0+=1) {  // EjsS Model.Variables.Arrays.time
        time[_i0] = 0;  // EjsS Model.Variables.Arrays.time
      }
    }());
    y_Euler = new Array(t_steps); // EjsS Model.Variables.Arrays.y_Euler
    (function () {
      var _i0;
      for (_i0=0; _i0<t_steps; _i0+=1) {  // EjsS Model.Variables.Arrays.y_Euler
        y_Euler[_i0] = 0;  // EjsS Model.Variables.Arrays.y_Euler
      }
    }());
    y_EC = new Array(t_steps); // EjsS Model.Variables.Arrays.y_EC
    (function () {
      var _i0;
      for (_i0=0; _i0<t_steps; _i0+=1) {  // EjsS Model.Variables.Arrays.y_EC
        y_EC[_i0] = 0;  // EjsS Model.Variables.Arrays.y_EC
      }
    }());
    y_exact = new Array(t_steps); // EjsS Model.Variables.Arrays.y_exact
    (function () {
      var _i0;
      for (_i0=0; _i0<t_steps; _i0+=1) {  // EjsS Model.Variables.Arrays.y_exact
        y_exact[_i0] = 0;  // EjsS Model.Variables.Arrays.y_exact
      }
    }());
    v_Euler = new Array(t_steps); // EjsS Model.Variables.Arrays.v_Euler
    (function () {
      var _i0;
      for (_i0=0; _i0<t_steps; _i0+=1) {  // EjsS Model.Variables.Arrays.v_Euler
        v_Euler[_i0] = 0;  // EjsS Model.Variables.Arrays.v_Euler
      }
    }());
    v_EC = new Array(t_steps); // EjsS Model.Variables.Arrays.v_EC
    (function () {
      var _i0;
      for (_i0=0; _i0<t_steps; _i0+=1) {  // EjsS Model.Variables.Arrays.v_EC
        v_EC[_i0] = 0;  // EjsS Model.Variables.Arrays.v_EC
      }
    }());
    v_exact = new Array(t_steps); // EjsS Model.Variables.Arrays.v_exact
    (function () {
      var _i0;
      for (_i0=0; _i0<t_steps; _i0+=1) {  // EjsS Model.Variables.Arrays.v_exact
        v_exact[_i0] = 0;  // EjsS Model.Variables.Arrays.v_exact
      }
    }());
    energyEuler = new Array(t_steps); // EjsS Model.Variables.Arrays.energyEuler
    (function () {
      var _i0;
      for (_i0=0; _i0<t_steps; _i0+=1) {  // EjsS Model.Variables.Arrays.energyEuler
        energyEuler[_i0] = 0;  // EjsS Model.Variables.Arrays.energyEuler
      }
    }());
    energyEC = new Array(t_steps); // EjsS Model.Variables.Arrays.energyEC
    (function () {
      var _i0;
      for (_i0=0; _i0<t_steps; _i0+=1) {  // EjsS Model.Variables.Arrays.energyEC
        energyEC[_i0] = 0;  // EjsS Model.Variables.Arrays.energyEC
      }
    }());
  });

  _model.addToReset(function() {
    font = "normal normal 1.5vw"; // EjsS Model.Variables.Display.font
    fonta = "normal normal 1vw"; // EjsS Model.Variables.Display.fonta
    fontb = "normal bold 2vw"; // EjsS Model.Variables.Display.fontb
    Height1 = window.innerHeight*0.88; // EjsS Model.Variables.Display.Height1
    Height2 = window.innerHeight*0.44; // EjsS Model.Variables.Display.Height2
    Height3 = window.innerHeight*0.44; // EjsS Model.Variables.Display.Height3
    stshow = true; // EjsS Model.Variables.Display.stshow
  });

  if (_inputParameters) {
    _inputParameters = _model.parseInputParameters(_inputParameters);
    if (_inputParameters) _model.addToReset(function() { _model._readParameters(_inputParameters); });
  }

  _model.addToReset(function() {
    _privateOdesList=[];
    _ODEi_evolution1 = _ODE_evolution1();
    _privateOdesList.push(_ODEi_evolution1);
    _ODEi_evolution2 = _ODE_evolution2();
    _privateOdesList.push(_ODEi_evolution2);
  });

  _model.addToReset(function() {
    _model.setAutoplay(true);
    _model.setPauseOnPageExit(true);
    _model.setFPS(20);
    _model.setStepsPerDisplay(1);
  });

  //Sets Full Screen  // > CustomCode.Toggle Full Screen:1
  //https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Using_full_screen_mode  // > CustomCode.Toggle Full Screen:2
  // does not work for iOS   // > CustomCode.Toggle Full Screen:3
  /*jslint browser:true */  // > CustomCode.Toggle Full Screen:4
  function toggleFullScreen() {  // > CustomCode.Toggle Full Screen:5
    if (!document.fullscreenElement &&    // alternative standard method  // > CustomCode.Toggle Full Screen:6
        !document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement ) {  // current working methods  // > CustomCode.Toggle Full Screen:7
      if (document.documentElement.requestFullscreen) {  // > CustomCode.Toggle Full Screen:8
        document.documentElement.requestFullscreen();  // > CustomCode.Toggle Full Screen:9
      } else if (document.documentElement.msRequestFullscreen) {  // > CustomCode.Toggle Full Screen:10
        document.documentElement.msRequestFullscreen();  // > CustomCode.Toggle Full Screen:11
      } else if (document.documentElement.mozRequestFullScreen) {  // > CustomCode.Toggle Full Screen:12
        document.documentElement.mozRequestFullScreen();  // > CustomCode.Toggle Full Screen:13
      } else if (document.documentElement.webkitRequestFullscreen) {  // > CustomCode.Toggle Full Screen:14
        document.documentElement.webkitRequestFullscreen();  // > CustomCode.Toggle Full Screen:15
      }  // > CustomCode.Toggle Full Screen:16
    } else {  // > CustomCode.Toggle Full Screen:17
      if (document.exitFullscreen) {  // > CustomCode.Toggle Full Screen:18
        document.exitFullscreen();  // > CustomCode.Toggle Full Screen:19
      } else if (document.msExitFullscreen) {  // > CustomCode.Toggle Full Screen:20
        document.msExitFullscreen();  // > CustomCode.Toggle Full Screen:21
      } else if (document.mozCancelFullScreen) {  // > CustomCode.Toggle Full Screen:22
        document.mozCancelFullScreen();  // > CustomCode.Toggle Full Screen:23
      } else if (document.webkitExitFullscreen) {  // > CustomCode.Toggle Full Screen:24
        document.webkitExitFullscreen();  // > CustomCode.Toggle Full Screen:25
      }  // > CustomCode.Toggle Full Screen:26
    }  // > CustomCode.Toggle Full Screen:27
  }  // > CustomCode.Toggle Full Screen:28

  _model.addToInitialization(function() {
    if (!__pagesEnabled["New Arrays"]) return;
    /* Defines the 1D arrays to be used in the computation and   // > Initialization.New Arrays:1
    sets all values in the arrays to zero*/  // > Initialization.New Arrays:2
    time = [];  // > Initialization.New Arrays:3
    y_Euler = [];  // > Initialization.New Arrays:4
    y_EC = [];  // > Initialization.New Arrays:5
    y_exact = [];  // > Initialization.New Arrays:6
    v_Euler = [];  // > Initialization.New Arrays:7
    v_EC = [];  // > Initialization.New Arrays:8
    v_exact = [];  // > Initialization.New Arrays:9
    energyEuler = [];  // > Initialization.New Arrays:10
    energyEC = [];  // > Initialization.New Arrays:11
  });

  _model.addToInitialization(function() {
    if (!__pagesEnabled["Initial Conditions"]) return;
    // Initial conditions  // > Initialization.Initial Conditions:1
    time[1] = 0;  // > Initialization.Initial Conditions:2
    y_Euler[1] = yi;  // > Initialization.Initial Conditions:3
    y_EC[1] = yi;  // > Initialization.Initial Conditions:4
    y_exact[1] = yi;  // > Initialization.Initial Conditions:5
    v_Euler[1] = vi;  // > Initialization.Initial Conditions:6
    v_EC[1] = vi;  // > Initialization.Initial Conditions:7
    v_exact[1] = vi;  // > Initialization.Initial Conditions:8
    energyEuler[1]=0.5*m*v_Euler[1]**2+0.5*k*(y_Euler[1]+m*g/k)**2-m*g*(y_Euler[1]+m*g/k);  // > Initialization.Initial Conditions:9
    energyEC[1]=0.5*m*v_EC[1]**2+0.5*k*(y_EC[1]+m*g/k)**2-m*g*(y_EC[1]+m*g/k);  // > Initialization.Initial Conditions:10
  });

  _model.addToInitialization(function() {
    if (!__pagesEnabled["Main Loop"]) return;
    // Main loop: Euler algorithm, euler-Cromer, and evaluation of exact solutions for v and y  // > Initialization.Main Loop:1
    for (var i=2; i< t_steps+1;i++){  // > Initialization.Main Loop:2
    	time[i] = time[i-1] + dt;  // > Initialization.Main Loop:3
    	//time= time+dt;  // > Initialization.Main Loop:4
    	// Euler  // > Initialization.Main Loop:5
    	v_Euler[i]=v_Euler[i-1]-k*y_Euler[i-1]*dt/m;  // > Initialization.Main Loop:6
    	y_Euler[i]=y_Euler[i-1]+v_Euler[i-1]*dt;  // > Initialization.Main Loop:7
    	// Euler-Cromer  // > Initialization.Main Loop:8
    	v_EC[i]=v_EC[i-1]-k*y_EC[i-1]*dt/m;  // > Initialization.Main Loop:9
    	y_EC[i]=y_EC[i-1]+v_EC[i]*dt;  // > Initialization.Main Loop:10
    	// Exact (assuming vi=0)  // > Initialization.Main Loop:11
    	v_exact[i]=-yi*Math.sqrt(k/m)*Math.sin(Math.sqrt(k/m)*time[i]);  // > Initialization.Main Loop:12
    	y_exact[i]=yi*Math.cos(Math.sqrt(k/m)*time[i]);  // > Initialization.Main Loop:13
    	// Energies  // > Initialization.Main Loop:14
    	energyEuler[i]=0.5*m*v_Euler[i]**2+0.5*k*(y_Euler[i]+m*g/k)**2-m*g*(y_Euler[i]+m*g/k);  // > Initialization.Main Loop:15
    	energyEC[i]=0.5*m*v_EC[i]**2+0.5*k*(y_EC[i]+m*g/k)**2-m*g*(y_EC[i]+m*g/k);  // > Initialization.Main Loop:16
    }  // > Initialization.Main Loop:17
  });

  _model.addToInitialization(function() {
    if (!__pagesEnabled["axes"]) return;
    _view.plottingPanel.getAxisX().setPosition([0,0.5]);  // > Initialization.axes:1
    _view.plottingPanel.getTitleX().setPosition([0.95,0.5]);  // > Initialization.axes:2
    _view.plottingPanel.getAxisY().setPosition([0.045,0]);  // > Initialization.axes:3
    _view.plottingPanel.getTitleY().setPosition([0.130,0.85]);  // > Initialization.axes:4
    _view.plottingPanel2.getAxisX().setPosition([0,0.5]);  // > Initialization.axes:5
    _view.plottingPanel2.getTitleX().setPosition([0.95,0.5]);  // > Initialization.axes:6
    _view.plottingPanel2.getAxisY().setPosition([0.045,0]);  // > Initialization.axes:7
    _view.plottingPanel2.getTitleY().setPosition([0.130,0.85]);  // > Initialization.axes:8
  });

  _model.addToInitialization(function() {
    if (!__pagesEnabled["undefined"]) return;
    if (eulershow==undefined)eulershow=true;  // > Initialization.undefined:1
    if (eulercromershow==undefined)eulercromershow=false;  // > Initialization.undefined:2
    if (exactshow==undefined)exactshow=false;  // > Initialization.undefined:3
  });

  _model.addToInitialization(function() {
    _initializeSolvers();
  });

  _model.addToEvolution(function() {
    if (!__pagesEnabled["Euler"]) return;
    // Main loop: Euler algorithm, euler-Cromer, and evaluation of exact solutions for v and y  // > Evolution.Euler:1
    //for (var i=2; i< t_steps+1;i++){  // > Evolution.Euler:2
    	//t = t + dt;t  // > Evolution.Euler:3
    	//time= time+dt;  // > Evolution.Euler:4
    	// Euler  // > Evolution.Euler:5
    	v_Eulert=v_Eulerts-k*y_Eulerts*dtt/m;  // > Evolution.Euler:6
    	//alert("v_Eulert="+v_Eulert);  // > Evolution.Euler:7
    	y_Eulert=y_Eulerts+v_Eulerts*dtt;  // > Evolution.Euler:8
    	//alert("y_Eulert="+y_Eulert);  // > Evolution.Euler:9
    	  // > Evolution.Euler:10
    	// Euler-Cromer  // > Evolution.Euler:11
    	//v_EC[i]=v_EC[i-1]-k*y_EC[i-1]*dt/m;  // > Evolution.Euler:12
    	//y_EC[i]=y_EC[i-1]+v_EC[i]*dt;  // > Evolution.Euler:13
    	// Exact (assuming vi=0)  // > Evolution.Euler:14
    	//v_exact[i]=-yi*Math.sqrt(k/m)*Math.sin(Math.sqrt(k/m)*time[i]);  // > Evolution.Euler:15
    	//y_exact[i]=yi*Math.cos(Math.sqrt(k/m)*time[i]);  // > Evolution.Euler:16
    	// Energies  // > Evolution.Euler:17
    	energyEulert=0.5*m*v_Eulert**2+0.5*k*(y_Eulert+m*g/k)**2-m*g*(y_Eulert+m*g/k);  // > Evolution.Euler:18
    	//energyEC[i]=0.5*m*v_EC[i]**2+0.5*k*(y_EC[i]+m*g/k)**2-m*g*(y_EC[i]+m*g/k);  // > Evolution.Euler:19
    //}  // > Evolution.Euler:20
    //t = t + dtt;  // > Evolution.Euler:21
  });

  _model.addToEvolution(function() {
    if (!__pagesEnabled["euler-Cromer"]) return;
    // Main loop: Euler algorithm, euler-Cromer, and evaluation of exact solutions for v and y  // > Evolution.euler-Cromer:1
    //for (var i=2; i< t_steps+1;i++){  // > Evolution.euler-Cromer:2
    	//t = t + dt;  // > Evolution.euler-Cromer:3
    	//time= time+dt;  // > Evolution.euler-Cromer:4
    	// Euler  // > Evolution.euler-Cromer:5
    	//v_Euler[i]=v_Euler[i-1]-k*y_Euler[i-1]*dt/m;  // > Evolution.euler-Cromer:6
    	//y_Euler[i]=y_Euler[i-1]+v_Euler[i-1]*dt;  // > Evolution.euler-Cromer:7
    	// Euler-Cromer  // > Evolution.euler-Cromer:8
    	v_ECt=v_ECt-k*y_ECt*dtt/m;  // > Evolution.euler-Cromer:9
    	y_ECt=y_ECt+v_ECt*dtt;  // > Evolution.euler-Cromer:10
    	//alert("y_ECt="+y_ECt);  // > Evolution.euler-Cromer:11
    	// Exact (assuming vi=0)  // > Evolution.euler-Cromer:12
    	//v_exact[i]=-yi*Math.sqrt(k/m)*Math.sin(Math.sqrt(k/m)*time[i]);  // > Evolution.euler-Cromer:13
    	//y_exact[i]=yi*Math.cos(Math.sqrt(k/m)*time[i]);  // > Evolution.euler-Cromer:14
    	// Energies  // > Evolution.euler-Cromer:15
    	//energyEuler[i]=0.5*m*v_Euler[i]**2+0.5*k*(y_Euler[i]+m*g/k)**2-m*g*(y_Euler[i]+m*g/k);  // > Evolution.euler-Cromer:16
    	energyECt=0.5*m*v_ECt**2+0.5*k*(y_ECt+m*g/k)**2-m*g*(y_ECt+m*g/k);  // > Evolution.euler-Cromer:17
    //}  // > Evolution.euler-Cromer:18
    t = t + dtt; //only can do once increment of time step  // > Evolution.euler-Cromer:19
    //store values of euler  // > Evolution.euler-Cromer:20
    v_Eulerts=v_Eulert;  // > Evolution.euler-Cromer:21
    y_Eulerts=y_Eulert;  // > Evolution.euler-Cromer:22
  });

  _model.addToEvolution(function() {
    if (!__pagesEnabled["exact"]) return;
    v_exactt=-yi*Math.sqrt(k/m)*Math.sin(Math.sqrt(k/m)*t);  // > Evolution.exact:1
    	y_exactt=yi*Math.cos(Math.sqrt(k/m)*t);  // > Evolution.exact:2
  });

  _model.addToEvolution(function() {
    if (!__pagesEnabled["Evol Page"]) return;
    _ODEi_evolution1.step();
  });

  _model.addToEvolution(function() {
    if (!__pagesEnabled["Evol Page 2"]) return;
    _ODEi_evolution2.step();
  });

  _model.addToFixedRelations(function() { _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); });

  _model.addToFixedRelations(function() {
    if (!__pagesEnabled["ExactSolution"]) return;
    // Main loop: Euler algorithm, euler-Cromer, and evaluation of exact solutions for v and y  // > FixedRelations.ExactSolution:1
    for (var i=2; i< t_steps+1;i++){  // > FixedRelations.ExactSolution:2
    	time[i] = time[i-1] + dt;  // > FixedRelations.ExactSolution:3
    	//time= time+dt;  // > FixedRelations.ExactSolution:4
    	// Euler  // > FixedRelations.ExactSolution:5
    	//v_Euler[i]=v_Euler[i-1]-k*y_Euler[i-1]*dt/m;  // > FixedRelations.ExactSolution:6
    	//y_Euler[i]=y_Euler[i-1]+v_Euler[i-1]*dt;  // > FixedRelations.ExactSolution:7
    	// Euler-Cromer  // > FixedRelations.ExactSolution:8
    	//v_EC[i]=v_EC[i-1]-k*y_EC[i-1]*dt/m;  // > FixedRelations.ExactSolution:9
    	//y_EC[i]=y_EC[i-1]+v_EC[i]*dt;  // > FixedRelations.ExactSolution:10
    	// Exact (assuming vi=0)  // > FixedRelations.ExactSolution:11
    	v_exact[i]=-yi*Math.sqrt(k/m)*Math.sin(Math.sqrt(k/m)*time[i]);  // > FixedRelations.ExactSolution:12
    	y_exact[i]=yi*Math.cos(Math.sqrt(k/m)*time[i]);  // > FixedRelations.ExactSolution:13
    	// Energies  // > FixedRelations.ExactSolution:14
    	energyEuler[i]=0.5*m*v_Euler[i]**2+0.5*k*(y_Euler[i]+m*g/k)**2-m*g*(y_Euler[i]+m*g/k);  // > FixedRelations.ExactSolution:15
    	energyEC[i]=0.5*m*v_EC[i]**2+0.5*k*(y_EC[i]+m*g/k)**2-m*g*(y_EC[i]+m*g/k);  // > FixedRelations.ExactSolution:16
    }  // > FixedRelations.ExactSolution:17
  });

  _model.addToFixedRelations(function() { _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); });

  function _initializeSolvers() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].initializeSolver();
  }

  function _automaticResetSolvers() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].automaticResetSolver();
  }

  _model.resetSolvers = function() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].resetSolver();
  };

  _getODE = function (_odeName) {
    if (_odeName=="Evol Page") return _ODEi_evolution1;
    if (_odeName=="Evol Page 2") return _ODEi_evolution2;
    return null;
  }

  function _getEventSolver(_odeName) {
    var ode = _getODE(_odeName);
    if (ode===null) return null;
    return ode.getEventSolver();
  }

  function _setSolverClass(_odeName, _engine) {
    var ode = _getODE(_odeName);
    if (ode===null) return;
    if (!_engine.setODE) {
      var classname = _engine.toLowerCase();
      if      (classname.indexOf("boga")>=0)   _engine = EJSS_ODE_SOLVERS.bogackiShampine23;
      else if (classname.indexOf("cash")>=0)   _engine = EJSS_ODE_SOLVERS.cashKarp45;
      else if (classname.indexOf("dopri5")>=0) _engine = EJSS_ODE_SOLVERS.dopri5;
      else if (classname.indexOf("dopri8")>=0) _engine = EJSS_ODE_SOLVERS.dopri853;
      else if (classname.indexOf("richa")>=0)  _engine = EJSS_ODE_SOLVERS.eulerRichardson;
      else if (classname.indexOf("euler")>=0)  _engine = EJSS_ODE_SOLVERS.euler;
      else if (classname.indexOf("fehlberg87")>=0) _engine = EJSS_ODE_SOLVERS.fehlberg87;
      else if (classname.indexOf("fehlberg8")>=0)  _engine = EJSS_ODE_SOLVERS.fehlberg8;
      else if (classname.indexOf("radau")>=0)   _engine = EJSS_ODE_SOLVERS.radau5;
      else if (classname.indexOf("runge")>=0)  _engine = EJSS_ODE_SOLVERS.rungeKutta4;
      else if (classname.indexOf("rk4")>=0)    _engine = EJSS_ODE_SOLVERS.rungeKutta4;
      else if (classname.indexOf("verlet")>=0) _engine = EJSS_ODE_SOLVERS.velocityVerlet;
    }
    if (_engine) ode.setSolverClass(_engine);
  }

  function _ODE_evolution1() {
    var __odeSelf = {};
    var __eventSolver;
    var __solverClass = EJSS_ODE_SOLVERS.euler;
    var __state=[];
    var __ignoreErrors=false;
    var __mustInitialize=true;
    var __isEnabled=true;
    var __mustUserReinitialize=false;
    var __mustReinitialize=true;


    __odeSelf._getOdeVars = function (){ return["y_Eulert","v_Eulert","t"]};

    __odeSelf.setSolverClass = function(__aSolverClass) {
      __solverClass = __aSolverClass;
      __instantiateSolver();
    };

    function __instantiateSolver() {
      __state=[];
      __pushState();
      __eventSolver = EJSS_ODE_SOLVERS.interpolatorEventSolver(__solverClass(),__odeSelf);
      __mustInitialize = true;
    }

    __odeSelf.setEnabled = function(_enabled) { __isEnabled = _enabled; };

    __odeSelf.getIndependentVariableValue = function() { return __eventSolver.getIndependentVariableValue(); };

    __odeSelf.getInternalStepSize = function() { return __eventSolver.getInternalStepSize(); };

    __odeSelf.isAccelerationIndependentOfVelocity = function() { return false; };

    __odeSelf.initializeSolver = function() {
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); return; }
      __pushState();
      __eventSolver.initialize(dtt);
      __eventSolver.setBestInterpolation(false);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.removeAllEvents();
      for(k in userEvents1){__eventSolver.addEvent(userEvents1[k]);}
      __eventSolver.setEstimateFirstStep(false);
      __eventSolver.setEnableExceptions(false);
      __eventSolver.setTolerances(0.00001,0.00001);
      __mustReinitialize = true;
      __mustInitialize = false;
    };

    function __pushState() {
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        if (__state[__cIn]!=y_Eulert) __mustReinitialize = true;
        __state[__cIn++] = y_Eulert;
        if (__state[__cIn]!=v_Eulert) __mustReinitialize = true;
        __state[__cIn++] = v_Eulert;
        if (__state[__cIn]!=t) __mustReinitialize = true;
        __state[__cIn++] = t;
    }

    function __arraysChanged () {
      return false;
    }

    __odeSelf.getEventSolver = function() {
      return __eventSolver;
    };

    __odeSelf.resetSolver = function() {
      __mustUserReinitialize = true;
    };

    __odeSelf.automaticResetSolver = function() {
      __mustReinitialize = true;
    };

    function __errorAction () {
      if (__ignoreErrors) return;
      console.log (__eventSolver.getErrorMessage());
      _pause();
      // Make sure the solver is reinitialized;
      __mustReinitialize = true;
    }

    __odeSelf.step = function() { return __privateStep(false); };

    __odeSelf.solverStep = function() { return __privateStep(true); };

    function __privateStep(__takeMaximumStep) {
      if (!__isEnabled) return 0;
      if (dtt===0) return 0;
      if (__mustInitialize) __odeSelf.initializeSolver();
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); }
      __eventSolver.setStepSize(dtt);
      __eventSolver.setInternalStepSize(dtt);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.setTolerances(0.00001,0.00001);
      __pushState();
      if (__mustUserReinitialize) { 
        __eventSolver.userReinitialize();
        __mustUserReinitialize = false;
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      else if (__mustReinitialize) { 
        __eventSolver.reinitialize();
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      var __stepTaken = __takeMaximumStep ? __eventSolver.maxStep() : __eventSolver.step();
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        y_Eulert = __state[__cOut++];
        v_Eulert = __state[__cOut++];
        t = __state[__cOut++];
      // Check for error
      if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      return __stepTaken;
    }

    __odeSelf.getState = function() { return __state; };

    __odeSelf.getRate = function(_aState,_aRate) {
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var y_Eulert = _aState[__cOut++];
        var v_Eulert = _aState[__cOut++];
        var t = _aState[__cOut++];
      // Compute the rate
        var __cRate=0;
        _aRate[__cRate++] = v_Eulert; // Rate for ODE: Evol Page:y_Eulert
        _aRate[__cRate++] = -k/m*y_Eulert; // Rate for ODE: Evol Page:v_Eulert
        _aRate[__cRate++] = 1; // independent variable
        return _aRate;
    }; //end of getRate

    __odeSelf._addEvent = function(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent){
    var User_Event = function (userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent) {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return eventType; };

      _eventSelf.getRootFindingMethod = function() { return eventMethod; };

      _eventSelf.getMaxIterations = function() { return maxIter; };

      _eventSelf.getTolerance = function() { return eventTolerance; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var y_Eulert = _aState[__cOut++];
        var v_Eulert = _aState[__cOut++];
        var t = _aState[__cOut++];
      return eval(userCondition);
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        y_Eulert = __state[__cOut++];
        v_Eulert = __state[__cOut++];
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = y_Eulert;
        __state[__cIn++] = v_Eulert;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        if (undefined != functions) eval(functions.toString());
        eval(userAction);
        return endAtEvent;
      }

      return _eventSelf;
    }; // End of event

   userEvents1.push(User_Event(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent));
   }

    __instantiateSolver();

    return __odeSelf;
  }

  function _historic_y_Eulert(__time) {
    var __index = 0;
    return _ODEi_evolution1.getEventSolver().getStateHistory().interpolate(__time,__index);
  }

  function _historic_v_Eulert(__time) {
    var __index = 0 + 1;
    return _ODEi_evolution1.getEventSolver().getStateHistory().interpolate(__time,__index);
  }

  function _ODE_evolution2() {
    var __odeSelf = {};
    var __eventSolver;
    var __solverClass = EJSS_ODE_SOLVERS.eulerRichardson;
    var __state=[];
    var __ignoreErrors=false;
    var __mustInitialize=true;
    var __isEnabled=true;
    var __mustUserReinitialize=false;
    var __mustReinitialize=true;


    __odeSelf._getOdeVars = function (){ return["y_ECt","v_ECt","tEC"]};

    __odeSelf.setSolverClass = function(__aSolverClass) {
      __solverClass = __aSolverClass;
      __instantiateSolver();
    };

    function __instantiateSolver() {
      __state=[];
      __pushState();
      __eventSolver = EJSS_ODE_SOLVERS.interpolatorEventSolver(__solverClass(),__odeSelf);
      __mustInitialize = true;
    }

    __odeSelf.setEnabled = function(_enabled) { __isEnabled = _enabled; };

    __odeSelf.getIndependentVariableValue = function() { return __eventSolver.getIndependentVariableValue(); };

    __odeSelf.getInternalStepSize = function() { return __eventSolver.getInternalStepSize(); };

    __odeSelf.isAccelerationIndependentOfVelocity = function() { return false; };

    __odeSelf.initializeSolver = function() {
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); return; }
      __pushState();
      __eventSolver.initialize(dtt2);
      __eventSolver.setBestInterpolation(false);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.removeAllEvents();
      for(k in userEvents2){__eventSolver.addEvent(userEvents2[k]);}
      __eventSolver.setEstimateFirstStep(false);
      __eventSolver.setEnableExceptions(false);
      __eventSolver.setTolerances(0.00001,0.00001);
      __mustReinitialize = true;
      __mustInitialize = false;
    };

    function __pushState() {
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        if (__state[__cIn]!=y_ECt) __mustReinitialize = true;
        __state[__cIn++] = y_ECt;
        if (__state[__cIn]!=v_ECt) __mustReinitialize = true;
        __state[__cIn++] = v_ECt;
        if (__state[__cIn]!=tEC) __mustReinitialize = true;
        __state[__cIn++] = tEC;
    }

    function __arraysChanged () {
      return false;
    }

    __odeSelf.getEventSolver = function() {
      return __eventSolver;
    };

    __odeSelf.resetSolver = function() {
      __mustUserReinitialize = true;
    };

    __odeSelf.automaticResetSolver = function() {
      __mustReinitialize = true;
    };

    function __errorAction () {
      if (__ignoreErrors) return;
      console.log (__eventSolver.getErrorMessage());
      _pause();
      // Make sure the solver is reinitialized;
      __mustReinitialize = true;
    }

    __odeSelf.step = function() { return __privateStep(false); };

    __odeSelf.solverStep = function() { return __privateStep(true); };

    function __privateStep(__takeMaximumStep) {
      if (!__isEnabled) return 0;
      if (dtt2===0) return 0;
      if (__mustInitialize) __odeSelf.initializeSolver();
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); }
      __eventSolver.setStepSize(dtt2);
      __eventSolver.setInternalStepSize(dtt2);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.setTolerances(0.00001,0.00001);
      __pushState();
      if (__mustUserReinitialize) { 
        __eventSolver.userReinitialize();
        __mustUserReinitialize = false;
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      else if (__mustReinitialize) { 
        __eventSolver.reinitialize();
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      var __stepTaken = __takeMaximumStep ? __eventSolver.maxStep() : __eventSolver.step();
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        y_ECt = __state[__cOut++];
        v_ECt = __state[__cOut++];
        tEC = __state[__cOut++];
      // Check for error
      if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      return __stepTaken;
    }

    __odeSelf.getState = function() { return __state; };

    __odeSelf.getRate = function(_aState,_aRate) {
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var y_ECt = _aState[__cOut++];
        var v_ECt = _aState[__cOut++];
        var tEC = _aState[__cOut++];
      // Compute the rate
        var __cRate=0;
        _aRate[__cRate++] = v_ECt; // Rate for ODE: Evol Page 2:y_ECt
        _aRate[__cRate++] = -k/m*y_ECt; // Rate for ODE: Evol Page 2:v_ECt
        _aRate[__cRate++] = 1; // independent variable
        return _aRate;
    }; //end of getRate

    __odeSelf._addEvent = function(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent){
    var User_Event = function (userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent) {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return eventType; };

      _eventSelf.getRootFindingMethod = function() { return eventMethod; };

      _eventSelf.getMaxIterations = function() { return maxIter; };

      _eventSelf.getTolerance = function() { return eventTolerance; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var y_ECt = _aState[__cOut++];
        var v_ECt = _aState[__cOut++];
        var tEC = _aState[__cOut++];
      return eval(userCondition);
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        y_ECt = __state[__cOut++];
        v_ECt = __state[__cOut++];
        tEC = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = y_ECt;
        __state[__cIn++] = v_ECt;
        __state[__cIn++] = tEC;
        return _returnValue;
      };

      function __userDefinedAction() {
        if (undefined != functions) eval(functions.toString());
        eval(userAction);
        return endAtEvent;
      }

      return _eventSelf;
    }; // End of event

   userEvents2.push(User_Event(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent));
   }

    __instantiateSolver();

    return __odeSelf;
  }

  function _historic_y_ECt(__time) {
    var __index = 0;
    return _ODEi_evolution2.getEventSolver().getStateHistory().interpolate(__time,__index);
  }

  function _historic_v_ECt(__time) {
    var __index = 0 + 1;
    return _ODEi_evolution2.getEventSolver().getStateHistory().interpolate(__time,__index);
  }

    _model._fontResized = function(iBase,iSize,iDelta) {
      _view._fontResized(iBase,iSize,iDelta);
  }; // end of _fontResized

  function _getViews() {
    var _viewsInfo = [];
    var _counter = 0;
    _viewsInfo[_counter++] = { name : "HtmlView Page", width : 800, height : 600 };
    return _viewsInfo;
  } // end of _getViews

  function _selectView(_viewNumber) {
    _view = null;
    _view = new PICUP_Hanging_SHO_Python_frem_View(_topFrame,_viewNumber,_libraryPath,_codebasePath);
    var _view_super_reset = _view._reset;
    _view._reset = function() {
      _view_super_reset();
      switch(_viewNumber) {
        case -10 : break; // make Lint happy
        default :
        case 0:
          _view.executionPanel.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'executionPanel'
          _view.comboBox.linkProperty("Options",  function() { return ["s-t","v-t","e-t","both","","Euler show","Euler hide","Euler Cromer show","Euler Cromer hide","Exact show","Exact hide"]; } ); // HtmlView Page linking property 'Options' for element 'comboBox'
          _view.comboBox.setAction("OnChange", function(_data,_info) {
  var opts = _view.comboBox.getProperty("SelectedOptions");  // array of options
      var option = (opts.length > 0)? opts[0]:""; // selected option 
  //_initialize();
  if (  option=="s-t"){
  Height1= window.innerHeight*0.88;  
  stshow=true;
  vtshow=false;
  etshow=false;
    }
  else if (  option=="v-t"){
  Height2= window.innerHeight*0.88;
  stshow=false;
  vtshow=true;
  etshow=false;
    }
    else if (  option=="e-t"){
  Height3= window.innerHeight*0.88;
  stshow=false;
  vtshow=false;
  etshow=true;
    }
    else if (  option=="both"){
  Height1= window.innerHeight*0.44; //need window.innerHeight instead of vh or % for second display to work properly
  Height2= window.innerHeight*0.44;
  stshow=true;
  vtshow=true;
    }
  //"Euler hide","Euler Cromer show","Euler Cromer hide","Exact show","Exact hide"
  else if (  option=="Euler show"){
  eulershow=true;
    }
    else if (  option=="Euler hide"){
  eulershow=false;
    }
  else if (  option=="Euler Cromer show"){
  eulercromershow=true;
    }
    else if (  option=="Euler Cromer hide"){
  eulercromershow=false;
    }
    else if (  option=="Exact show"){
  exactshow=true;
    }
    else if (  option=="Exact hide"){
  exactshow=false;
    }

}); // HtmlView Page setting action 'OnChange' for element 'comboBox'
          _view.comboBox.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'comboBox'
          _view.dtfield.linkProperty("Value",  function() { return dt; }, function(_v) { dt = _v; } ); // HtmlView Page linking property 'Value' for element 'dtfield'
          _view.dtfield.setAction("OnChange", function(_data,_info) {
  if (dt>0.3){dt=0.3;}
  if (dt<-0.3){dt=-0.3;}
  _initialize();

}); // HtmlView Page setting action 'OnChange' for element 'dtfield'
          _view.dtfield.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'dtfield'
          _view.vifield.linkProperty("Value",  function() { return vi; }, function(_v) { vi = _v; } ); // HtmlView Page linking property 'Value' for element 'vifield'
          _view.vifield.setAction("OnChange", _initialize); // HtmlView Page setting action 'OnChange' for element 'vifield'
          _view.vifield.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'vifield'
          _view.yifield.linkProperty("Value",  function() { return yi; }, function(_v) { yi = _v; } ); // HtmlView Page linking property 'Value' for element 'yifield'
          _view.yifield.setAction("OnChange", _initialize); // HtmlView Page setting action 'OnChange' for element 'yifield'
          _view.yifield.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'yifield'
          _view.mfield.linkProperty("Value",  function() { return m; }, function(_v) { m = _v; } ); // HtmlView Page linking property 'Value' for element 'mfield'
          _view.mfield.setAction("OnChange", _initialize); // HtmlView Page setting action 'OnChange' for element 'mfield'
          _view.mfield.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'mfield'
          _view.gfield.linkProperty("Value",  function() { return g; }, function(_v) { g = _v; } ); // HtmlView Page linking property 'Value' for element 'gfield'
          _view.gfield.setAction("OnChange", _initialize); // HtmlView Page setting action 'OnChange' for element 'gfield'
          _view.gfield.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'gfield'
          _view.kfield.linkProperty("Value",  function() { return k; }, function(_v) { k = _v; } ); // HtmlView Page linking property 'Value' for element 'kfield'
          _view.kfield.setAction("OnChange", _initialize); // HtmlView Page setting action 'OnChange' for element 'kfield'
          _view.kfield.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'kfield'
          _view.tstepfield.linkProperty("Value",  function() { return t_steps; }, function(_v) { t_steps = _v; } ); // HtmlView Page linking property 'Value' for element 'tstepfield'
          _view.tstepfield.setAction("OnChange", _initialize); // HtmlView Page setting action 'OnChange' for element 'tstepfield'
          _view.tstepfield.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'tstepfield'
          _view.playPauseButton.setAction("OffClick", function(_data,_info) {
  //text="paused";
  isPaused=true;
  _pause();

}); // HtmlView Page setting action 'OffClick' for element 'playPauseButton'
          _view.playPauseButton.linkProperty("State",  function() { return _isPaused; } ); // HtmlView Page linking property 'State' for element 'playPauseButton'
          _view.playPauseButton.setAction("OnClick", function(_data,_info) {
  _play();
  isPaused=false;
  //text="playing";

}); // HtmlView Page setting action 'OnClick' for element 'playPauseButton'
          _view.playPauseButton.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'playPauseButton'
          _view.resetButton.setAction("OnClick", _reset); // HtmlView Page setting action 'OnClick' for element 'resetButton'
          _view.resetButton.linkProperty("Font",  function() { return fontb; }, function(_v) { fontb = _v; } ); // HtmlView Page linking property 'Font' for element 'resetButton'
          _view.plottingPanel.linkProperty("Height",  function() { return Height1; }, function(_v) { Height1 = _v; } ); // HtmlView Page linking property 'Height' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("AxisYFont",  function() { return fonta; }, function(_v) { fonta = _v; } ); // HtmlView Page linking property 'AxisYFont' for element 'plottingPanel'
          _view.plottingPanel.setAction("OnDoubleClick", function(_data,_info) {
  toggleFullScreen();

}); // HtmlView Page setting action 'OnDoubleClick' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("TLMessage",  function() { return "y_Eulert="+y_Eulert.toFixed(2)+"\nv_Eulert="+v_Eulert.toFixed(2)+"\ny_ECt="+y_ECt.toFixed(2)+"\nv_ECt="+v_ECt.toFixed(2)+"\ny_exactt="+y_exactt.toFixed(2)+"\nv_exactt="+v_exactt.toFixed(2); } ); // HtmlView Page linking property 'TLMessage' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("TitleYFont",  function() { return fonta; }, function(_v) { fonta = _v; } ); // HtmlView Page linking property 'TitleYFont' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("TitleXFont",  function() { return fonta; }, function(_v) { fonta = _v; } ); // HtmlView Page linking property 'TitleXFont' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("AxisXFont",  function() { return fonta; }, function(_v) { fonta = _v; } ); // HtmlView Page linking property 'AxisXFont' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("TitleFont",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'TitleFont' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("BRMessage",  function() { return "t="+t.toFixed(2)+" s"; } ); // HtmlView Page linking property 'BRMessage' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("Display",  function() { return stshow?"inline-block":"none"; } ); // HtmlView Page linking property 'Display' for element 'plottingPanel'
          _view.vEuler.linkProperty("Maximum",  function() { return t_steps; }, function(_v) { t_steps = _v; } ); // HtmlView Page linking property 'Maximum' for element 'vEuler'
          _view.vEuler.linkProperty("InputX",  function() { return time; }, function(_v) { time = _v; } ); // HtmlView Page linking property 'InputX' for element 'vEuler'
          _view.vEuler.linkProperty("Visibility",  function() { return eulershow; }, function(_v) { eulershow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'vEuler'
          _view.vEuler.linkProperty("InputY",  function() { return y_Euler; }, function(_v) { y_Euler = _v; } ); // HtmlView Page linking property 'InputY' for element 'vEuler'
          _view.vEC.linkProperty("Maximum",  function() { return t_steps; }, function(_v) { t_steps = _v; } ); // HtmlView Page linking property 'Maximum' for element 'vEC'
          _view.vEC.linkProperty("InputX",  function() { return time; }, function(_v) { time = _v; } ); // HtmlView Page linking property 'InputX' for element 'vEC'
          _view.vEC.linkProperty("Visibility",  function() { return eulercromershow; }, function(_v) { eulercromershow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'vEC'
          _view.vEC.linkProperty("InputY",  function() { return y_EC; }, function(_v) { y_EC = _v; } ); // HtmlView Page linking property 'InputY' for element 'vEC'
          _view.vtheory2.linkProperty("Maximum",  function() { return t_steps; }, function(_v) { t_steps = _v; } ); // HtmlView Page linking property 'Maximum' for element 'vtheory2'
          _view.vtheory2.linkProperty("InputX",  function() { return time; }, function(_v) { time = _v; } ); // HtmlView Page linking property 'InputX' for element 'vtheory2'
          _view.vtheory2.linkProperty("Visibility",  function() { return exactshow; }, function(_v) { exactshow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'vtheory2'
          _view.vtheory2.linkProperty("InputY",  function() { return y_exact; }, function(_v) { y_exact = _v; } ); // HtmlView Page linking property 'InputY' for element 'vtheory2'
          _view.Euler.linkProperty("X",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'X' for element 'Euler'
          _view.Euler.linkProperty("Y",  function() { return y_Eulert; }, function(_v) { y_Eulert = _v; } ); // HtmlView Page linking property 'Y' for element 'Euler'
          _view.Euler.linkProperty("Visibility",  function() { return eulershow; }, function(_v) { eulershow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'Euler'
          _view.vEuler2.linkProperty("InputX",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'InputX' for element 'vEuler2'
          _view.vEuler2.linkProperty("Visibility",  function() { return eulershow; }, function(_v) { eulershow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'vEuler2'
          _view.vEuler2.linkProperty("InputY",  function() { return y_Eulert; }, function(_v) { y_Eulert = _v; } ); // HtmlView Page linking property 'InputY' for element 'vEuler2'
          _view.EC.linkProperty("X",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'X' for element 'EC'
          _view.EC.linkProperty("Y",  function() { return y_ECt; }, function(_v) { y_ECt = _v; } ); // HtmlView Page linking property 'Y' for element 'EC'
          _view.EC.linkProperty("Visibility",  function() { return eulercromershow; }, function(_v) { eulercromershow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'EC'
          _view.plottingPanel2.linkProperty("Height",  function() { return Height2; }, function(_v) { Height2 = _v; } ); // HtmlView Page linking property 'Height' for element 'plottingPanel2'
          _view.plottingPanel2.linkProperty("AxisYFont",  function() { return fonta; }, function(_v) { fonta = _v; } ); // HtmlView Page linking property 'AxisYFont' for element 'plottingPanel2'
          _view.plottingPanel2.setAction("OnDoubleClick", function(_data,_info) {
  toggleFullScreen();

}); // HtmlView Page setting action 'OnDoubleClick' for element 'plottingPanel2'
          _view.plottingPanel2.linkProperty("TLMessage",  function() { return "y_Eulert="+y_Eulert.toFixed(2)+"\nv_Eulert="+v_Eulert.toFixed(2)+"\ny_ECt="+y_ECt.toFixed(2)+"\nv_ECt="+v_ECt.toFixed(2)+"\ny_exactt="+y_exactt.toFixed(2)+"\nv_exactt="+v_exactt.toFixed(2); } ); // HtmlView Page linking property 'TLMessage' for element 'plottingPanel2'
          _view.plottingPanel2.linkProperty("TitleYFont",  function() { return fonta; }, function(_v) { fonta = _v; } ); // HtmlView Page linking property 'TitleYFont' for element 'plottingPanel2'
          _view.plottingPanel2.linkProperty("TitleXFont",  function() { return fonta; }, function(_v) { fonta = _v; } ); // HtmlView Page linking property 'TitleXFont' for element 'plottingPanel2'
          _view.plottingPanel2.setAction("OnMove", _view._update); // HtmlView Page setting action 'OnMove' for element 'plottingPanel2'
          _view.plottingPanel2.linkProperty("AxisXFont",  function() { return fonta; }, function(_v) { fonta = _v; } ); // HtmlView Page linking property 'AxisXFont' for element 'plottingPanel2'
          _view.plottingPanel2.linkProperty("TitleFont",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'TitleFont' for element 'plottingPanel2'
          _view.plottingPanel2.linkProperty("BRMessage",  function() { return "t="+t.toFixed(2)+" s"; } ); // HtmlView Page linking property 'BRMessage' for element 'plottingPanel2'
          _view.plottingPanel2.linkProperty("Display",  function() { return vtshow?"inline-block":"none"; } ); // HtmlView Page linking property 'Display' for element 'plottingPanel2'
          _view.vEuler3.linkProperty("Maximum",  function() { return t_steps; }, function(_v) { t_steps = _v; } ); // HtmlView Page linking property 'Maximum' for element 'vEuler3'
          _view.vEuler3.linkProperty("InputX",  function() { return time; }, function(_v) { time = _v; } ); // HtmlView Page linking property 'InputX' for element 'vEuler3'
          _view.vEuler3.linkProperty("Visibility",  function() { return eulershow; }, function(_v) { eulershow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'vEuler3'
          _view.vEuler3.linkProperty("InputY",  function() { return v_Euler; }, function(_v) { v_Euler = _v; } ); // HtmlView Page linking property 'InputY' for element 'vEuler3'
          _view.vEC2.linkProperty("Maximum",  function() { return t_steps; }, function(_v) { t_steps = _v; } ); // HtmlView Page linking property 'Maximum' for element 'vEC2'
          _view.vEC2.linkProperty("InputX",  function() { return time; }, function(_v) { time = _v; } ); // HtmlView Page linking property 'InputX' for element 'vEC2'
          _view.vEC2.linkProperty("Visibility",  function() { return eulercromershow; }, function(_v) { eulercromershow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'vEC2'
          _view.vEC2.linkProperty("InputY",  function() { return v_EC; }, function(_v) { v_EC = _v; } ); // HtmlView Page linking property 'InputY' for element 'vEC2'
          _view.vtheory.linkProperty("Maximum",  function() { return t_steps; }, function(_v) { t_steps = _v; } ); // HtmlView Page linking property 'Maximum' for element 'vtheory'
          _view.vtheory.linkProperty("InputX",  function() { return time; }, function(_v) { time = _v; } ); // HtmlView Page linking property 'InputX' for element 'vtheory'
          _view.vtheory.linkProperty("Visibility",  function() { return exactshow; }, function(_v) { exactshow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'vtheory'
          _view.vtheory.linkProperty("InputY",  function() { return v_exact; }, function(_v) { v_exact = _v; } ); // HtmlView Page linking property 'InputY' for element 'vtheory'
          _view.Euler2.linkProperty("X",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'X' for element 'Euler2'
          _view.Euler2.linkProperty("Y",  function() { return v_Eulert; }, function(_v) { v_Eulert = _v; } ); // HtmlView Page linking property 'Y' for element 'Euler2'
          _view.Euler2.linkProperty("Visibility",  function() { return eulershow; }, function(_v) { eulershow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'Euler2'
          _view.vEuler22.linkProperty("InputX",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'InputX' for element 'vEuler22'
          _view.vEuler22.linkProperty("Visibility",  function() { return eulershow; }, function(_v) { eulershow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'vEuler22'
          _view.vEuler22.linkProperty("InputY",  function() { return v_Eulert; }, function(_v) { v_Eulert = _v; } ); // HtmlView Page linking property 'InputY' for element 'vEuler22'
          _view.EC2.linkProperty("X",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'X' for element 'EC2'
          _view.EC2.linkProperty("Y",  function() { return v_ECt; }, function(_v) { v_ECt = _v; } ); // HtmlView Page linking property 'Y' for element 'EC2'
          _view.EC2.linkProperty("Visibility",  function() { return eulercromershow; }, function(_v) { eulercromershow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'EC2'
          _view.plottingPanel3.linkProperty("Height",  function() { return Height3; }, function(_v) { Height3 = _v; } ); // HtmlView Page linking property 'Height' for element 'plottingPanel3'
          _view.plottingPanel3.linkProperty("AxisYFont",  function() { return fonta; }, function(_v) { fonta = _v; } ); // HtmlView Page linking property 'AxisYFont' for element 'plottingPanel3'
          _view.plottingPanel3.setAction("OnDoubleClick", function(_data,_info) {
  toggleFullScreen();

}); // HtmlView Page setting action 'OnDoubleClick' for element 'plottingPanel3'
          _view.plottingPanel3.linkProperty("TLMessage",  function() { return "y_Eulert="+y_Eulert.toFixed(2)+"\nv_Eulert="+v_Eulert.toFixed(2)+"\ny_ECt="+y_ECt.toFixed(2)+"\nv_ECt="+v_ECt.toFixed(2)+"\ny_exactt="+y_exactt.toFixed(2)+"\nv_exactt="+v_exactt.toFixed(2); } ); // HtmlView Page linking property 'TLMessage' for element 'plottingPanel3'
          _view.plottingPanel3.linkProperty("TitleYFont",  function() { return fonta; }, function(_v) { fonta = _v; } ); // HtmlView Page linking property 'TitleYFont' for element 'plottingPanel3'
          _view.plottingPanel3.linkProperty("TitleXFont",  function() { return fonta; }, function(_v) { fonta = _v; } ); // HtmlView Page linking property 'TitleXFont' for element 'plottingPanel3'
          _view.plottingPanel3.linkProperty("AxisXFont",  function() { return fonta; }, function(_v) { fonta = _v; } ); // HtmlView Page linking property 'AxisXFont' for element 'plottingPanel3'
          _view.plottingPanel3.linkProperty("TitleFont",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'TitleFont' for element 'plottingPanel3'
          _view.plottingPanel3.linkProperty("BRMessage",  function() { return "t="+t.toFixed(2)+" s"; } ); // HtmlView Page linking property 'BRMessage' for element 'plottingPanel3'
          _view.plottingPanel3.linkProperty("Display",  function() { return etshow?"inline-block":"none"; } ); // HtmlView Page linking property 'Display' for element 'plottingPanel3'
          _view.vEuler4.linkProperty("Maximum",  function() { return t_steps; }, function(_v) { t_steps = _v; } ); // HtmlView Page linking property 'Maximum' for element 'vEuler4'
          _view.vEuler4.linkProperty("InputX",  function() { return time; }, function(_v) { time = _v; } ); // HtmlView Page linking property 'InputX' for element 'vEuler4'
          _view.vEuler4.linkProperty("Visibility",  function() { return eulershow; }, function(_v) { eulershow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'vEuler4'
          _view.vEuler4.linkProperty("InputY",  function() { return energyEuler; }, function(_v) { energyEuler = _v; } ); // HtmlView Page linking property 'InputY' for element 'vEuler4'
          _view.vEC3.linkProperty("Maximum",  function() { return t_steps; }, function(_v) { t_steps = _v; } ); // HtmlView Page linking property 'Maximum' for element 'vEC3'
          _view.vEC3.linkProperty("InputX",  function() { return time; }, function(_v) { time = _v; } ); // HtmlView Page linking property 'InputX' for element 'vEC3'
          _view.vEC3.linkProperty("Visibility",  function() { return eulercromershow; }, function(_v) { eulercromershow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'vEC3'
          _view.vEC3.linkProperty("InputY",  function() { return energyEC; }, function(_v) { energyEC = _v; } ); // HtmlView Page linking property 'InputY' for element 'vEC3'
          break;
      } // end of switch
    }; // end of new reset

    _model.setView(_view);
    _model.reset();
    _view._enableEPub();
  } // end of _selectView

  _model.setAutoplay(true);
  _model.setFPS(20);
  _model.setStepsPerDisplay(1);
  _selectView(-1); // this includes _model.reset()
  return _model;
}

function PICUP_Hanging_SHO_Python_frem_View (_topFrame,_viewNumber,_libraryPath,_codebasePath) {
  var _view;
  switch(_viewNumber) {
    case -10 : break; // make Lint happy
    default :
    case 0: _view = PICUP_Hanging_SHO_Python_frem_View_0 (_topFrame); break;
  } // end of switch

  if (_codebasePath) _view._setResourcePath(_codebasePath);

  if (_libraryPath) _view._setLibraryPath(_libraryPath);

  _view._addDescriptionPage('Intro Page','./PICUP_Hanging_SHO_Python_frem/introduction.html');
  _view._addDescriptionPage('instructionguide','./PICUP_Hanging_SHO_Python_frem/1instructorguide.html');
  _view._addDescriptionPage('theory','./PICUP_Hanging_SHO_Python_frem/2theory.html');
  _view._addDescriptionPage('Exercise','./PICUP_Hanging_SHO_Python_frem/3exercises.html');
  _view._addDescriptionPage('solutions','./PICUP_Hanging_SHO_Python_frem/5solutions.html');
  _view._addDescriptionPage('Hanging_SHO_Python.py','./PICUP_Hanging_SHO_Python_frem_Intro_6.html');

  return _view;
} // end of main function

function PICUP_Hanging_SHO_Python_frem_View_0 (_topFrame) {
  var _view = EJSS_CORE.createView(_topFrame);

  _view._reset = function() {
    _view._clearAll();
    _view._addElement(EJSS_INTERFACE.panel,"executionPanel", _view._topFrame) // EJsS HtmlView.HtmlView Page: declaration of element 'executionPanel'
      .setProperty("Display","inline-block") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'executionPanel'
      ;

    _view._addElement(EJSS_INTERFACE.comboBox,"comboBox", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'comboBox'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"dtlabel", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'dtlabel'
      .setProperty("Background","green") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'dtlabel'
      .setProperty("Tooltip","time step (s)") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'dtlabel'
      .setProperty("Foreground","white") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'dtlabel'
      .setProperty("Text","dt=") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'dtlabel'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"dtfield", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'dtfield'
      .setProperty("Width","6vw") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'dtfield'
      .setProperty("Format","0.000") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'dtfield'
      .setProperty("Tooltip","time step (s)") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'dtfield'
      .setProperty("Foreground","green") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'dtfield'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"vilabel", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'vilabel'
      .setProperty("Background","red") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'vilabel'
      .setProperty("Tooltip","initial velocity (m/s)") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'vilabel'
      .setProperty("Foreground","white") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'vilabel'
      .setProperty("Text","vi=") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'vilabel'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"vifield", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'vifield'
      .setProperty("Width","6vw") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'vifield'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'vifield'
      .setProperty("Tooltip","initial velocity (m/s)") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'vifield'
      .setProperty("Foreground","red") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'vifield'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"yilabel", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'yilabel'
      .setProperty("Background","blue") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'yilabel'
      .setProperty("Tooltip","initial position (m), relative to eq position yeq (m)") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'yilabel'
      .setProperty("Foreground","white") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'yilabel'
      .setProperty("Text","yi=") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'yilabel'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"yifield", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'yifield'
      .setProperty("Width","6vw") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'yifield'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'yifield'
      .setProperty("Tooltip","initial position (m), relative to eq position yeq (m)") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'yifield'
      .setProperty("Foreground","blue") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'yifield'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"mlabel", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'mlabel'
      .setProperty("Background","orange") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'mlabel'
      .setProperty("Tooltip","mass (kg)") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'mlabel'
      .setProperty("Foreground","white") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'mlabel'
      .setProperty("Text","m=") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'mlabel'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"mfield", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'mfield'
      .setProperty("Width","6vw") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'mfield'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'mfield'
      .setProperty("Tooltip","mass (kg)") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'mfield'
      .setProperty("Foreground","orange") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'mfield'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"glabel", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'glabel'
      .setProperty("Background","magenta") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'glabel'
      .setProperty("Tooltip","gravity (m/s^2)") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'glabel'
      .setProperty("Foreground","white") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'glabel'
      .setProperty("Text","g=") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'glabel'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"gfield", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'gfield'
      .setProperty("Width","6vw") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'gfield'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'gfield'
      .setProperty("Tooltip","gravity (m/s^2)") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'gfield'
      .setProperty("Foreground","magenta") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'gfield'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"klabel", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'klabel'
      .setProperty("Background","Cyan") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'klabel'
      .setProperty("Tooltip","spring constant (N/m)") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'klabel'
      .setProperty("Foreground","white") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'klabel'
      .setProperty("Text","k=") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'klabel'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"kfield", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'kfield'
      .setProperty("Width","6vw") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'kfield'
      .setProperty("Format","0.00") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'kfield'
      .setProperty("Tooltip","spring constant (N/m)") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'kfield'
      .setProperty("Foreground","cyan") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'kfield'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"tstepslabel", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'tstepslabel'
      .setProperty("Background","black") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'tstepslabel'
      .setProperty("Tooltip","number of time steps") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'tstepslabel'
      .setProperty("Foreground","white") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'tstepslabel'
      .setProperty("Text","t steps=") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'tstepslabel'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"tstepfield", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'tstepfield'
      .setProperty("Width","6vw") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'tstepfield'
      .setProperty("Format","0") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'tstepfield'
      .setProperty("Tooltip","number of time steps") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'tstepfield'
      ;

    _view._addElement(EJSS_INTERFACE.twoStateButton,"playPauseButton", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'playPauseButton'
      .setProperty("TextOn","▶") // EJsS HtmlView.HtmlView Page: setting property 'TextOn' for element 'playPauseButton'
      .setProperty("Tooltip","Play/Pause") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'playPauseButton'
      .setProperty("TextOff","❚❚") // EJsS HtmlView.HtmlView Page: setting property 'TextOff' for element 'playPauseButton'
      ;

    _view._addElement(EJSS_INTERFACE.button,"resetButton", _view.executionPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'resetButton'
      .setProperty("Text","↻") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'resetButton'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"panel", _view._topFrame) // EJsS HtmlView.HtmlView Page: declaration of element 'panel'
      .setProperty("Width","100%") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'panel'
      ;

    _view._addElement(EJSS_DRAWING2D.plottingPanel,"plottingPanel", _view.panel) // EJsS HtmlView.HtmlView Page: declaration of element 'plottingPanel'
      .setProperty("Width","100%") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'plottingPanel'
      .setProperty("Gutters",[0,0,0,0]) // EJsS HtmlView.HtmlView Page: setting property 'Gutters' for element 'plottingPanel'
      .setProperty("YScalePrecision",1) // EJsS HtmlView.HtmlView Page: setting property 'YScalePrecision' for element 'plottingPanel'
      .setProperty("XFixedTick",0) // EJsS HtmlView.HtmlView Page: setting property 'XFixedTick' for element 'plottingPanel'
      .setProperty("YFixedTick",0) // EJsS HtmlView.HtmlView Page: setting property 'YFixedTick' for element 'plottingPanel'
      .setProperty("TRMessage","Simple Harmonic Motion using Solvers \nEuler (RED) and \nEuler Cromer (GREEN) \nExact (BLUE)") // EJsS HtmlView.HtmlView Page: setting property 'TRMessage' for element 'plottingPanel'
      .setProperty("XTickStep",1) // EJsS HtmlView.HtmlView Page: setting property 'XTickStep' for element 'plottingPanel'
      .setProperty("YTickStep",0.1) // EJsS HtmlView.HtmlView Page: setting property 'YTickStep' for element 'plottingPanel'
      .setProperty("XAutoTicks",false) // EJsS HtmlView.HtmlView Page: setting property 'XAutoTicks' for element 'plottingPanel'
      .setProperty("Title","Position Vs Time") // EJsS HtmlView.HtmlView Page: setting property 'Title' for element 'plottingPanel'
      .setProperty("Enabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Enabled' for element 'plottingPanel'
      .setProperty("MaximumY",0.3) // EJsS HtmlView.HtmlView Page: setting property 'MaximumY' for element 'plottingPanel'
      .setProperty("MaximumX",20) // EJsS HtmlView.HtmlView Page: setting property 'MaximumX' for element 'plottingPanel'
      .setProperty("YAutoTicks",false) // EJsS HtmlView.HtmlView Page: setting property 'YAutoTicks' for element 'plottingPanel'
      .setProperty("MinimumX",0) // EJsS HtmlView.HtmlView Page: setting property 'MinimumX' for element 'plottingPanel'
      .setProperty("MinimumY",-0.3) // EJsS HtmlView.HtmlView Page: setting property 'MinimumY' for element 'plottingPanel'
      .setProperty("TitleY","Position (m)") // EJsS HtmlView.HtmlView Page: setting property 'TitleY' for element 'plottingPanel'
      .setProperty("AutoScaleY",true) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleY' for element 'plottingPanel'
      .setProperty("TitleX","Time (s)") // EJsS HtmlView.HtmlView Page: setting property 'TitleX' for element 'plottingPanel'
      .setProperty("MarginX",10) // EJsS HtmlView.HtmlView Page: setting property 'MarginX' for element 'plottingPanel'
      .setProperty("AutoScaleX",false) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleX' for element 'plottingPanel'
      .setProperty("XScalePrecision",0) // EJsS HtmlView.HtmlView Page: setting property 'XScalePrecision' for element 'plottingPanel'
      ;

    _view._addElement(EJSS_DRAWING2D.trail,"vEuler", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'vEuler'
      .setProperty("Connected",true) // EJsS HtmlView.HtmlView Page: setting property 'Connected' for element 'vEuler'
      .setProperty("LineColor","Red") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'vEuler'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 'vEuler'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'vEuler'
      ;

    _view._addElement(EJSS_DRAWING2D.trail,"vEC", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'vEC'
      .setProperty("LineColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'vEC'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 'vEC'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'vEC'
      ;

    _view._addElement(EJSS_DRAWING2D.trail,"vtheory2", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'vtheory2'
      .setProperty("LineColor","Blue") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'vtheory2'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 'vtheory2'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'vtheory2'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"Euler", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'Euler'
      .setProperty("FillColor","Red") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'Euler'
      .setProperty("SizeX",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'Euler'
      .setProperty("SizeY",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'Euler'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'Euler'
      ;

    _view._addElement(EJSS_DRAWING2D.trail,"vEuler2", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'vEuler2'
      .setProperty("Connected",true) // EJsS HtmlView.HtmlView Page: setting property 'Connected' for element 'vEuler2'
      .setProperty("LineColor","Red") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'vEuler2'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 'vEuler2'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'vEuler2'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"EC", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'EC'
      .setProperty("FillColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'EC'
      .setProperty("SizeX",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'EC'
      .setProperty("SizeY",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'EC'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'EC'
      ;

    _view._addElement(EJSS_DRAWING2D.plottingPanel,"plottingPanel2", _view.panel) // EJsS HtmlView.HtmlView Page: declaration of element 'plottingPanel2'
      .setProperty("Width",window.innerWidth*1) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'plottingPanel2'
      .setProperty("Gutters",[0,0,0,0]) // EJsS HtmlView.HtmlView Page: setting property 'Gutters' for element 'plottingPanel2'
      .setProperty("YScalePrecision",1) // EJsS HtmlView.HtmlView Page: setting property 'YScalePrecision' for element 'plottingPanel2'
      .setProperty("XFixedTick",0) // EJsS HtmlView.HtmlView Page: setting property 'XFixedTick' for element 'plottingPanel2'
      .setProperty("YFixedTick",0) // EJsS HtmlView.HtmlView Page: setting property 'YFixedTick' for element 'plottingPanel2'
      .setProperty("TRMessage","Simple Harmonic Motion using Solvers \nEuler (RED) and \nEuler Cromer (GREEN) \nExact (BLUE)") // EJsS HtmlView.HtmlView Page: setting property 'TRMessage' for element 'plottingPanel2'
      .setProperty("XTickStep",1) // EJsS HtmlView.HtmlView Page: setting property 'XTickStep' for element 'plottingPanel2'
      .setProperty("YTickStep",0.1) // EJsS HtmlView.HtmlView Page: setting property 'YTickStep' for element 'plottingPanel2'
      .setProperty("XAutoTicks",false) // EJsS HtmlView.HtmlView Page: setting property 'XAutoTicks' for element 'plottingPanel2'
      .setProperty("Title","Position Vs Time") // EJsS HtmlView.HtmlView Page: setting property 'Title' for element 'plottingPanel2'
      .setProperty("Enabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Enabled' for element 'plottingPanel2'
      .setProperty("MaximumY",0.3) // EJsS HtmlView.HtmlView Page: setting property 'MaximumY' for element 'plottingPanel2'
      .setProperty("MaximumX",20) // EJsS HtmlView.HtmlView Page: setting property 'MaximumX' for element 'plottingPanel2'
      .setProperty("YAutoTicks",false) // EJsS HtmlView.HtmlView Page: setting property 'YAutoTicks' for element 'plottingPanel2'
      .setProperty("MinimumX",0) // EJsS HtmlView.HtmlView Page: setting property 'MinimumX' for element 'plottingPanel2'
      .setProperty("MinimumY",-0.3) // EJsS HtmlView.HtmlView Page: setting property 'MinimumY' for element 'plottingPanel2'
      .setProperty("TitleY","Velocity (m/s)") // EJsS HtmlView.HtmlView Page: setting property 'TitleY' for element 'plottingPanel2'
      .setProperty("AutoScaleY",true) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleY' for element 'plottingPanel2'
      .setProperty("TitleX","Time (s)") // EJsS HtmlView.HtmlView Page: setting property 'TitleX' for element 'plottingPanel2'
      .setProperty("MarginX",10) // EJsS HtmlView.HtmlView Page: setting property 'MarginX' for element 'plottingPanel2'
      .setProperty("AutoScaleX",false) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleX' for element 'plottingPanel2'
      .setProperty("XScalePrecision",0) // EJsS HtmlView.HtmlView Page: setting property 'XScalePrecision' for element 'plottingPanel2'
      ;

    _view._addElement(EJSS_DRAWING2D.trail,"vEuler3", _view.plottingPanel2) // EJsS HtmlView.HtmlView Page: declaration of element 'vEuler3'
      .setProperty("Connected",true) // EJsS HtmlView.HtmlView Page: setting property 'Connected' for element 'vEuler3'
      .setProperty("LineColor","Red") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'vEuler3'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 'vEuler3'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'vEuler3'
      ;

    _view._addElement(EJSS_DRAWING2D.trail,"vEC2", _view.plottingPanel2) // EJsS HtmlView.HtmlView Page: declaration of element 'vEC2'
      .setProperty("LineColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'vEC2'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 'vEC2'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'vEC2'
      ;

    _view._addElement(EJSS_DRAWING2D.trail,"vtheory", _view.plottingPanel2) // EJsS HtmlView.HtmlView Page: declaration of element 'vtheory'
      .setProperty("LineColor","Blue") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'vtheory'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 'vtheory'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'vtheory'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"Euler2", _view.plottingPanel2) // EJsS HtmlView.HtmlView Page: declaration of element 'Euler2'
      .setProperty("FillColor","Red") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'Euler2'
      .setProperty("SizeX",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'Euler2'
      .setProperty("SizeY",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'Euler2'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'Euler2'
      ;

    _view._addElement(EJSS_DRAWING2D.trail,"vEuler22", _view.plottingPanel2) // EJsS HtmlView.HtmlView Page: declaration of element 'vEuler22'
      .setProperty("Connected",true) // EJsS HtmlView.HtmlView Page: setting property 'Connected' for element 'vEuler22'
      .setProperty("LineColor","Red") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'vEuler22'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 'vEuler22'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'vEuler22'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"EC2", _view.plottingPanel2) // EJsS HtmlView.HtmlView Page: declaration of element 'EC2'
      .setProperty("FillColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'EC2'
      .setProperty("SizeX",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'EC2'
      .setProperty("SizeY",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'EC2'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'EC2'
      ;

    _view._addElement(EJSS_DRAWING2D.plottingPanel,"plottingPanel3", _view.panel) // EJsS HtmlView.HtmlView Page: declaration of element 'plottingPanel3'
      .setProperty("Width","100%") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'plottingPanel3'
      .setProperty("Gutters",[0,0,0,0]) // EJsS HtmlView.HtmlView Page: setting property 'Gutters' for element 'plottingPanel3'
      .setProperty("YScalePrecision",1) // EJsS HtmlView.HtmlView Page: setting property 'YScalePrecision' for element 'plottingPanel3'
      .setProperty("XFixedTick",0) // EJsS HtmlView.HtmlView Page: setting property 'XFixedTick' for element 'plottingPanel3'
      .setProperty("YFixedTick",0) // EJsS HtmlView.HtmlView Page: setting property 'YFixedTick' for element 'plottingPanel3'
      .setProperty("TRMessage","Simple Harmonic Motion using Solvers \nEuler (RED) and \nEuler Cromer (GREEN) \nExact (BLUE)") // EJsS HtmlView.HtmlView Page: setting property 'TRMessage' for element 'plottingPanel3'
      .setProperty("XTickStep",1) // EJsS HtmlView.HtmlView Page: setting property 'XTickStep' for element 'plottingPanel3'
      .setProperty("YTickStep",0.1) // EJsS HtmlView.HtmlView Page: setting property 'YTickStep' for element 'plottingPanel3'
      .setProperty("XAutoTicks",false) // EJsS HtmlView.HtmlView Page: setting property 'XAutoTicks' for element 'plottingPanel3'
      .setProperty("Title","Position Vs Time") // EJsS HtmlView.HtmlView Page: setting property 'Title' for element 'plottingPanel3'
      .setProperty("Enabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Enabled' for element 'plottingPanel3'
      .setProperty("MaximumX",20) // EJsS HtmlView.HtmlView Page: setting property 'MaximumX' for element 'plottingPanel3'
      .setProperty("YAutoTicks",false) // EJsS HtmlView.HtmlView Page: setting property 'YAutoTicks' for element 'plottingPanel3'
      .setProperty("MinimumX",0) // EJsS HtmlView.HtmlView Page: setting property 'MinimumX' for element 'plottingPanel3'
      .setProperty("TitleY","Position (m)") // EJsS HtmlView.HtmlView Page: setting property 'TitleY' for element 'plottingPanel3'
      .setProperty("AutoScaleY",true) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleY' for element 'plottingPanel3'
      .setProperty("TitleX","Time (s)") // EJsS HtmlView.HtmlView Page: setting property 'TitleX' for element 'plottingPanel3'
      .setProperty("MarginX",10) // EJsS HtmlView.HtmlView Page: setting property 'MarginX' for element 'plottingPanel3'
      .setProperty("AutoScaleX",false) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleX' for element 'plottingPanel3'
      .setProperty("XScalePrecision",0) // EJsS HtmlView.HtmlView Page: setting property 'XScalePrecision' for element 'plottingPanel3'
      ;

    _view._addElement(EJSS_DRAWING2D.trail,"vEuler4", _view.plottingPanel3) // EJsS HtmlView.HtmlView Page: declaration of element 'vEuler4'
      .setProperty("Connected",true) // EJsS HtmlView.HtmlView Page: setting property 'Connected' for element 'vEuler4'
      .setProperty("LineColor","Red") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'vEuler4'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 'vEuler4'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'vEuler4'
      ;

    _view._addElement(EJSS_DRAWING2D.trail,"vEC3", _view.plottingPanel3) // EJsS HtmlView.HtmlView Page: declaration of element 'vEC3'
      .setProperty("LineColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'vEC3'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 'vEC3'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'vEC3'
      ;

  };

  return _view;
}


//--><!]]></script>
  </head>
  <body>
    <div role="button" id="_topFrame" style="text-align:center"></div>
  <div id="metadata" class="metadata">
    <br />
    <div id="title_author">
      <hr />
      <b>Title and author:</b>
      <p>
      Hanging Simple Harmonic Oscillator<br />
     <img alt="Logo" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/02_newtonianmechanics_8oscillations/PICUP_Hanging_SHO_Python_frem/Screen Shot 2018-05-30 at 12.49.00 PM (2).png" />
      </p>
      <p>
      <img alt="author image" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/02_newtonianmechanics_8oscillations/1authorlookangphoto.png" />
 Fremont Teng; Loo Kang Wee
      </p>
    </div>
    <hr />
    <p></p>
    <div id="copyright_message">
      <div class="cc_left"  style="float:left">&#169; 2018, Fremont Teng; Loo Kang Wee.</div>
      <div class="cc_right" style="float:right">    Released under a <a rel="license" target="_blank" href="http://creativecommons.org/licenses/by-nc-sa/4.0/deed.en_US"> <img alt="Creative Commons Attribution-NonCommercial-ShareAlike" src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/images/cc_icon.png" /> </a> license.</div>
    </div>
  </div>
    <script type="text/javascript"><!--//--><![CDATA[//><!--
      var _model;
      var _scorm;
      window.addEventListener('load',
        function () { 
          _model =  new PICUP_Hanging_SHO_Python_frem("_topFrame","file:/Users/lookang/Google%20Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/","file:/Users/lookang/Google%20Drive/PublicLawrence/workspace/source/EJSS/02_newtonianmechanics_8oscillations/");
          if (typeof _isApp !== "undefined" && _isApp) _model.setRunAlways(true);
          TextResizeDetector.TARGET_ELEMENT_ID = '_topFrame';
          TextResizeDetector.USER_INIT_FUNC = function () {
            var iBase = TextResizeDetector.addEventListener(function(e,args) {
              _model._fontResized(args[0].iBase,args[0].iSize,args[0].iDelta);
              },null);
            _model._fontResized(iBase);
          };
          _model.onload();
        }, false);
    //--><!]]></script>
  </body>
</html>
