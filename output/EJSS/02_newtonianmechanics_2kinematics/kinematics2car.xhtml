<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Kinematics Car and Bus Y Direction Simulator</title>
<style type="text/css">
.metadata { display: none; }
</style>    <link rel="stylesheet"  type="text/css" href="file:///Users/lookang/Google Drive/PublicLawrence/workspace/output/_ejs_library/css/ejss.css" />
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/scripts/common_script.js"></script>
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/scripts/textresizedetector.js"></script>
    <script src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/ejsS.v1.min.js"></script>
<script type="text/javascript"><!--//--><![CDATA[//><!--
/* _inputParameters: an object with different values for the model parameters */
function kinematics2car(_topFrame,_libraryPath,_codebasePath, _inputParameters) {
  var _model = EJSS_CORE.createAnimationLMS();
  var _view;
  var _isPlaying = false;
  var _isPaused = true;
  var _isMobile = (navigator===undefined) ? false : navigator.userAgent.match(/iPhone|iPad|iPod|Android|BlackBerry|Opera Mini|IEMobile/i);

var _stringProperties = {};
  var _tools = {
    showInputDialog : EJSS_INTERFACE.BoxPanel.showInputDialog,
    showOkDialog : EJSS_INTERFACE.BoxPanel.showOkDialog,
    showOkCancelDialog : EJSS_INTERFACE.BoxPanel.showOkCancelDialog,
    downloadText: EJSS_TOOLS.File.downloadText,
    uploadText: function(action) { EJSS_TOOLS.File.uploadText(_model,action); } 
  };

  function _play()  { _isPaused = false; _isPlaying = true;  _model.play();  }
  function _pause() { _isPaused = true;  _isPlaying = false; _model.pause(); }
  function _step()  { _pause();  _model.step(); }
  function _reset() { _model.reset();  _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); }
  _model._play  = _play;
  _model._pause = _pause;
  _model._step  = _step;
  _model._reset = _reset;
  function _update() { _model.update(); }
  function _initialize() { _model.initialize(); }
  function _setFPS(_fps) { _model.setFPS(_fps); }
  function _setDelay(_delay) { _model.setDelay(_delay); }
  function _setStepsPerDisplay(_spd) { _model.setStepsPerDisplay(_spd); }
  function _setUpdateView(_updateView) { _model.setUpdateView(_updateView); }
  function _setAutoplay(_auto) { _model.setAutoplay(_auto); }
  function _println(_message) { console.log(_message); }

  function _breakAfterThisPage() { _model.setShouldBreak(true); }

  function _resetSolvers() { if (_model.resetSolvers) _model.resetSolvers(); }

  function _saveText(name,type,content) { if (_model.saveText) _model.saveText(name,type,content); }

  function _saveState(name) { if (_model.saveState) _model.saveState(name); }

  function _saveImage(name,panelname) { if (_model.saveImage) _model.saveImage(name,panelname); }

  function _readState(url,type) { if (_model.readState) _model.readState(url,type); }

  function _readText(url,type,varname) { if (_model.readText) _model.readText(url,type,varname); }

  function _getStringProperty(propertyName) {
    var _value = _stringProperties[propertyName];
    if (_value===undefined) return propertyName;
    else return _value;
  }
  var __pagesEnabled = [];
  function _setPageEnabled(pageName,enabled) { __pagesEnabled[pageName] = enabled; }

  var velocityarrowshow; // EjsS Model.Variables.Var Table.velocityarrowshow
  var font; // EjsS Model.Variables.Var Table.font
  var xmin; // EjsS Model.Variables.Var Table.xmin
  var xmax; // EjsS Model.Variables.Var Table.xmax
  var ymin; // EjsS Model.Variables.Var Table.ymin
  var yminplot; // EjsS Model.Variables.Var Table.yminplot
  var ymax; // EjsS Model.Variables.Var Table.ymax
  var ymaxplot; // EjsS Model.Variables.Var Table.ymaxplot
  var rangex; // EjsS Model.Variables.Var Table.rangex
  var rangey; // EjsS Model.Variables.Var Table.rangey
  var sizex; // EjsS Model.Variables.Var Table.sizex
  var sizey; // EjsS Model.Variables.Var Table.sizey
  var scalex; // EjsS Model.Variables.Var Table.scalex
  var scaley; // EjsS Model.Variables.Var Table.scaley
  var t; // EjsS Model.Variables.Var Table.t
  var dt; // EjsS Model.Variables.Var Table.dt
  var tend; // EjsS Model.Variables.Var Table.tend
  var x; // EjsS Model.Variables.Var Table.x
  var y; // EjsS Model.Variables.Var Table.y
  var ys0; // EjsS Model.Variables.Var Table.ys0
  var vy; // EjsS Model.Variables.Var Table.vy
  var vys; // EjsS Model.Variables.Var Table.vys
  var vys0; // EjsS Model.Variables.Var Table.vys0
  var vyslider; // EjsS Model.Variables.Var Table.vyslider
  var vymax; // EjsS Model.Variables.Var Table.vymax
  var vdrag; // EjsS Model.Variables.Var Table.vdrag
  var xdrag; // EjsS Model.Variables.Var Table.xdrag
  var vymin; // EjsS Model.Variables.Var Table.vymin
  var textv; // EjsS Model.Variables.Var Table.textv
  var texts; // EjsS Model.Variables.Var Table.texts
  var ay; // EjsS Model.Variables.Var Table.ay
  var aym; // EjsS Model.Variables.Var Table.aym
  var selected; // EjsS Model.Variables.Var Table.selected
  var textt; // EjsS Model.Variables.Var Table.textt
  var yground; // EjsS Model.Variables.Var Table.yground
  var e; // EjsS Model.Variables.Var Table.e
  var k; // EjsS Model.Variables.Var Table.k
  var memorycolory; // EjsS Model.Variables.Var Table.memorycolory
  var memorycolorv; // EjsS Model.Variables.Var Table.memorycolorv
  var memorycolora; // EjsS Model.Variables.Var Table.memorycolora
  var showparachutejump; // EjsS Model.Variables.Var Table.showparachutejump
  var showparachutejump2; // EjsS Model.Variables.Var Table.showparachutejump2
  var showball; // EjsS Model.Variables.Var Table.showball
  var showball2; // EjsS Model.Variables.Var Table.showball2

  var visiblevtext; // EjsS Model.Variables.shadows.visiblevtext
  var uturn; // EjsS Model.Variables.shadows.uturn
  var numShadows; // EjsS Model.Variables.shadows.numShadows
  var relativeposition; // EjsS Model.Variables.shadows.relativeposition
  var displacevtext; // EjsS Model.Variables.shadows.displacevtext
  var showmotiondiagram; // EjsS Model.Variables.shadows.showmotiondiagram
  var xShadows; // EjsS Model.Variables.shadows.xShadows
  var xShadowstext; // EjsS Model.Variables.shadows.xShadowstext
  var yShadows; // EjsS Model.Variables.shadows.yShadows
  var yShadowstext; // EjsS Model.Variables.shadows.yShadowstext
  var dyShadows; // EjsS Model.Variables.shadows.dyShadows
  var yanddyShadows; // EjsS Model.Variables.shadows.yanddyShadows
  var vShadows; // EjsS Model.Variables.shadows.vShadows
  var vShadowsaverage; // EjsS Model.Variables.shadows.vShadowsaverage
  var colorv; // EjsS Model.Variables.shadows.colorv
  var vShadowstext; // EjsS Model.Variables.shadows.vShadowstext
  var aShadows; // EjsS Model.Variables.shadows.aShadows
  var tShadows; // EjsS Model.Variables.shadows.tShadows
  var shadowColor; // EjsS Model.Variables.shadows.shadowColor
  var shadowVis; // EjsS Model.Variables.shadows.shadowVis
  var counter; // EjsS Model.Variables.shadows.counter
  var next; // EjsS Model.Variables.shadows.next
  var prev; // EjsS Model.Variables.shadows.prev
  var xMarkVert; // EjsS Model.Variables.shadows.xMarkVert
  var yMarkVert; // EjsS Model.Variables.shadows.yMarkVert
  var xMarkHoriz; // EjsS Model.Variables.shadows.xMarkHoriz
  var yMarkHoriz; // EjsS Model.Variables.shadows.yMarkHoriz

  var showobject2; // EjsS Model.Variables.object2.showobject2
  var x2; // EjsS Model.Variables.object2.x2
  var uturn2; // EjsS Model.Variables.object2.uturn2
  var y2; // EjsS Model.Variables.object2.y2
  var vy2; // EjsS Model.Variables.object2.vy2
  var ay2; // EjsS Model.Variables.object2.ay2
  var vys2; // EjsS Model.Variables.object2.vys2
  var vyslider2; // EjsS Model.Variables.object2.vyslider2
  var relativeposition2; // EjsS Model.Variables.object2.relativeposition2
  var xShadows2; // EjsS Model.Variables.object2.xShadows2
  var xShadowstext2; // EjsS Model.Variables.object2.xShadowstext2
  var yShadows2; // EjsS Model.Variables.object2.yShadows2
  var yShadowstext2; // EjsS Model.Variables.object2.yShadowstext2
  var dyShadows2; // EjsS Model.Variables.object2.dyShadows2
  var yanddyShadows2; // EjsS Model.Variables.object2.yanddyShadows2
  var vShadows2; // EjsS Model.Variables.object2.vShadows2
  var vShadowsaverage2; // EjsS Model.Variables.object2.vShadowsaverage2
  var colorv2; // EjsS Model.Variables.object2.colorv2
  var vShadowstext2; // EjsS Model.Variables.object2.vShadowstext2
  var aShadows2; // EjsS Model.Variables.object2.aShadows2
  var tShadows2; // EjsS Model.Variables.object2.tShadows2
  var shadowColor2; // EjsS Model.Variables.object2.shadowColor2
  var shadowVis2; // EjsS Model.Variables.object2.shadowVis2
  var counter2; // EjsS Model.Variables.object2.counter2
  var next2; // EjsS Model.Variables.object2.next2
  var prev2; // EjsS Model.Variables.object2.prev2

  var helicoptershow; // EjsS Model.Variables.conceptest64.helicoptershow

  var isAndroid; // EjsS Model.Variables.layout.isAndroid
  var iOS; // EjsS Model.Variables.layout.iOS
  var iPad; // EjsS Model.Variables.layout.iPad
  var iPhone; // EjsS Model.Variables.layout.iPhone
  var Android; // EjsS Model.Variables.layout.Android
  var Width; // EjsS Model.Variables.layout.Width
  var Height; // EjsS Model.Variables.layout.Height
  var Width1; // EjsS Model.Variables.layout.Width1
  var Width2; // EjsS Model.Variables.layout.Width2
  var Widthv; // EjsS Model.Variables.layout.Widthv
  var Widtha; // EjsS Model.Variables.layout.Widtha
  var xvst; // EjsS Model.Variables.layout.xvst
  var vvst; // EjsS Model.Variables.layout.vvst
  var avst; // EjsS Model.Variables.layout.avst
  var disabledworld; // EjsS Model.Variables.layout.disabledworld
  var world; // EjsS Model.Variables.layout.world
  var graph; // EjsS Model.Variables.layout.graph
  var graph2; // EjsS Model.Variables.layout.graph2
  var graph3; // EjsS Model.Variables.layout.graph3
  var disabled; // EjsS Model.Variables.layout.disabled
  var datashow; // EjsS Model.Variables.layout.datashow
  var datashow2; // EjsS Model.Variables.layout.datashow2

  var selectedmodel; // EjsS Model.Variables.model.selectedmodel
  var selectedmodely; // EjsS Model.Variables.model.selectedmodely
  var selectedmodelyv; // EjsS Model.Variables.model.selectedmodelyv
  var selectedmodelya; // EjsS Model.Variables.model.selectedmodelya
  var functionY; // EjsS Model.Variables.model.functionY
  var functionY2; // EjsS Model.Variables.model.functionY2
  var functionY2v; // EjsS Model.Variables.model.functionY2v
  var functionY2a; // EjsS Model.Variables.model.functionY2a
  var functionYfirstderivative; // EjsS Model.Variables.model.functionYfirstderivative
  var functionYsecondderivative; // EjsS Model.Variables.model.functionYsecondderivative
  var xmodel; // EjsS Model.Variables.model.xmodel
  var ymodel; // EjsS Model.Variables.model.ymodel
  var ymodels; // EjsS Model.Variables.model.ymodels
  var ymodelvy; // EjsS Model.Variables.model.ymodelvy
  var ymodelay; // EjsS Model.Variables.model.ymodelay
  var vymodel; // EjsS Model.Variables.model.vymodel
  var vymodels; // EjsS Model.Variables.model.vymodels
  var aymodel; // EjsS Model.Variables.model.aymodel
  var showmodel; // EjsS Model.Variables.model.showmodel
  var ymodelvyshow; // EjsS Model.Variables.model.ymodelvyshow
  var ymodelayshow; // EjsS Model.Variables.model.ymodelayshow
  var TLMessage; // EjsS Model.Variables.model.TLMessage
  var vymodelay; // EjsS Model.Variables.model.vymodelay

  var _privateOdesList;
  var _ODEi_evolution1;
  var userEvents1=[];

  _model.getOdes = function() { return [_ODEi_evolution1]; };

  _model.removeEvents = function(){
    userEvents1=[];
  };

  function _serialize() { return _model.serialize(); }

  _model._userSerialize = function() {
    return {
      velocityarrowshow : velocityarrowshow,
      font : font,
      xmin : xmin,
      xmax : xmax,
      ymin : ymin,
      yminplot : yminplot,
      ymax : ymax,
      ymaxplot : ymaxplot,
      rangex : rangex,
      rangey : rangey,
      sizex : sizex,
      sizey : sizey,
      scalex : scalex,
      scaley : scaley,
      t : t,
      dt : dt,
      tend : tend,
      x : x,
      y : y,
      ys0 : ys0,
      vy : vy,
      vys : vys,
      vys0 : vys0,
      vyslider : vyslider,
      vymax : vymax,
      vdrag : vdrag,
      xdrag : xdrag,
      vymin : vymin,
      textv : textv,
      texts : texts,
      ay : ay,
      aym : aym,
      selected : selected,
      textt : textt,
      yground : yground,
      e : e,
      k : k,
      memorycolory : memorycolory,
      memorycolorv : memorycolorv,
      memorycolora : memorycolora,
      showparachutejump : showparachutejump,
      showparachutejump2 : showparachutejump2,
      showball : showball,
      showball2 : showball2,
      visiblevtext : visiblevtext,
      uturn : uturn,
      numShadows : numShadows,
      relativeposition : relativeposition,
      displacevtext : displacevtext,
      showmotiondiagram : showmotiondiagram,
      xShadows : xShadows,
      xShadowstext : xShadowstext,
      yShadows : yShadows,
      yShadowstext : yShadowstext,
      dyShadows : dyShadows,
      yanddyShadows : yanddyShadows,
      vShadows : vShadows,
      vShadowsaverage : vShadowsaverage,
      colorv : colorv,
      vShadowstext : vShadowstext,
      aShadows : aShadows,
      tShadows : tShadows,
      shadowColor : shadowColor,
      shadowVis : shadowVis,
      counter : counter,
      next : next,
      prev : prev,
      xMarkVert : xMarkVert,
      yMarkVert : yMarkVert,
      xMarkHoriz : xMarkHoriz,
      yMarkHoriz : yMarkHoriz,
      showobject2 : showobject2,
      x2 : x2,
      uturn2 : uturn2,
      y2 : y2,
      vy2 : vy2,
      ay2 : ay2,
      vys2 : vys2,
      vyslider2 : vyslider2,
      relativeposition2 : relativeposition2,
      xShadows2 : xShadows2,
      xShadowstext2 : xShadowstext2,
      yShadows2 : yShadows2,
      yShadowstext2 : yShadowstext2,
      dyShadows2 : dyShadows2,
      yanddyShadows2 : yanddyShadows2,
      vShadows2 : vShadows2,
      vShadowsaverage2 : vShadowsaverage2,
      colorv2 : colorv2,
      vShadowstext2 : vShadowstext2,
      aShadows2 : aShadows2,
      tShadows2 : tShadows2,
      shadowColor2 : shadowColor2,
      shadowVis2 : shadowVis2,
      counter2 : counter2,
      next2 : next2,
      prev2 : prev2,
      helicoptershow : helicoptershow,
      isAndroid : isAndroid,
      iOS : iOS,
      iPad : iPad,
      iPhone : iPhone,
      Android : Android,
      Width : Width,
      Height : Height,
      Width1 : Width1,
      Width2 : Width2,
      Widthv : Widthv,
      Widtha : Widtha,
      xvst : xvst,
      vvst : vvst,
      avst : avst,
      disabledworld : disabledworld,
      world : world,
      graph : graph,
      graph2 : graph2,
      graph3 : graph3,
      disabled : disabled,
      datashow : datashow,
      datashow2 : datashow2,
      selectedmodel : selectedmodel,
      selectedmodely : selectedmodely,
      selectedmodelyv : selectedmodelyv,
      selectedmodelya : selectedmodelya,
      functionY : functionY,
      functionY2 : functionY2,
      functionY2v : functionY2v,
      functionY2a : functionY2a,
      functionYfirstderivative : functionYfirstderivative,
      functionYsecondderivative : functionYsecondderivative,
      xmodel : xmodel,
      ymodel : ymodel,
      ymodels : ymodels,
      ymodelvy : ymodelvy,
      ymodelay : ymodelay,
      vymodel : vymodel,
      vymodels : vymodels,
      aymodel : aymodel,
      showmodel : showmodel,
      ymodelvyshow : ymodelvyshow,
      ymodelayshow : ymodelayshow,
      TLMessage : TLMessage,
      vymodelay : vymodelay
    };
  };

  _model._readParameters = function(json) {
    if(typeof json.velocityarrowshow != "undefined") velocityarrowshow = json.velocityarrowshow;
    if(typeof json.font != "undefined") font = json.font;
    if(typeof json.xmin != "undefined") xmin = json.xmin;
    if(typeof json.xmax != "undefined") xmax = json.xmax;
    if(typeof json.ymin != "undefined") ymin = json.ymin;
    if(typeof json.yminplot != "undefined") yminplot = json.yminplot;
    if(typeof json.ymax != "undefined") ymax = json.ymax;
    if(typeof json.ymaxplot != "undefined") ymaxplot = json.ymaxplot;
    if(typeof json.rangex != "undefined") rangex = json.rangex;
    if(typeof json.rangey != "undefined") rangey = json.rangey;
    if(typeof json.sizex != "undefined") sizex = json.sizex;
    if(typeof json.sizey != "undefined") sizey = json.sizey;
    if(typeof json.scalex != "undefined") scalex = json.scalex;
    if(typeof json.scaley != "undefined") scaley = json.scaley;
    if(typeof json.t != "undefined") t = json.t;
    if(typeof json.dt != "undefined") dt = json.dt;
    if(typeof json.tend != "undefined") tend = json.tend;
    if(typeof json.x != "undefined") x = json.x;
    if(typeof json.y != "undefined") y = json.y;
    if(typeof json.ys0 != "undefined") ys0 = json.ys0;
    if(typeof json.vy != "undefined") vy = json.vy;
    if(typeof json.vys != "undefined") vys = json.vys;
    if(typeof json.vys0 != "undefined") vys0 = json.vys0;
    if(typeof json.vyslider != "undefined") vyslider = json.vyslider;
    if(typeof json.vymax != "undefined") vymax = json.vymax;
    if(typeof json.vdrag != "undefined") vdrag = json.vdrag;
    if(typeof json.xdrag != "undefined") xdrag = json.xdrag;
    if(typeof json.vymin != "undefined") vymin = json.vymin;
    if(typeof json.textv != "undefined") textv = json.textv;
    if(typeof json.texts != "undefined") texts = json.texts;
    if(typeof json.ay != "undefined") ay = json.ay;
    if(typeof json.aym != "undefined") aym = json.aym;
    if(typeof json.selected != "undefined") selected = json.selected;
    if(typeof json.textt != "undefined") textt = json.textt;
    if(typeof json.yground != "undefined") yground = json.yground;
    if(typeof json.e != "undefined") e = json.e;
    if(typeof json.k != "undefined") k = json.k;
    if(typeof json.memorycolory != "undefined") memorycolory = json.memorycolory;
    if(typeof json.memorycolorv != "undefined") memorycolorv = json.memorycolorv;
    if(typeof json.memorycolora != "undefined") memorycolora = json.memorycolora;
    if(typeof json.showparachutejump != "undefined") showparachutejump = json.showparachutejump;
    if(typeof json.showparachutejump2 != "undefined") showparachutejump2 = json.showparachutejump2;
    if(typeof json.showball != "undefined") showball = json.showball;
    if(typeof json.showball2 != "undefined") showball2 = json.showball2;
    if(typeof json.visiblevtext != "undefined") visiblevtext = json.visiblevtext;
    if(typeof json.uturn != "undefined") uturn = json.uturn;
    if(typeof json.numShadows != "undefined") numShadows = json.numShadows;
    if(typeof json.relativeposition != "undefined") relativeposition = json.relativeposition;
    if(typeof json.displacevtext != "undefined") displacevtext = json.displacevtext;
    if(typeof json.showmotiondiagram != "undefined") showmotiondiagram = json.showmotiondiagram;
    if(typeof json.xShadows != "undefined") xShadows = json.xShadows;
    if(typeof json.xShadowstext != "undefined") xShadowstext = json.xShadowstext;
    if(typeof json.yShadows != "undefined") yShadows = json.yShadows;
    if(typeof json.yShadowstext != "undefined") yShadowstext = json.yShadowstext;
    if(typeof json.dyShadows != "undefined") dyShadows = json.dyShadows;
    if(typeof json.yanddyShadows != "undefined") yanddyShadows = json.yanddyShadows;
    if(typeof json.vShadows != "undefined") vShadows = json.vShadows;
    if(typeof json.vShadowsaverage != "undefined") vShadowsaverage = json.vShadowsaverage;
    if(typeof json.colorv != "undefined") colorv = json.colorv;
    if(typeof json.vShadowstext != "undefined") vShadowstext = json.vShadowstext;
    if(typeof json.aShadows != "undefined") aShadows = json.aShadows;
    if(typeof json.tShadows != "undefined") tShadows = json.tShadows;
    if(typeof json.shadowColor != "undefined") shadowColor = json.shadowColor;
    if(typeof json.shadowVis != "undefined") shadowVis = json.shadowVis;
    if(typeof json.counter != "undefined") counter = json.counter;
    if(typeof json.next != "undefined") next = json.next;
    if(typeof json.prev != "undefined") prev = json.prev;
    if(typeof json.xMarkVert != "undefined") xMarkVert = json.xMarkVert;
    if(typeof json.yMarkVert != "undefined") yMarkVert = json.yMarkVert;
    if(typeof json.xMarkHoriz != "undefined") xMarkHoriz = json.xMarkHoriz;
    if(typeof json.yMarkHoriz != "undefined") yMarkHoriz = json.yMarkHoriz;
    if(typeof json.showobject2 != "undefined") showobject2 = json.showobject2;
    if(typeof json.x2 != "undefined") x2 = json.x2;
    if(typeof json.uturn2 != "undefined") uturn2 = json.uturn2;
    if(typeof json.y2 != "undefined") y2 = json.y2;
    if(typeof json.vy2 != "undefined") vy2 = json.vy2;
    if(typeof json.ay2 != "undefined") ay2 = json.ay2;
    if(typeof json.vys2 != "undefined") vys2 = json.vys2;
    if(typeof json.vyslider2 != "undefined") vyslider2 = json.vyslider2;
    if(typeof json.relativeposition2 != "undefined") relativeposition2 = json.relativeposition2;
    if(typeof json.xShadows2 != "undefined") xShadows2 = json.xShadows2;
    if(typeof json.xShadowstext2 != "undefined") xShadowstext2 = json.xShadowstext2;
    if(typeof json.yShadows2 != "undefined") yShadows2 = json.yShadows2;
    if(typeof json.yShadowstext2 != "undefined") yShadowstext2 = json.yShadowstext2;
    if(typeof json.dyShadows2 != "undefined") dyShadows2 = json.dyShadows2;
    if(typeof json.yanddyShadows2 != "undefined") yanddyShadows2 = json.yanddyShadows2;
    if(typeof json.vShadows2 != "undefined") vShadows2 = json.vShadows2;
    if(typeof json.vShadowsaverage2 != "undefined") vShadowsaverage2 = json.vShadowsaverage2;
    if(typeof json.colorv2 != "undefined") colorv2 = json.colorv2;
    if(typeof json.vShadowstext2 != "undefined") vShadowstext2 = json.vShadowstext2;
    if(typeof json.aShadows2 != "undefined") aShadows2 = json.aShadows2;
    if(typeof json.tShadows2 != "undefined") tShadows2 = json.tShadows2;
    if(typeof json.shadowColor2 != "undefined") shadowColor2 = json.shadowColor2;
    if(typeof json.shadowVis2 != "undefined") shadowVis2 = json.shadowVis2;
    if(typeof json.counter2 != "undefined") counter2 = json.counter2;
    if(typeof json.next2 != "undefined") next2 = json.next2;
    if(typeof json.prev2 != "undefined") prev2 = json.prev2;
    if(typeof json.helicoptershow != "undefined") helicoptershow = json.helicoptershow;
    if(typeof json.isAndroid != "undefined") isAndroid = json.isAndroid;
    if(typeof json.iOS != "undefined") iOS = json.iOS;
    if(typeof json.iPad != "undefined") iPad = json.iPad;
    if(typeof json.iPhone != "undefined") iPhone = json.iPhone;
    if(typeof json.Android != "undefined") Android = json.Android;
    if(typeof json.Width != "undefined") Width = json.Width;
    if(typeof json.Height != "undefined") Height = json.Height;
    if(typeof json.Width1 != "undefined") Width1 = json.Width1;
    if(typeof json.Width2 != "undefined") Width2 = json.Width2;
    if(typeof json.Widthv != "undefined") Widthv = json.Widthv;
    if(typeof json.Widtha != "undefined") Widtha = json.Widtha;
    if(typeof json.xvst != "undefined") xvst = json.xvst;
    if(typeof json.vvst != "undefined") vvst = json.vvst;
    if(typeof json.avst != "undefined") avst = json.avst;
    if(typeof json.disabledworld != "undefined") disabledworld = json.disabledworld;
    if(typeof json.world != "undefined") world = json.world;
    if(typeof json.graph != "undefined") graph = json.graph;
    if(typeof json.graph2 != "undefined") graph2 = json.graph2;
    if(typeof json.graph3 != "undefined") graph3 = json.graph3;
    if(typeof json.disabled != "undefined") disabled = json.disabled;
    if(typeof json.datashow != "undefined") datashow = json.datashow;
    if(typeof json.datashow2 != "undefined") datashow2 = json.datashow2;
    if(typeof json.selectedmodel != "undefined") selectedmodel = json.selectedmodel;
    if(typeof json.selectedmodely != "undefined") selectedmodely = json.selectedmodely;
    if(typeof json.selectedmodelyv != "undefined") selectedmodelyv = json.selectedmodelyv;
    if(typeof json.selectedmodelya != "undefined") selectedmodelya = json.selectedmodelya;
    if(typeof json.functionY != "undefined") functionY = json.functionY;
    if(typeof json.functionY2 != "undefined") functionY2 = json.functionY2;
    if(typeof json.functionY2v != "undefined") functionY2v = json.functionY2v;
    if(typeof json.functionY2a != "undefined") functionY2a = json.functionY2a;
    if(typeof json.functionYfirstderivative != "undefined") functionYfirstderivative = json.functionYfirstderivative;
    if(typeof json.functionYsecondderivative != "undefined") functionYsecondderivative = json.functionYsecondderivative;
    if(typeof json.xmodel != "undefined") xmodel = json.xmodel;
    if(typeof json.ymodel != "undefined") ymodel = json.ymodel;
    if(typeof json.ymodels != "undefined") ymodels = json.ymodels;
    if(typeof json.ymodelvy != "undefined") ymodelvy = json.ymodelvy;
    if(typeof json.ymodelay != "undefined") ymodelay = json.ymodelay;
    if(typeof json.vymodel != "undefined") vymodel = json.vymodel;
    if(typeof json.vymodels != "undefined") vymodels = json.vymodels;
    if(typeof json.aymodel != "undefined") aymodel = json.aymodel;
    if(typeof json.showmodel != "undefined") showmodel = json.showmodel;
    if(typeof json.ymodelvyshow != "undefined") ymodelvyshow = json.ymodelvyshow;
    if(typeof json.ymodelayshow != "undefined") ymodelayshow = json.ymodelayshow;
    if(typeof json.TLMessage != "undefined") TLMessage = json.TLMessage;
    if(typeof json.vymodelay != "undefined") vymodelay = json.vymodelay;
  };

  _model._inputAndPublicParameters = ["velocityarrowshow",  "font",  "xmin",  "xmax",  "ymin",  "yminplot",  "ymax",  "ymaxplot",  "rangex",  "rangey",  "sizex",  "sizey",  "scalex",  "scaley",  "t",  "dt",  "tend",  "x",  "y",  "ys0",  "vy",  "vys",  "vys0",  "vyslider",  "vymax",  "vdrag",  "xdrag",  "vymin",  "textv",  "texts",  "ay",  "aym",  "selected",  "textt",  "yground",  "e",  "k",  "memorycolory",  "memorycolorv",  "memorycolora",  "showparachutejump",  "showparachutejump2",  "showball",  "showball2",  "visiblevtext",  "uturn",  "numShadows",  "relativeposition",  "displacevtext",  "showmotiondiagram",  "xShadows",  "xShadowstext",  "yShadows",  "yShadowstext",  "dyShadows",  "yanddyShadows",  "vShadows",  "vShadowsaverage",  "colorv",  "vShadowstext",  "aShadows",  "tShadows",  "shadowColor",  "shadowVis",  "counter",  "next",  "prev",  "xMarkVert",  "yMarkVert",  "xMarkHoriz",  "yMarkHoriz",  "showobject2",  "x2",  "uturn2",  "y2",  "vy2",  "ay2",  "vys2",  "vyslider2",  "relativeposition2",  "xShadows2",  "xShadowstext2",  "yShadows2",  "yShadowstext2",  "dyShadows2",  "yanddyShadows2",  "vShadows2",  "vShadowsaverage2",  "colorv2",  "vShadowstext2",  "aShadows2",  "tShadows2",  "shadowColor2",  "shadowVis2",  "counter2",  "next2",  "prev2",  "helicoptershow",  "isAndroid",  "iOS",  "iPad",  "iPhone",  "Android",  "Width",  "Height",  "Width1",  "Width2",  "Widthv",  "Widtha",  "xvst",  "vvst",  "avst",  "disabledworld",  "world",  "graph",  "graph2",  "graph3",  "disabled",  "datashow",  "datashow2",  "selectedmodel",  "selectedmodely",  "selectedmodelyv",  "selectedmodelya",  "functionY",  "functionY2",  "functionY2v",  "functionY2a",  "functionYfirstderivative",  "functionYsecondderivative",  "xmodel",  "ymodel",  "ymodels",  "ymodelvy",  "ymodelay",  "vymodel",  "vymodels",  "aymodel",  "showmodel",  "ymodelvyshow",  "ymodelayshow",  "TLMessage",  "vymodelay"]; 

  _model._outputAndPublicParameters = ["velocityarrowshow",  "font",  "xmin",  "xmax",  "ymin",  "yminplot",  "ymax",  "ymaxplot",  "rangex",  "rangey",  "sizex",  "sizey",  "scalex",  "scaley",  "t",  "dt",  "tend",  "x",  "y",  "ys0",  "vy",  "vys",  "vys0",  "vyslider",  "vymax",  "vdrag",  "xdrag",  "vymin",  "textv",  "texts",  "ay",  "aym",  "selected",  "textt",  "yground",  "e",  "k",  "memorycolory",  "memorycolorv",  "memorycolora",  "showparachutejump",  "showparachutejump2",  "showball",  "showball2",  "visiblevtext",  "uturn",  "numShadows",  "relativeposition",  "displacevtext",  "showmotiondiagram",  "xShadows",  "xShadowstext",  "yShadows",  "yShadowstext",  "dyShadows",  "yanddyShadows",  "vShadows",  "vShadowsaverage",  "colorv",  "vShadowstext",  "aShadows",  "tShadows",  "shadowColor",  "shadowVis",  "counter",  "next",  "prev",  "xMarkVert",  "yMarkVert",  "xMarkHoriz",  "yMarkHoriz",  "showobject2",  "x2",  "uturn2",  "y2",  "vy2",  "ay2",  "vys2",  "vyslider2",  "relativeposition2",  "xShadows2",  "xShadowstext2",  "yShadows2",  "yShadowstext2",  "dyShadows2",  "yanddyShadows2",  "vShadows2",  "vShadowsaverage2",  "colorv2",  "vShadowstext2",  "aShadows2",  "tShadows2",  "shadowColor2",  "shadowVis2",  "counter2",  "next2",  "prev2",  "helicoptershow",  "isAndroid",  "iOS",  "iPad",  "iPhone",  "Android",  "Width",  "Height",  "Width1",  "Width2",  "Widthv",  "Widtha",  "xvst",  "vvst",  "avst",  "disabledworld",  "world",  "graph",  "graph2",  "graph3",  "disabled",  "datashow",  "datashow2",  "selectedmodel",  "selectedmodely",  "selectedmodelyv",  "selectedmodelya",  "functionY",  "functionY2",  "functionY2v",  "functionY2a",  "functionYfirstderivative",  "functionYsecondderivative",  "xmodel",  "ymodel",  "ymodels",  "ymodelvy",  "ymodelay",  "vymodel",  "vymodels",  "aymodel",  "showmodel",  "ymodelvyshow",  "ymodelayshow",  "TLMessage",  "vymodelay"];

  function _unserialize(json) { return _model.unserialize(json); }

  _model._userUnserialize = function(json) {
    _model._readParameters(json);
   _resetSolvers();
   _model.update();
  };

  _model.addToReset(function() {
    __pagesEnabled["Init Page"] = true;
    __pagesEnabled["color"] = true;
    __pagesEnabled["svg"] = true;
    __pagesEnabled["shadows"] = true;
    __pagesEnabled["undefined"] = true;
    __pagesEnabled["axes"] = true;
    __pagesEnabled["Evol Page"] = true;
    __pagesEnabled["shadow"] = true;
    __pagesEnabled["shadow bus"] = true;
    __pagesEnabled["t20sec"] = true;
    __pagesEnabled["storevo"] = true;
    __pagesEnabled["axes"] = true;
    __pagesEnabled["FixRel Page 2"] = true;
    __pagesEnabled["model"] = false;
  });

  _model.addToReset(function() {
    velocityarrowshow = false; // EjsS Model.Variables.Var Table.velocityarrowshow
    font = "normal normal 1vw "; // EjsS Model.Variables.Var Table.font
    xmin = -20; // EjsS Model.Variables.Var Table.xmin
    xmax = 20; // EjsS Model.Variables.Var Table.xmax
    ymin = -20; // EjsS Model.Variables.Var Table.ymin
    yminplot = -20; // EjsS Model.Variables.Var Table.yminplot
    ymax = 20; // EjsS Model.Variables.Var Table.ymax
    ymaxplot = 10; // EjsS Model.Variables.Var Table.ymaxplot
    rangex = xmax-xmin; // EjsS Model.Variables.Var Table.rangex
    rangey = ymax-ymin; // EjsS Model.Variables.Var Table.rangey
    sizex = rangex/20; // EjsS Model.Variables.Var Table.sizex
    sizey = rangey/20; // EjsS Model.Variables.Var Table.sizey
    scalex = rangey/rangex/2; // EjsS Model.Variables.Var Table.scalex
    scaley = rangex/rangey/2; // EjsS Model.Variables.Var Table.scaley
    t = 0; // EjsS Model.Variables.Var Table.t
    dt = 0.05; // EjsS Model.Variables.Var Table.dt
    tend = 0; // EjsS Model.Variables.Var Table.tend
    x = -7; // EjsS Model.Variables.Var Table.x
    y = 0; // EjsS Model.Variables.Var Table.y
    ys0 = y; // EjsS Model.Variables.Var Table.ys0
    vy = 2; // EjsS Model.Variables.Var Table.vy
    vys = vy; // EjsS Model.Variables.Var Table.vys
    vys0 = vy; // EjsS Model.Variables.Var Table.vys0
    vyslider = vy; // EjsS Model.Variables.Var Table.vyslider
    vymax = 0; // EjsS Model.Variables.Var Table.vymax
    vymin = -5; // EjsS Model.Variables.Var Table.vymin
    ay = 0; // EjsS Model.Variables.Var Table.ay
    aym = ay; // EjsS Model.Variables.Var Table.aym
    selected = new Array(1); // EjsS Model.Variables.Var Table.selected
    (function () {
      var _i0;
      for (_i0=0; _i0<1; _i0+=1) {  // EjsS Model.Variables.Var Table.selected
        selected[_i0] = "free_fall";  // EjsS Model.Variables.Var Table.selected
      }
    }());
    textt = "select from menu & \nclick play"; // EjsS Model.Variables.Var Table.textt
    yground = -100-sizey/2+0.01; // EjsS Model.Variables.Var Table.yground
    e = 1; // EjsS Model.Variables.Var Table.e
    k = 0; // EjsS Model.Variables.Var Table.k
    memorycolory = -1; // EjsS Model.Variables.Var Table.memorycolory
    memorycolorv = 5; // EjsS Model.Variables.Var Table.memorycolorv
    memorycolora = 0; // EjsS Model.Variables.Var Table.memorycolora
    showparachutejump = false; // EjsS Model.Variables.Var Table.showparachutejump
    showparachutejump2 = false; // EjsS Model.Variables.Var Table.showparachutejump2
    showball = true; // EjsS Model.Variables.Var Table.showball
    showball2 = true; // EjsS Model.Variables.Var Table.showball2
  });

  _model.addToReset(function() {
    uturn = 0; // EjsS Model.Variables.shadows.uturn
    numShadows = 40; // EjsS Model.Variables.shadows.numShadows
    relativeposition = new Array(numShadows); // EjsS Model.Variables.shadows.relativeposition
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.shadows.relativeposition
        relativeposition[_i0] = "EAST";  // EjsS Model.Variables.shadows.relativeposition
      }
    }());
    displacevtext = new Array(numShadows); // EjsS Model.Variables.shadows.displacevtext
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.shadows.displacevtext
        displacevtext[_i0] = -0.5;  // EjsS Model.Variables.shadows.displacevtext
      }
    }());
    xShadows = new Array(numShadows); // EjsS Model.Variables.shadows.xShadows
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.shadows.xShadows
        xShadows[_i0] = 0;  // EjsS Model.Variables.shadows.xShadows
      }
    }());
    xShadowstext = new Array(numShadows); // EjsS Model.Variables.shadows.xShadowstext
    yShadows = new Array(numShadows); // EjsS Model.Variables.shadows.yShadows
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.shadows.yShadows
        yShadows[_i0] = y;  // EjsS Model.Variables.shadows.yShadows
      }
    }());
    yShadowstext = new Array(numShadows); // EjsS Model.Variables.shadows.yShadowstext
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.shadows.yShadowstext
        yShadowstext[_i0] = "";  // EjsS Model.Variables.shadows.yShadowstext
      }
    }());
    dyShadows = new Array(numShadows); // EjsS Model.Variables.shadows.dyShadows
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.shadows.dyShadows
        dyShadows[_i0] = 0;  // EjsS Model.Variables.shadows.dyShadows
      }
    }());
    yanddyShadows = new Array(numShadows); // EjsS Model.Variables.shadows.yanddyShadows
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.shadows.yanddyShadows
        yanddyShadows[_i0] = -100;  // EjsS Model.Variables.shadows.yanddyShadows
      }
    }());
    vShadows = new Array(numShadows); // EjsS Model.Variables.shadows.vShadows
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.shadows.vShadows
        vShadows[_i0] = vy;  // EjsS Model.Variables.shadows.vShadows
      }
    }());
    vShadowsaverage = new Array(numShadows); // EjsS Model.Variables.shadows.vShadowsaverage
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.shadows.vShadowsaverage
        vShadowsaverage[_i0] = vy;  // EjsS Model.Variables.shadows.vShadowsaverage
      }
    }());
    colorv = new Array(numShadows); // EjsS Model.Variables.shadows.colorv
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.shadows.colorv
        colorv[_i0] = "rgba(255,255,255,1)";  // EjsS Model.Variables.shadows.colorv
      }
    }());
    vShadowstext = new Array(numShadows); // EjsS Model.Variables.shadows.vShadowstext
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.shadows.vShadowstext
        vShadowstext[_i0] = "";  // EjsS Model.Variables.shadows.vShadowstext
      }
    }());
    aShadows = new Array(numShadows); // EjsS Model.Variables.shadows.aShadows
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.shadows.aShadows
        aShadows[_i0] = ay;  // EjsS Model.Variables.shadows.aShadows
      }
    }());
    tShadows = new Array(numShadows); // EjsS Model.Variables.shadows.tShadows
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.shadows.tShadows
        tShadows[_i0] = t;  // EjsS Model.Variables.shadows.tShadows
      }
    }());
    shadowColor = "rgba(0,0,255,100)"; // EjsS Model.Variables.shadows.shadowColor
    shadowVis = new Array(numShadows); // EjsS Model.Variables.shadows.shadowVis
    counter = 1; // EjsS Model.Variables.shadows.counter
    next = 1.0; // EjsS Model.Variables.shadows.next
    prev = -0.05; // EjsS Model.Variables.shadows.prev
    xMarkVert = new Array(numShadows); // EjsS Model.Variables.shadows.xMarkVert
    yMarkVert = new Array(numShadows); // EjsS Model.Variables.shadows.yMarkVert
    xMarkHoriz = new Array(numShadows); // EjsS Model.Variables.shadows.xMarkHoriz
    yMarkHoriz = new Array(numShadows); // EjsS Model.Variables.shadows.yMarkHoriz
  });

  _model.addToReset(function() {
    x2 = 7; // EjsS Model.Variables.object2.x2
    uturn2 = 0; // EjsS Model.Variables.object2.uturn2
    y2 = 0; // EjsS Model.Variables.object2.y2
    vy2 = 0; // EjsS Model.Variables.object2.vy2
    ay2 = 0.2; // EjsS Model.Variables.object2.ay2
    vys2 = vy2; // EjsS Model.Variables.object2.vys2
    vyslider2 = vy2; // EjsS Model.Variables.object2.vyslider2
    relativeposition2 = new Array(numShadows); // EjsS Model.Variables.object2.relativeposition2
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.object2.relativeposition2
        relativeposition2[_i0] = "EAST";  // EjsS Model.Variables.object2.relativeposition2
      }
    }());
    xShadows2 = new Array(numShadows); // EjsS Model.Variables.object2.xShadows2
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.object2.xShadows2
        xShadows2[_i0] = 0;  // EjsS Model.Variables.object2.xShadows2
      }
    }());
    xShadowstext2 = new Array(numShadows); // EjsS Model.Variables.object2.xShadowstext2
    yShadows2 = new Array(numShadows); // EjsS Model.Variables.object2.yShadows2
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.object2.yShadows2
        yShadows2[_i0] = y;  // EjsS Model.Variables.object2.yShadows2
      }
    }());
    yShadowstext2 = new Array(numShadows); // EjsS Model.Variables.object2.yShadowstext2
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.object2.yShadowstext2
        yShadowstext2[_i0] = "";  // EjsS Model.Variables.object2.yShadowstext2
      }
    }());
    dyShadows2 = new Array(numShadows); // EjsS Model.Variables.object2.dyShadows2
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.object2.dyShadows2
        dyShadows2[_i0] = 0;  // EjsS Model.Variables.object2.dyShadows2
      }
    }());
    yanddyShadows2 = new Array(numShadows); // EjsS Model.Variables.object2.yanddyShadows2
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.object2.yanddyShadows2
        yanddyShadows2[_i0] = -100;  // EjsS Model.Variables.object2.yanddyShadows2
      }
    }());
    vShadows2 = new Array(numShadows); // EjsS Model.Variables.object2.vShadows2
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.object2.vShadows2
        vShadows2[_i0] = vy;  // EjsS Model.Variables.object2.vShadows2
      }
    }());
    vShadowsaverage2 = new Array(numShadows); // EjsS Model.Variables.object2.vShadowsaverage2
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.object2.vShadowsaverage2
        vShadowsaverage2[_i0] = vy;  // EjsS Model.Variables.object2.vShadowsaverage2
      }
    }());
    colorv2 = new Array(numShadows); // EjsS Model.Variables.object2.colorv2
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.object2.colorv2
        colorv2[_i0] = "rgba(255,255,255,1)";  // EjsS Model.Variables.object2.colorv2
      }
    }());
    vShadowstext2 = new Array(numShadows); // EjsS Model.Variables.object2.vShadowstext2
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.object2.vShadowstext2
        vShadowstext2[_i0] = "";  // EjsS Model.Variables.object2.vShadowstext2
      }
    }());
    aShadows2 = new Array(numShadows); // EjsS Model.Variables.object2.aShadows2
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.object2.aShadows2
        aShadows2[_i0] = ay;  // EjsS Model.Variables.object2.aShadows2
      }
    }());
    tShadows2 = new Array(numShadows); // EjsS Model.Variables.object2.tShadows2
    (function () {
      var _i0;
      for (_i0=0; _i0<numShadows; _i0+=1) {  // EjsS Model.Variables.object2.tShadows2
        tShadows2[_i0] = t;  // EjsS Model.Variables.object2.tShadows2
      }
    }());
    shadowColor2 = "rgba(0,0,255,100)"; // EjsS Model.Variables.object2.shadowColor2
    shadowVis2 = new Array(numShadows); // EjsS Model.Variables.object2.shadowVis2
    counter2 = 1; // EjsS Model.Variables.object2.counter2
    next2 = 1.0; // EjsS Model.Variables.object2.next2
    prev2 = -0.05; // EjsS Model.Variables.object2.prev2
  });

  _model.addToReset(function() {
    helicoptershow = false; // EjsS Model.Variables.conceptest64.helicoptershow
  });

  _model.addToReset(function() {
    isAndroid = checkAndroid(); // EjsS Model.Variables.layout.isAndroid
    iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream; // EjsS Model.Variables.layout.iOS
    iPad = /iPad/.test(navigator.userAgent) && !window.MSStream; // EjsS Model.Variables.layout.iPad
    iPhone = /iPhone|iPod/.test(navigator.userAgent) && !window.MSStream; // EjsS Model.Variables.layout.iPhone
    Android = /Android|android/i.test(navigator.userAgent); // EjsS Model.Variables.layout.Android
    Width = (_isEPub)?"400":"100%"; // EjsS Model.Variables.layout.Width
    Height = (_isEPub)?"500":"100%"; // EjsS Model.Variables.layout.Height
    disabledworld = false; // EjsS Model.Variables.layout.disabledworld
    world = true; // EjsS Model.Variables.layout.world
    graph = true; // EjsS Model.Variables.layout.graph
    graph2 = true; // EjsS Model.Variables.layout.graph2
    graph3 = true; // EjsS Model.Variables.layout.graph3
    datashow = true; // EjsS Model.Variables.layout.datashow
    datashow2 = true; // EjsS Model.Variables.layout.datashow2
  });

  _model.addToReset(function() {
    selectedmodel = new Array(1); // EjsS Model.Variables.model.selectedmodel
    (function () {
      var _i0;
      for (_i0=0; _i0<1; _i0+=1) {  // EjsS Model.Variables.model.selectedmodel
        selectedmodel[_i0] = "0";  // EjsS Model.Variables.model.selectedmodel
      }
    }());
    selectedmodely = new Array(1); // EjsS Model.Variables.model.selectedmodely
    (function () {
      var _i0;
      for (_i0=0; _i0<1; _i0+=1) {  // EjsS Model.Variables.model.selectedmodely
        selectedmodely[_i0] = "0";  // EjsS Model.Variables.model.selectedmodely
      }
    }());
    selectedmodelyv = new Array(1); // EjsS Model.Variables.model.selectedmodelyv
    (function () {
      var _i0;
      for (_i0=0; _i0<1; _i0+=1) {  // EjsS Model.Variables.model.selectedmodelyv
        selectedmodelyv[_i0] = "0";  // EjsS Model.Variables.model.selectedmodelyv
      }
    }());
    selectedmodelya = new Array(1); // EjsS Model.Variables.model.selectedmodelya
    (function () {
      var _i0;
      for (_i0=0; _i0<1; _i0+=1) {  // EjsS Model.Variables.model.selectedmodelya
        selectedmodelya[_i0] = "0";  // EjsS Model.Variables.model.selectedmodelya
      }
    }());
    functionY = "0"; // EjsS Model.Variables.model.functionY
    functionY2 = "0"; // EjsS Model.Variables.model.functionY2
    functionY2v = "0"; // EjsS Model.Variables.model.functionY2v
    functionY2a = "0"; // EjsS Model.Variables.model.functionY2a
    functionYfirstderivative = "0"; // EjsS Model.Variables.model.functionYfirstderivative
    functionYsecondderivative = "0"; // EjsS Model.Variables.model.functionYsecondderivative
    xmodel = 0; // EjsS Model.Variables.model.xmodel
    ymodel = y; // EjsS Model.Variables.model.ymodel
    ymodels = ymodel; // EjsS Model.Variables.model.ymodels
    ymodelvy = 0; // EjsS Model.Variables.model.ymodelvy
    ymodelay = 0; // EjsS Model.Variables.model.ymodelay
    vymodel = vy; // EjsS Model.Variables.model.vymodel
    vymodels = vymodel; // EjsS Model.Variables.model.vymodels
    aymodel = ay; // EjsS Model.Variables.model.aymodel
    showmodel = false; // EjsS Model.Variables.model.showmodel
    ymodelvyshow = false; // EjsS Model.Variables.model.ymodelvyshow
    ymodelayshow = false; // EjsS Model.Variables.model.ymodelayshow
    TLMessage = ""; // EjsS Model.Variables.model.TLMessage
    vymodelay = 0; // EjsS Model.Variables.model.vymodelay
  });

  if (_inputParameters) {
    _inputParameters = _model.parseInputParameters(_inputParameters);
    if (_inputParameters) _model.addToReset(function() { _model._readParameters(_inputParameters); });
  }

  _model.addToReset(function() {
    _privateOdesList=[];
    _ODEi_evolution1 = _ODE_evolution1();
    _privateOdesList.push(_ODEi_evolution1);
  });

  _model.addToReset(function() {
    _model.setAutoplay(false);
    _model.setPauseOnPageExit(true);
    _model.setFPS(20);
    _model.setStepsPerDisplay(5);
  });

  //https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Using_full_screen_mode  // > CustomCode.Lib Page:1
  // does not work for iOS   // > CustomCode.Lib Page:2
  /*jslint browser:true */  // > CustomCode.Lib Page:3
  function toggleFullScreen() {  // > CustomCode.Lib Page:4
    if (!document.fullscreenElement &&    // alternative standard method  // > CustomCode.Lib Page:5
        !document.mozFullScreenElement && !document.webkitFullscreenElement && !document.msFullscreenElement ) {  // current working methods  // > CustomCode.Lib Page:6
      if (document.documentElement.requestFullscreen) {  // > CustomCode.Lib Page:7
        document.documentElement.requestFullscreen();  // > CustomCode.Lib Page:8
      } else if (document.documentElement.msRequestFullscreen) {  // > CustomCode.Lib Page:9
        document.documentElement.msRequestFullscreen();  // > CustomCode.Lib Page:10
      } else if (document.documentElement.mozRequestFullScreen) {  // > CustomCode.Lib Page:11
        document.documentElement.mozRequestFullScreen();  // > CustomCode.Lib Page:12
      } else if (document.documentElement.webkitRequestFullscreen) {  // > CustomCode.Lib Page:13
        document.documentElement.webkitRequestFullscreen();  // > CustomCode.Lib Page:14
      }  // > CustomCode.Lib Page:15
    } else {  // > CustomCode.Lib Page:16
      if (document.exitFullscreen) {  // > CustomCode.Lib Page:17
        document.exitFullscreen();  // > CustomCode.Lib Page:18
      } else if (document.msExitFullscreen) {  // > CustomCode.Lib Page:19
        document.msExitFullscreen();  // > CustomCode.Lib Page:20
      } else if (document.mozCancelFullScreen) {  // > CustomCode.Lib Page:21
        document.mozCancelFullScreen();  // > CustomCode.Lib Page:22
      } else if (document.webkitExitFullscreen) {  // > CustomCode.Lib Page:23
        document.webkitExitFullscreen();  // > CustomCode.Lib Page:24
      }  // > CustomCode.Lib Page:25
    }  // > CustomCode.Lib Page:26
  }  // > CustomCode.Lib Page:27

  function storedata () {  // > CustomCode.storedata:1
    _view.yTrail.newSegment();  // > CustomCode.storedata:2
  _view.vTrail.newSegment();  // > CustomCode.storedata:3
  _view.aTrail.newSegment();  // > CustomCode.storedata:4
  memorycolory=memorycolory+1;  // > CustomCode.storedata:5
  memorycolorv=memorycolorv+1;  // > CustomCode.storedata:6
  memorycolora=memorycolora+1;  // > CustomCode.storedata:7
  //_view.shadows.newShapeSet();  // > CustomCode.storedata:8
  t=0;  // > CustomCode.storedata:9
  y=ys0;  // > CustomCode.storedata:10
  //vy=vys0; // does not reset v for leongster slider concept  // > CustomCode.storedata:11
   counter=0;  // > CustomCode.storedata:12
   next=1; // need for marker to draw again  // > CustomCode.storedata:13
  _initialize();  // > CustomCode.storedata:14
  next =1;  // > CustomCode.storedata:15
  for (var counter=0; counter<numShadows /* Iterations */ ; counter++) {  // > CustomCode.storedata:16
  yShadows[counter] = y;  // > CustomCode.storedata:17
  tShadows[counter]=t;  // > CustomCode.storedata:18
  vShadows[counter]=vy;  // > CustomCode.storedata:19
  aShadows[counter]=ay;  // > CustomCode.storedata:20
  }  // > CustomCode.storedata:21
  }  // > CustomCode.storedata:22

  function shadowinit () {  // > CustomCode.shadowinit:1
   _view.yTrail.clear(); // clear lines drawn on right panel  // > CustomCode.shadowinit:2
    _view.yTrail2.clear();  // > CustomCode.shadowinit:3
     _view.vyTrail.clear();  // > CustomCode.shadowinit:4
      _view.vyTrail2.clear();  // > CustomCode.shadowinit:5
       _view.ayTrail.clear();  // > CustomCode.shadowinit:6
        _view.ayTrail2.clear();  // > CustomCode.shadowinit:7
   t=0;  // > CustomCode.shadowinit:8
    y=0;  // > CustomCode.shadowinit:9
    counter =1; // need to reset shadow counting  // > CustomCode.shadowinit:10
    //counter=0;  // > CustomCode.shadowinit:11
   next=1; // need for marker to draw again  // > CustomCode.shadowinit:12
    _pause();  // > CustomCode.shadowinit:13
   // vy=0;  // > CustomCode.shadowinit:14
     // > CustomCode.shadowinit:15
  // move the shadows into the selected positions  // > CustomCode.shadowinit:16
  for (var i=0; i<numShadows /* Iterations */ ; i++) {  // > CustomCode.shadowinit:17
  yShadows[i] = y;  // > CustomCode.shadowinit:18
  tShadows[i]=t;  // > CustomCode.shadowinit:19
  vShadows[i]=vy;  // > CustomCode.shadowinit:20
  vShadowsaverage[i]=vy;  // > CustomCode.shadowinit:21
  yanddyShadows[i] =-999; // reset text of velocity to far away  // > CustomCode.shadowinit:22
  vShadowstext[i] = vy.toFixed(1) + " ms⁻¹"; //reset text of velocity  // > CustomCode.shadowinit:23
  aShadows[i]=ay;  // > CustomCode.shadowinit:24
  }  // > CustomCode.shadowinit:25
  }  // > CustomCode.shadowinit:26

  function shadowinit2 () {  // > CustomCode.shadowinit 2:1
    t=0;  // > CustomCode.shadowinit 2:2
    y2=0;  // > CustomCode.shadowinit 2:3
    counter2 =0; // need to reset shadow counting  // > CustomCode.shadowinit 2:4
    //counter=0;  // > CustomCode.shadowinit 2:5
   next2=1; // need for marker to draw again  // > CustomCode.shadowinit 2:6
    _pause();  // > CustomCode.shadowinit 2:7
   // vy=0;  // > CustomCode.shadowinit 2:8
     // > CustomCode.shadowinit 2:9
  // move the shadows into the selected positions  // > CustomCode.shadowinit 2:10
  for (var i=0; i<numShadows /* Iterations */ ; i++) {  // > CustomCode.shadowinit 2:11
  yShadows2[i] = y2;  // > CustomCode.shadowinit 2:12
  tShadows2[i]=t;  // > CustomCode.shadowinit 2:13
  vShadows2[i]=vy2;  // > CustomCode.shadowinit 2:14
  vShadowsaverage2[i]=vy2;  // > CustomCode.shadowinit 2:15
  yanddyShadows2[i] =-999; // reset text of velocity to far away  // > CustomCode.shadowinit 2:16
  vShadowstext2[i] = vy2.toFixed(1) + " ms⁻¹"; //reset text of velocity  // > CustomCode.shadowinit 2:17
  aShadows2[i]=ay2;  // > CustomCode.shadowinit 2:18
  }  // > CustomCode.shadowinit 2:19
  }  // > CustomCode.shadowinit 2:20

  //code reference: http://davidwalsh.name/detect-android  // > CustomCode.android:1
  function checkAndroid () {  // > CustomCode.android:2
    var ua = navigator.userAgent.toLowerCase();  // > CustomCode.android:3
    return ua.indexOf("android") > -1; //&& ua.indexOf("mobile");  // > CustomCode.android:4
  }  // > CustomCode.android:5

  function changeOrientation() {  // > CustomCode.changeOrientation:1
          switch (window.orientation) {  // > CustomCode.changeOrientation:2
              case 0:  // > CustomCode.changeOrientation:3
                  this.screenOrientation = 'portrait';  // > CustomCode.changeOrientation:4
                  if (iPad){  // > CustomCode.changeOrientation:5
                  return Math.max(window.screen.width,window.screen.height)*0.8;  // > CustomCode.changeOrientation:6
                  }  // > CustomCode.changeOrientation:7
                  else if (iPhone){  // > CustomCode.changeOrientation:8
                  return Math.max(window.screen.width,window.screen.height)*0.7;  // > CustomCode.changeOrientation:9
                  }  // > CustomCode.changeOrientation:10
                  else if (Android&&parent.cordova){  // > CustomCode.changeOrientation:11
                    return Math.max(window.innerWidth,window.innerHeight)*0.8;  // > CustomCode.changeOrientation:12
                    }  // > CustomCode.changeOrientation:13
                  else {  // > CustomCode.changeOrientation:14
                    return Math.max(window.innerWidth,window.innerHeight)*0.85;  // > CustomCode.changeOrientation:15
                    }  // > CustomCode.changeOrientation:16
                  break;  // > CustomCode.changeOrientation:17
              case 90:  // > CustomCode.changeOrientation:18
                  this.screenOrientation = 'landscape';  // > CustomCode.changeOrientation:19
                  if (iPad){  // > CustomCode.changeOrientation:20
                    return Math.min(window.screen.width,window.screen.height)*0.8;  // > CustomCode.changeOrientation:21
                  }  // > CustomCode.changeOrientation:22
                  else if (iPhone){  // > CustomCode.changeOrientation:23
                    return Math.min(window.screen.width,window.screen.height)*0.7;  // > CustomCode.changeOrientation:24
                    }  // > CustomCode.changeOrientation:25
                  else if (Android&&parent.cordova){  // > CustomCode.changeOrientation:26
                    return Math.min(window.innerWidth,window.innerHeight)*0.8;  // > CustomCode.changeOrientation:27
                    }  // > CustomCode.changeOrientation:28
                    else {  // > CustomCode.changeOrientation:29
                    return Math.min(window.innerWidth,window.innerHeight)*0.85;  // > CustomCode.changeOrientation:30
                    }  // > CustomCode.changeOrientation:31
                    // > CustomCode.changeOrientation:32
                  break;  // > CustomCode.changeOrientation:33
              case 180:  // > CustomCode.changeOrientation:34
                  this.screenOrientation = 'portrait';  // > CustomCode.changeOrientation:35
                  if (iPad){  // > CustomCode.changeOrientation:36
                    return Math.max(window.screen.width,window.screen.height)*0.8;  // > CustomCode.changeOrientation:37
                 }  // > CustomCode.changeOrientation:38
                 else if (iPhone){  // > CustomCode.changeOrientation:39
                   return Math.max(window.screen.width,window.screen.height)*0.7;  // > CustomCode.changeOrientation:40
                   }  // > CustomCode.changeOrientation:41
                   else if (Android&&parent.cordova){  // > CustomCode.changeOrientation:42
                     return Math.max(window.innerWidth,window.innerHeight)*0.8;  // > CustomCode.changeOrientation:43
                     }  // > CustomCode.changeOrientation:44
                 else{  // > CustomCode.changeOrientation:45
                   return Math.max(window.innerWidth,window.innerHeight)*0.9;  // > CustomCode.changeOrientation:46
                   }  // > CustomCode.changeOrientation:47
                 break;  // > CustomCode.changeOrientation:48
              case -90:  // > CustomCode.changeOrientation:49
                  this.screenOrientation = 'landscape';  // > CustomCode.changeOrientation:50
                  if (iPad){  // > CustomCode.changeOrientation:51
                    return Math.min(window.screen.width,window.screen.height)*0.8;  // > CustomCode.changeOrientation:52
                  }  // > CustomCode.changeOrientation:53
                  else if (iPhone){  // > CustomCode.changeOrientation:54
                    return Math.min(window.screen.width,window.screen.height)*0.7;  // > CustomCode.changeOrientation:55
                    }  // > CustomCode.changeOrientation:56
                    else if (Android&&parent.cordova){  // > CustomCode.changeOrientation:57
                          return Math.min(window.innerWidth,window.innerHeight)*0.8;  // > CustomCode.changeOrientation:58
                      }  // > CustomCode.changeOrientation:59
                  else {  // > CustomCode.changeOrientation:60
                    return Math.min(window.innerWidth,window.innerHeight)*0.85;  // > CustomCode.changeOrientation:61
                    }  // > CustomCode.changeOrientation:62
                  break;  // > CustomCode.changeOrientation:63
              default:  // > CustomCode.changeOrientation:64
                  this.screenOrientation = 'unknown';  // > CustomCode.changeOrientation:65
           //       return (iPad)?""+(window.screen.width+window.screen.height)*0.4:((iPhone)?""+window.screen.width:_view._format(window.innerHeight*0.9,"0"));  // > CustomCode.changeOrientation:66
         return window.innerHeight*0.85;  // > CustomCode.changeOrientation:67
         }  // > CustomCode.changeOrientation:68
      }  // > CustomCode.changeOrientation:69

  function autorangeX() {  // > CustomCode.autorangeX:1
      // > CustomCode.autorangeX:2
   _view.plottingPanelxvst.getRealWorldXMax()<10?1:_view.plottingPanelxvst.getRealWorldXMax()<20?5:_view.plottingPanelxvst.getRealWorldXMax()<50?10:100;  // > CustomCode.autorangeX:3
     // > CustomCode.autorangeX:4
     // > CustomCode.autorangeX:5
  }  // > CustomCode.autorangeX:6

  _model.addToInitialization(function() {
    if (!__pagesEnabled["Init Page"]) return;
    t=0; //initialize();  // > Initialization.Init Page:1
        // > Initialization.Init Page:2
    //xs=x; //store values of x and y  // > Initialization.Init Page:3
      ys0=y;  // > Initialization.Init Page:4
    //  vxs=vx;  // > Initialization.Init Page:5
      vys0=vy;  // > Initialization.Init Page:6
        // > Initialization.Init Page:7
  });

  _model.addToInitialization(function() {
    if (!__pagesEnabled["color"]) return;
    colorv[0]="rgba(255, 0, 0,1)";  // > Initialization.color:1
    colorv[1]="rgba(190, 65, 0,1)";  // > Initialization.color:2
    colorv[2]="rgba(125, 125, 0,1)";  // > Initialization.color:3
    colorv[3]="rgba(65, 190, 0,1)";  // > Initialization.color:4
    colorv[4]="rgba(0,255,0,1)";  // > Initialization.color:5
    colorv[5]="rgba(0,190,65,1)";  // > Initialization.color:6
    colorv[6]="rgba(0,125,125,1)";  // > Initialization.color:7
    colorv[7]="rgba(0,65,190,1)";  // > Initialization.color:8
    colorv[8]="rgba(0,0,255,1)";  // > Initialization.color:9
    colorv[9]="rgba(65,0,190,1)";  // > Initialization.color:10
    colorv[10]="rgba(125,0,125,1)";  // > Initialization.color:11
    colorv[11]="rgba(190,0,65,1)";  // > Initialization.color:12
    colorv[12]="rgba(85,85,85,1)";  // > Initialization.color:13
    colorv[13]="rgba(190,65,65,1)";  // > Initialization.color:14
    colorv[14]="rgba(65,190,65,1)";  // > Initialization.color:15
    colorv[15]="rgba(65,65,190,1)";  // > Initialization.color:16
    colorv[16]="rgba(65,190,190,1)";  // > Initialization.color:17
    colorv[17]="rgba(190,65,190,1)";  // > Initialization.color:18
    colorv[18]="rgba(190,190,65,1)";  // > Initialization.color:19
    colorv[19]="rgba(190,190,190,1)";  // > Initialization.color:20
    colorv[20]="rgba(255, 0, 0,1)";  // > Initialization.color:21
    colorv[21]="rgba(190, 65, 0,1)";  // > Initialization.color:22
    colorv[22]="rgba(125, 125, 0,1)";  // > Initialization.color:23
    colorv[23]="rgba(65, 190, 0,1)";  // > Initialization.color:24
    colorv[24]="rgba(0,255,0,1)";  // > Initialization.color:25
    colorv[25]="rgba(0,190,65,1)";  // > Initialization.color:26
    colorv[26]="rgba(0,125,125,1)";  // > Initialization.color:27
    colorv[27]="rgba(0,65,190,1)";  // > Initialization.color:28
    colorv[28]="rgba(0,0,255,1)";  // > Initialization.color:29
    colorv[29]="rgba(65,0,190,1)";  // > Initialization.color:30
    colorv[30]="rgba(125,0,125,1)";  // > Initialization.color:31
    colorv[31]="rgba(190, 65, 0,1)";  // > Initialization.color:32
    colorv[32]="rgba(125, 125, 0,1)";  // > Initialization.color:33
    colorv[33]="rgba(65, 190, 0,1)";  // > Initialization.color:34
    colorv[34]="rgba(0,255,0,1)";  // > Initialization.color:35
    colorv[35]="rgba(0,190,65,1)";  // > Initialization.color:36
    colorv[36]="rgba(0,125,125,1)";  // > Initialization.color:37
    colorv[37]="rgba(0,65,190,1)";  // > Initialization.color:38
    colorv[38]="rgba(0,0,255,1)";  // > Initialization.color:39
    colorv[39]="rgba(65,0,190,1)";  // > Initialization.color:40
    colorv[40]="rgba(125,0,125,1)";  // > Initialization.color:41
  });

  _model.addToInitialization(function() {
    if (!__pagesEnabled["svg"]) return;
    var container = document.createElement('div');  // > Initialization.svg:1
    var svggradient = '<svg xmlns="http://www.w3.org/2000/svg" version="1.1"><defs>'+  // > Initialization.svg:2
      '  <radialGradient id="mygrandient" cx="50%" cy="50%" r="90%" fx="90%" fy="10%">'+  // > Initialization.svg:3
      '    <stop offset="0%" style="stop-color:rgb(0,255,255); stop-opacity:0.5" />'+  // > Initialization.svg:4
      '    <stop offset="100%" style="stop-color:rgb(0,0,255);stop-opacity:0.5" />'+  // > Initialization.svg:5
      '  </radialGradient>'+  // > Initialization.svg:6
      '</defs></svg>';  // > Initialization.svg:7
    container.innerHTML = svggradient;  // > Initialization.svg:8
    document.body.appendChild(container);  // > Initialization.svg:9
    //"url(#mygrandient)"  // > Initialization.svg:10
    var container = document.createElement('div');  // > Initialization.svg:11
    var svggradient = '<svg xmlns="http://www.w3.org/2000/svg" version="1.1"><defs>'+  // > Initialization.svg:12
      '  <radialGradient id="mygrandient1" cx="50%" cy="50%" r="90%" fx="50%" fy="50%">'+  // > Initialization.svg:13
      '    <stop offset="0%" style="stop-color:rgb(0,255,0); stop-opacity:1" />'+  // > Initialization.svg:14
      '    <stop offset="100%" style="stop-color:rgb(0,0,0);stop-opacity:0.5" />'+  // > Initialization.svg:15
      '  </radialGradient>'+  // > Initialization.svg:16
      '</defs></svg>';  // > Initialization.svg:17
    container.innerHTML = svggradient;  // > Initialization.svg:18
    document.body.appendChild(container);  // > Initialization.svg:19
    //"url(#mygrandient1)"  // > Initialization.svg:20
  });

  _model.addToInitialization(function() {
    if (!__pagesEnabled["shadows"]) return;
    // prev = Math.ceil(t);  // > Initialization.shadows:1
    next =1;  // > Initialization.shadows:2
    for (var counter=0; counter<numShadows /* Iterations */ ; counter++) {  // > Initialization.shadows:3
    xShadows[counter] = x;  // > Initialization.shadows:4
    xShadows2[counter] = x2;  // > Initialization.shadows:5
    yShadows[counter] = y;  // > Initialization.shadows:6
    tShadows[counter]=t;  // > Initialization.shadows:7
    vShadows[counter]=vy;  // > Initialization.shadows:8
    //vShadowstext[counter] =""+vy;  // > Initialization.shadows:9
    aShadows[counter]=ay;  // > Initialization.shadows:10
    }  // > Initialization.shadows:11
  });

  _model.addToInitialization(function() {
    if (!__pagesEnabled["undefined"]) return;
    if (Width1==undefined){   // > Initialization.undefined:1
      Width1="100%";  // > Initialization.undefined:2
      }  // > Initialization.undefined:3
      if (Width2==undefined){   // > Initialization.undefined:4
      Width2="0%";  // > Initialization.undefined:5
      }  // > Initialization.undefined:6
      if (Widthv==undefined){   // > Initialization.undefined:7
      Widthv="0%";  // > Initialization.undefined:8
      }  // > Initialization.undefined:9
      if (Widtha==undefined){   // > Initialization.undefined:10
      Widtha="0%";  // > Initialization.undefined:11
      }  // > Initialization.undefined:12
      if (xvst==undefined){   // > Initialization.undefined:13
      xvst=true;  // > Initialization.undefined:14
      }  // > Initialization.undefined:15
      if (vvst==undefined){   // > Initialization.undefined:16
      vvst=false;  // > Initialization.undefined:17
      }  // > Initialization.undefined:18
      if (avst==undefined){   // > Initialization.undefined:19
      avst=false;  // > Initialization.undefined:20
      }  // > Initialization.undefined:21
      //showobject2  // > Initialization.undefined:22
    if (showobject2==undefined){   // > Initialization.undefined:23
      showobject2=false;  // > Initialization.undefined:24
      }  // > Initialization.undefined:25
      //helicoptershow=true;  // > Initialization.undefined:26
    //  if (helicoptershow==undefined){   // > Initialization.undefined:27
     // helicoptershow=false;  // > Initialization.undefined:28
     // }  // > Initialization.undefined:29
      //showball  // > Initialization.undefined:30
    //if (showball==undefined){   // > Initialization.undefined:31
     // showball=true;  // > Initialization.undefined:32
     // }    // > Initialization.undefined:33
  });

  _model.addToInitialization(function() {
    if (!__pagesEnabled["axes"]) return;
    _view.plottingPanel.getAxisX().setPosition([0,0.91]);  // > Initialization.axes:1
    _view.plottingPanel.getTitleX().setPosition([0.95,0.5]);  // > Initialization.axes:2
    _view.plottingPanel.getAxisY().setPosition([0.5,0]);  // > Initialization.axes:3
    _view.plottingPanel.getTitleY().setPosition([0.5,0.95]);  // > Initialization.axes:4
    // for xmin= -100  // > Initialization.axes:5
    //_view.plottingPanelxvst.getAxisX().setPosition([0,0.5]);  // > Initialization.axes:6
    //_view.plottingPanelxvst.getTitleX().setPosition([0.95,0.88]);  // > Initialization.axes:7
    //_view.plottingPanelxvst.getAxisY().setPosition([0.045,0]);  // > Initialization.axes:8
    //_view.plottingPanelxvst.getTitleY().setPosition([0.12,0.92]);  // > Initialization.axes:9
    _view.plottingPanelxvst.getAxisX().setPosition([0,0.175]);  // > Initialization.axes:10
    _view.plottingPanelxvst.getTitleX().setPosition([0.95,0.3]);  // > Initialization.axes:11
    _view.plottingPanelxvst.getAxisY().setPosition([0.0835,0]);  // > Initialization.axes:12
    _view.plottingPanelxvst.getTitleY().setPosition([0.16,0.85]);  // > Initialization.axes:13
    // for xmin= -200  // > Initialization.axes:14
    //_view.plottingPanelxvst.getAxisX().setPosition([0,0.911]);  // > Initialization.axes:15
    //_view.plottingPanelxvst.getTitleX().setPosition([0.95,0.88]);  // > Initialization.axes:16
    //_view.plottingPanelxvst.getAxisY().setPosition([0.045,0]);  // > Initialization.axes:17
    //_view.plottingPanelxvst.getTitleY().setPosition([0.12,0.92]);  // > Initialization.axes:18
    _view.plottingPanelxvst2.getAxisX().setPosition([0,0.5]);  // > Initialization.axes:19
    _view.plottingPanelxvst2.getTitleX().setPosition([0.95,0.5]);  // > Initialization.axes:20
    _view.plottingPanelxvst2.getAxisY().setPosition([0.083,0]);  // > Initialization.axes:21
    _view.plottingPanelxvst2.getTitleY().setPosition([0.16,0.85]);  // > Initialization.axes:22
    _view.plottingPanelxvst3.getAxisX().setPosition([0,0.5]);  // > Initialization.axes:23
    _view.plottingPanelxvst3.getTitleX().setPosition([0.95,0.5]);  // > Initialization.axes:24
    _view.plottingPanelxvst3.getAxisY().setPosition([0.083,0]);  // > Initialization.axes:25
    _view.plottingPanelxvst3.getTitleY().setPosition([0.16,0.85]);  // > Initialization.axes:26
    //old ay  // > Initialization.axes:27
    //_view.plottingPanelxvst3.getAxisX().setPosition([0,0.737]);  // > Initialization.axes:28
    //_view.plottingPanelxvst3.getTitleX().setPosition([0.95,0.75]);  // > Initialization.axes:29
    //_view.plottingPanelxvst3.getAxisY().setPosition([0.045,0]);  // > Initialization.axes:30
    //_view.plottingPanelxvst3.getTitleY().setPosition([0.12,0.92]);  // > Initialization.axes:31
  });

  _model.addToInitialization(function() {
    _initializeSolvers();
  });

  _model.addToEvolution(function() {
    if (!__pagesEnabled["Evol Page"]) return;
    _ODEi_evolution1.step();
  });

  _model.addToFixedRelations(function() { _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); });

  _model.addToFixedRelations(function() {
    if (!__pagesEnabled["storevo"]) return;
    vys = vy;  // > FixedRelations.storevo:1
    vys2 = vy2; // for second car storing for u turn detection  // > FixedRelations.storevo:2
  });

  _model.addToFixedRelations(function() {
    if (!__pagesEnabled["axes"]) return;
    if (_model.isPlaying()===true) { //NEED this for conflict with initialize page values  // > FixedRelations.axes:1
    _view.plottingPanelxvst.getAxisX().setAbsoluteY(_view.plottingPanelxvst.getGrid().getFixedTickY());  // > FixedRelations.axes:2
    _view.plottingPanelxvst.getAxisY().setAbsoluteX(_view.plottingPanelxvst.getGrid().getFixedTickX());  // > FixedRelations.axes:3
    _view.plottingPanelxvst2.getAxisX().setAbsoluteY(_view.plottingPanelxvst2.getGrid().getFixedTickY());  // > FixedRelations.axes:4
    _view.plottingPanelxvst2.getAxisY().setAbsoluteX(_view.plottingPanelxvst2.getGrid().getFixedTickX());  // > FixedRelations.axes:5
    _view.plottingPanelxvst3.getAxisX().setAbsoluteY(_view.plottingPanelxvst3.getGrid().getFixedTickY());  // > FixedRelations.axes:6
    _view.plottingPanelxvst3.getAxisY().setAbsoluteX(_view.plottingPanelxvst3.getGrid().getFixedTickX());  // > FixedRelations.axes:7
    }  // > FixedRelations.axes:8
  });

  _model.addToFixedRelations(function() {
    if (!__pagesEnabled["FixRel Page 2"]) return;
    //if (y>=40){  // > FixedRelations.FixRel Page 2:1
     // _pause();  // > FixedRelations.FixRel Page 2:2
     // }  // > FixedRelations.FixRel Page 2:3
    //if (y<=-20){  // > FixedRelations.FixRel Page 2:4
     // _pause();  // > FixedRelations.FixRel Page 2:5
     // }  // > FixedRelations.FixRel Page 2:6
      if (t>=20){  // > FixedRelations.FixRel Page 2:7
        _pause();  // > FixedRelations.FixRel Page 2:8
        }  // > FixedRelations.FixRel Page 2:9
  });

  _model.addToFixedRelations(function() {
    if (!__pagesEnabled["model"]) return;
    ymodel=_view.fField2.evaluate({ t : t, y : ymodel });   // > FixedRelations.model:1
    vymodel=_view.fField2v.evaluate({ t : t, y : vymodel });   // > FixedRelations.model:2
    aymodel=_view.fField2a.evaluate({ t : t, y : ay-k*vy });   // > FixedRelations.model:3
    //aymodel=_view.fField2a.evaluate({ t : t, y : aymodel });   // > FixedRelations.model:4
    //vymodel= (ymodel-ymodels)/dt;  // > FixedRelations.model:5
    //aymodel= (vymodel-vymodels)/dt;   // > FixedRelations.model:6
    //vymodel=(ymodel);   // > FixedRelations.model:7
    //ymodels=ymodel;  // > FixedRelations.model:8
    //vymodels=vymodel;   // > FixedRelations.model:9
    if ( showmodel===true){  // > FixedRelations.model:10
    TLMessage = " Ymodel = "+_view._format(ymodel,"0.00")+ " m " +", vy = "+_view._format(vymodel,"0.00")+ " m/s " + " ay = "+_view._format(aymodel,"0.00")+ " m/s² "  // > FixedRelations.model:11
    }  // > FixedRelations.model:12
    else if ( ymodelvyshow===true){  // > FixedRelations.model:13
    TLMessage = " Ymodel = "+_view._format(ymodelvy,"0.00")+ " m " +", vy = "+_view._format(vymodel,"0.00")+ " m/s " + " ay = "+_view._format(aymodel,"0.00")+ " m/s² "  // > FixedRelations.model:14
    }  // > FixedRelations.model:15
  });

  _model.addToFixedRelations(function() { _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); });

  function _initializeSolvers() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].initializeSolver();
  }

  function _automaticResetSolvers() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].automaticResetSolver();
  }

  _model.resetSolvers = function() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].resetSolver();
  };

  _getODE = function (_odeName) {
    if (_odeName=="Evol Page") return _ODEi_evolution1;
    return null;
  }

  function _getEventSolver(_odeName) {
    var ode = _getODE(_odeName);
    if (ode===null) return null;
    return ode.getEventSolver();
  }

  function _setSolverClass(_odeName, _engine) {
    var ode = _getODE(_odeName);
    if (ode===null) return;
    if (!_engine.setODE) {
      var classname = _engine.toLowerCase();
      if      (classname.indexOf("boga")>=0)   _engine = EJSS_ODE_SOLVERS.bogackiShampine23;
      else if (classname.indexOf("cash")>=0)   _engine = EJSS_ODE_SOLVERS.cashKarp45;
      else if (classname.indexOf("dopri5")>=0) _engine = EJSS_ODE_SOLVERS.dopri5;
      else if (classname.indexOf("dopri8")>=0) _engine = EJSS_ODE_SOLVERS.dopri853;
      else if (classname.indexOf("richa")>=0)  _engine = EJSS_ODE_SOLVERS.eulerRichardson;
      else if (classname.indexOf("euler")>=0)  _engine = EJSS_ODE_SOLVERS.euler;
      else if (classname.indexOf("fehlberg87")>=0) _engine = EJSS_ODE_SOLVERS.fehlberg87;
      else if (classname.indexOf("fehlberg8")>=0)  _engine = EJSS_ODE_SOLVERS.fehlberg8;
      else if (classname.indexOf("radau")>=0)   _engine = EJSS_ODE_SOLVERS.radau5;
      else if (classname.indexOf("runge")>=0)  _engine = EJSS_ODE_SOLVERS.rungeKutta4;
      else if (classname.indexOf("rk4")>=0)    _engine = EJSS_ODE_SOLVERS.rungeKutta4;
      else if (classname.indexOf("verlet")>=0) _engine = EJSS_ODE_SOLVERS.velocityVerlet;
    }
    if (_engine) ode.setSolverClass(_engine);
  }

  function _ODE_evolution1() {
    var __odeSelf = {};
    var __eventSolver;
    var __solverClass = EJSS_ODE_SOLVERS.rungeKutta4;
    var __state=[];
    var _ODE_evolution1_Event1;
    var _ODE_evolution1_Event2;
    var _ODE_evolution1_Event3;
    var __ignoreErrors=false;
    var __mustInitialize=true;
    var __isEnabled=true;
    var __mustUserReinitialize=false;
    var __mustReinitialize=true;


    __odeSelf._getOdeVars = function (){ return["y","vy","y2","vy2","t"]};

    __odeSelf.setSolverClass = function(__aSolverClass) {
      __solverClass = __aSolverClass;
      __instantiateSolver();
    };

    function __instantiateSolver() {
      __state=[];
      __pushState();
      __eventSolver = EJSS_ODE_SOLVERS.interpolatorEventSolver(__solverClass(),__odeSelf);
      __mustInitialize = true;
    }

    __odeSelf.setEnabled = function(_enabled) { __isEnabled = _enabled; };

    __odeSelf.getIndependentVariableValue = function() { return __eventSolver.getIndependentVariableValue(); };

    __odeSelf.getInternalStepSize = function() { return __eventSolver.getInternalStepSize(); };

    __odeSelf.isAccelerationIndependentOfVelocity = function() { return false; };

    __odeSelf.initializeSolver = function() {
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); return; }
      __pushState();
      __eventSolver.initialize(dt);
      __eventSolver.setBestInterpolation(false);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.removeAllEvents();
      if (__pagesEnabled["shadow"]) __eventSolver.addEvent(_ODE_evolution1_Event1());
      if (__pagesEnabled["shadow bus"]) __eventSolver.addEvent(_ODE_evolution1_Event2());
      if (__pagesEnabled["t20sec"]) __eventSolver.addEvent(_ODE_evolution1_Event3());
      for(k in userEvents1){__eventSolver.addEvent(userEvents1[k]);}
      __eventSolver.setEstimateFirstStep(false);
      __eventSolver.setEnableExceptions(false);
      __eventSolver.setTolerances(0.00001,0.00001);
      __mustReinitialize = true;
      __mustInitialize = false;
    };

    function __pushState() {
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        if (__state[__cIn]!=y) __mustReinitialize = true;
        __state[__cIn++] = y;
        if (__state[__cIn]!=vy) __mustReinitialize = true;
        __state[__cIn++] = vy;
        if (__state[__cIn]!=y2) __mustReinitialize = true;
        __state[__cIn++] = y2;
        if (__state[__cIn]!=vy2) __mustReinitialize = true;
        __state[__cIn++] = vy2;
        if (__state[__cIn]!=t) __mustReinitialize = true;
        __state[__cIn++] = t;
    }

    function __arraysChanged () {
      return false;
    }

    __odeSelf.getEventSolver = function() {
      return __eventSolver;
    };

    __odeSelf.resetSolver = function() {
      __mustUserReinitialize = true;
    };

    __odeSelf.automaticResetSolver = function() {
      __mustReinitialize = true;
    };

    function __errorAction () {
      if (__ignoreErrors) return;
      console.log (__eventSolver.getErrorMessage());
      _pause();
      // Make sure the solver is reinitialized;
      __mustReinitialize = true;
    }

    __odeSelf.step = function() { return __privateStep(false); };

    __odeSelf.solverStep = function() { return __privateStep(true); };

    function __privateStep(__takeMaximumStep) {
      if (!__isEnabled) return 0;
      if (dt===0) return 0;
      if (__mustInitialize) __odeSelf.initializeSolver();
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); }
      __eventSolver.setStepSize(dt);
      __eventSolver.setInternalStepSize(dt);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.setTolerances(0.00001,0.00001);
      __pushState();
      if (__mustUserReinitialize) { 
        __eventSolver.userReinitialize();
        __mustUserReinitialize = false;
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      else if (__mustReinitialize) { 
        __eventSolver.reinitialize();
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      var __stepTaken = __takeMaximumStep ? __eventSolver.maxStep() : __eventSolver.step();
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        y = __state[__cOut++];
        vy = __state[__cOut++];
        y2 = __state[__cOut++];
        vy2 = __state[__cOut++];
        t = __state[__cOut++];
      // Check for error
      if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      return __stepTaken;
    }

    __odeSelf.getState = function() { return __state; };

    __odeSelf.getRate = function(_aState,_aRate) {
      _aRate[_aRate.length-1] = 0.0; // In case the prelim code returns
      var __index=-1; // so that it can be used in preliminary code
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var y = _aState[__cOut++];
        var vy = _aState[__cOut++];
        var y2 = _aState[__cOut++];
        var vy2 = _aState[__cOut++];
        var t = _aState[__cOut++];
      // Preliminary code: Code to be executed before rate equations are evaluated
        if (vys*vy <0) {  // > Preliminary code for ODE.Evol Page:1
          uturn=1;  // > Preliminary code for ODE.Evol Page:2
         // for (var i=counter; i<numShadows  ; i++) {  // > Preliminary code for ODE.Evol Page:3
          // displacevtext[counter]=0.5; // move the dot  // > Preliminary code for ODE.Evol Page:4
         //// relativeposition[counter]="WEST";  // > Preliminary code for ODE.Evol Page:5
        //}  // > Preliminary code for ODE.Evol Page:6
           // > Preliminary code for ODE.Evol Page:7
         // x = 1; // move dots higher  // > Preliminary code for ODE.Evol Page:8
         // alert(y);  // > Preliminary code for ODE.Evol Page:9
          }  // > Preliminary code for ODE.Evol Page:10
          if (vys2*vy2 <0) {  // > Preliminary code for ODE.Evol Page:11
          uturn2=1;  // > Preliminary code for ODE.Evol Page:12
         // for (var i=counter; i<numShadows  ; i++) {  // > Preliminary code for ODE.Evol Page:13
          // displacevtext[counter]=0.5; // move the dot  // > Preliminary code for ODE.Evol Page:14
         //// relativeposition[counter]="WEST";  // > Preliminary code for ODE.Evol Page:15
        //}  // > Preliminary code for ODE.Evol Page:16
           // > Preliminary code for ODE.Evol Page:17
         // x = 1; // move dots higher  // > Preliminary code for ODE.Evol Page:18
         // alert(y);  // > Preliminary code for ODE.Evol Page:19
          }  // > Preliminary code for ODE.Evol Page:20
      // Compute the rate
        var __cRate=0;
        _aRate[__cRate++] = vy; // Rate for ODE: Evol Page:y
        _aRate[__cRate++] = ay; // Rate for ODE: Evol Page:vy
        _aRate[__cRate++] = vy2; // Rate for ODE: Evol Page:y2
        _aRate[__cRate++] = ay2; // Rate for ODE: Evol Page:vy2
        _aRate[__cRate++] = 1; // independent variable
        return _aRate;
    }; //end of getRate

    __odeSelf._addEvent = function(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent){
    var User_Event = function (userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent) {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return eventType; };

      _eventSelf.getRootFindingMethod = function() { return eventMethod; };

      _eventSelf.getMaxIterations = function() { return maxIter; };

      _eventSelf.getTolerance = function() { return eventTolerance; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var y = _aState[__cOut++];
        var vy = _aState[__cOut++];
        var y2 = _aState[__cOut++];
        var vy2 = _aState[__cOut++];
        var t = _aState[__cOut++];
      return eval(userCondition);
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        y = __state[__cOut++];
        vy = __state[__cOut++];
        y2 = __state[__cOut++];
        vy2 = __state[__cOut++];
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = y;
        __state[__cIn++] = vy;
        __state[__cIn++] = y2;
        __state[__cIn++] = vy2;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        if (undefined != functions) eval(functions.toString());
        eval(userAction);
        return endAtEvent;
      }

      return _eventSelf;
    }; // End of event

   userEvents1.push(User_Event(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent));
   }

    _ODE_evolution1_Event1 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var y = _aState[__cOut++];
        var vy = _aState[__cOut++];
        var y2 = _aState[__cOut++];
        var vy2 = _aState[__cOut++];
        var t = _aState[__cOut++];
        var min = 1.0e-5;  // > Event zero-condition for page Evol Page:1
        //if ((_view.comboBox.getProperty("SelectedOptions")!="free fall and rebound"))  // > Event zero-condition for page Evol Page:2
        if ((_view.comboBox.getProperty("SelectedOptions")!="free fall and rebound")&&(next - t < min) ){  // > Event zero-condition for page Evol Page:3
          min = next - t;   // > Event zero-condition for page Evol Page:4
          }  // > Event zero-condition for page Evol Page:5
        return min;  // > Event zero-condition for page Evol Page:6
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        y = __state[__cOut++];
        vy = __state[__cOut++];
        y2 = __state[__cOut++];
        vy2 = __state[__cOut++];
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = y;
        __state[__cIn++] = vy;
        __state[__cIn++] = y2;
        __state[__cIn++] = vy2;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        shadowVis[counter] = true;  // > Event action for page Evol Page:1
         if (uturn==0){  // > Event action for page Evol Page:2
          xShadows[counter] = x;  // > Event action for page Evol Page:3
         // xShadowstext[counter]=x -1;  // > Event action for page Evol Page:4
          if (Math.abs(vy)<1){ // smaller than 1   // > Event action for page Evol Page:5
            xShadowstext[counter]=999; // put far away  // > Event action for page Evol Page:6
            }  // > Event action for page Evol Page:7
            else {  // > Event action for page Evol Page:8
                xShadowstext[counter]=x -1; // displace x by -1  // > Event action for page Evol Page:9
                //alert(xShadowstext[counter]);  // > Event action for page Evol Page:10
              }  // > Event action for page Evol Page:11
          }  // > Event action for page Evol Page:12
          else if (uturn==1){  // > Event action for page Evol Page:13
            //xShadows[counter] = x+displacevtext[counter];  // > Event action for page Evol Page:14
            xShadows[counter] = x+1;  // > Event action for page Evol Page:15
            if (Math.abs(vy)<1){  // > Event action for page Evol Page:16
            xShadowstext[counter]=999;  // > Event action for page Evol Page:17
            }  // > Event action for page Evol Page:18
            else {  // > Event action for page Evol Page:19
                xShadowstext[counter]=x +2;  // > Event action for page Evol Page:20
              }  // > Event action for page Evol Page:21
            relativeposition[counter]="WEST";  // > Event action for page Evol Page:22
            }  // > Event action for page Evol Page:23
          yShadows[counter] = y;  // > Event action for page Evol Page:24
          tShadows[counter]=t;  // > Event action for page Evol Page:25
          vShadows[counter]=vy;  // > Event action for page Evol Page:26
          vShadowsaverage[counter]=vy+ay/2; // must add a/2 to get correct length of v  // > Event action for page Evol Page:27
         vShadowstext[counter] =vy.toFixed(1) + " ms⁻¹";  // > Event action for page Evol Page:28
         //yShadowstext[counter] =y.toFixed(0) + " m";  // added from kinematics  // > Event action for page Evol Page:29
         //alert(vy);  // > Event action for page Evol Page:30
         aShadows[counter]=ay-k*vy;  // > Event action for page Evol Page:31
         dyShadows[counter] = (yShadows[counter]-yShadows[counter-1]).toFixed(1);//show orange backwards, not predictive  // > Event action for page Evol Page:32
         yanddyShadows[counter]=yShadows[counter]-dyShadows[counter]/2;  // > Event action for page Evol Page:33
         // xMarkVert[counter] = x;  // > Event action for page Evol Page:34
         // yMarkVert[counter] = y - 0.15;  // > Event action for page Evol Page:35
         // xMarkHoriz[counter] = x - 0.15;  // > Event action for page Evol Page:36
        //  yMarkHoriz[counter] = y;  // > Event action for page Evol Page:37
            // > Event action for page Evol Page:38
         //prev = Math.ceil(t);  // > Event action for page Evol Page:39
          counter++;  // > Event action for page Evol Page:40
          next+=1.0;  // > Event action for page Evol Page:41
        return true;
      }

      return _eventSelf;
    }; // End of event

    _ODE_evolution1_Event2 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var y = _aState[__cOut++];
        var vy = _aState[__cOut++];
        var y2 = _aState[__cOut++];
        var vy2 = _aState[__cOut++];
        var t = _aState[__cOut++];
        var min2 = 1.0e-5;  // > Event zero-condition for page Evol Page:1
        if ((next2 - t < min2) ){  // > Event zero-condition for page Evol Page:2
          min2 = next2 - t;   // > Event zero-condition for page Evol Page:3
          }  // > Event zero-condition for page Evol Page:4
        return min2;  // > Event zero-condition for page Evol Page:5
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        y = __state[__cOut++];
        vy = __state[__cOut++];
        y2 = __state[__cOut++];
        vy2 = __state[__cOut++];
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = y;
        __state[__cIn++] = vy;
        __state[__cIn++] = y2;
        __state[__cIn++] = vy2;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        shadowVis2[counter2] = true;  // > Event action for page Evol Page:1
         if (uturn2==0){  // > Event action for page Evol Page:2
          xShadows2[counter2] = x2;  // > Event action for page Evol Page:3
          //xShadowstext2[counter2]=x2 -1;  // > Event action for page Evol Page:4
          // xShadowstext[counter]=x -1;  // > Event action for page Evol Page:5
          if (Math.abs(vy2)<1){ // smaller than 1   // > Event action for page Evol Page:6
            xShadowstext2[counter2]=999; // put far away  // > Event action for page Evol Page:7
            }  // > Event action for page Evol Page:8
            else {  // > Event action for page Evol Page:9
                xShadowstext2[counter2]=x2 -1; // displace x by -1  // > Event action for page Evol Page:10
                //alert(xShadowstext[counter]);  // > Event action for page Evol Page:11
              }  // > Event action for page Evol Page:12
          }  // > Event action for page Evol Page:13
          else if (uturn2==1){  // > Event action for page Evol Page:14
            //xShadows[counter] = x+displacevtext[counter];  // > Event action for page Evol Page:15
            xShadows2[counter2] = x2+1;  // > Event action for page Evol Page:16
            if (Math.abs(vy2)<1){  // > Event action for page Evol Page:17
            xShadowstext2[counter2]=999;  // > Event action for page Evol Page:18
            }  // > Event action for page Evol Page:19
            else {  // > Event action for page Evol Page:20
                xShadowstext2[counter2]=x2 +2;  // > Event action for page Evol Page:21
              }  // > Event action for page Evol Page:22
            relativeposition2[counter2]="WEST";  // > Event action for page Evol Page:23
            }  // > Event action for page Evol Page:24
          yShadows2[counter2] = y2;  // > Event action for page Evol Page:25
          tShadows2[counter2]=t;  // > Event action for page Evol Page:26
          vShadows2[counter2]=vy2;  // > Event action for page Evol Page:27
          vShadowsaverage2[counter2]=vy2+ay2/2; // must add a/2 to get correct length of v  // > Event action for page Evol Page:28
         vShadowstext2[counter2] =vy2.toFixed(1) + " ms⁻¹";  // > Event action for page Evol Page:29
         //yShadowstext[counter] =y.toFixed(0) + " m";  // added from kinematics  // > Event action for page Evol Page:30
         //alert(vy);  // > Event action for page Evol Page:31
         aShadows2[counter2]=ay2-k*vy2;  // > Event action for page Evol Page:32
         dyShadows2[counter2] = (yShadows2[counter2]-yShadows2[counter2-1]).toFixed(1);//show orange backwards, not predictive  // > Event action for page Evol Page:33
         yanddyShadows2[counter2]=yShadows2[counter2]-dyShadows2[counter2]/2;  // > Event action for page Evol Page:34
         // xMarkVert[counter] = x;  // > Event action for page Evol Page:35
         // yMarkVert[counter] = y - 0.15;  // > Event action for page Evol Page:36
         // xMarkHoriz[counter] = x - 0.15;  // > Event action for page Evol Page:37
        //  yMarkHoriz[counter] = y;  // > Event action for page Evol Page:38
            // > Event action for page Evol Page:39
         //prev = Math.ceil(t);  // > Event action for page Evol Page:40
          counter2++;  // > Event action for page Evol Page:41
          next2+=1.0;  // > Event action for page Evol Page:42
        return true;
      }

      return _eventSelf;
    }; // End of event

    _ODE_evolution1_Event3 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var y = _aState[__cOut++];
        var vy = _aState[__cOut++];
        var y2 = _aState[__cOut++];
        var vy2 = _aState[__cOut++];
        var t = _aState[__cOut++];
        return t -20.0;  // > Event zero-condition for page Evol Page:1
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        y = __state[__cOut++];
        vy = __state[__cOut++];
        y2 = __state[__cOut++];
        vy2 = __state[__cOut++];
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        __state[__cIn++] = y;
        __state[__cIn++] = vy;
        __state[__cIn++] = y2;
        __state[__cIn++] = vy2;
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        _pause();  // > Event action for page Evol Page:1
        return true;
      }

      return _eventSelf;
    }; // End of event

    __instantiateSolver();

    return __odeSelf;
  }

  function _historic_y(__time) {
    var __index = 0;
    return _ODEi_evolution1.getEventSolver().getStateHistory().interpolate(__time,__index);
  }

  function _historic_vy(__time) {
    var __index = 0 + 1;
    return _ODEi_evolution1.getEventSolver().getStateHistory().interpolate(__time,__index);
  }

  function _historic_y2(__time) {
    var __index = 0 + 1 + 1;
    return _ODEi_evolution1.getEventSolver().getStateHistory().interpolate(__time,__index);
  }

  function _historic_vy2(__time) {
    var __index = 0 + 1 + 1 + 1;
    return _ODEi_evolution1.getEventSolver().getStateHistory().interpolate(__time,__index);
  }

    _model._fontResized = function(iBase,iSize,iDelta) {
      _view._fontResized(iBase,iSize,iDelta);
  }; // end of _fontResized

  function _getViews() {
    var _viewsInfo = [];
    var _counter = 0;
    _viewsInfo[_counter++] = { name : "HtmlView Page", width : 800, height : 600 };
    return _viewsInfo;
  } // end of _getViews

  function _selectView(_viewNumber) {
    _view = null;
    _view = new kinematics2car_View(_topFrame,_viewNumber,_libraryPath,_codebasePath);
    var _view_super_reset = _view._reset;
    _view._reset = function() {
      _view_super_reset();
      switch(_viewNumber) {
        case -10 : break; // make Lint happy
        default :
        case 0:
          _view.fullscreen.linkProperty("Height",  function() { return Height; }, function(_v) { Height = _v; } ); // HtmlView Page linking property 'Height' for element 'fullscreen'
          _view.fullscreen.linkProperty("Width",  function() { return Width; }, function(_v) { Width = _v; } ); // HtmlView Page linking property 'Width' for element 'fullscreen'
          _view.comboBox.linkProperty("Width",  function() { return (_isMobile)?"50":""; } ); // HtmlView Page linking property 'Width' for element 'comboBox'
          _view.comboBox.linkProperty("Options",  function() { return ["at rest v=0","uniform motion v=2","uniform motion v=3","uniform motion v=-2","uniform motion v=-3","acceleration a=1","negative acceleration a=-1","user defined"]; } ); // HtmlView Page linking property 'Options' for element 'comboBox'
          _view.comboBox.setAction("OnChange", function(_data,_info) {
  //"prior knowledge","uniform motion v=2","uniform motion v=-2","simple acceleration a=1","simple acceleration a=-1","simple deceleration a=-9.81","","inquiry activities",
  //,"advance inquiry activities",
  var opts = _view.comboBox.getProperty("SelectedOptions");  // array of options
      var option = (opts.length > 0)? opts[0]:""; // selected option 
  //["free fall","uniform motion","simple acceleration","simple deceleration","toss up","toss up y=50,v=20","free fall","free fall 2 sec later","free fall and rebound","free fall with small air resistance","free fall with large air resistance","parachute jump","user defined"]
  storedata ();
  if ( option=="user defined"){
    
    }
    else if ( option=="prior knowledge"){
  var talk = "This list are some examples of motion from earlier kinematics of car"
     if(parent.cordova) { // check it is running in Android
  //var option1 = _view.comboBox.getProperty("SelectedOptions");
         parent.TTS.speak(talk, function () {
              // success
          }, function (reason) {
              // error
          });
      }
      else {
    var msg = new SpeechSynthesisUtterance(talk);
  window.speechSynthesis.speak(msg);
  }
  alert(talk);
  }
  //"inquiry activities"
    else if ( option=="inquiry activities"){
   var talk ="This list are some examples of motion related to kinematics of falling object";
     if(parent.cordova) { // check it is running in Android
  //var option1 = _view.comboBox.getProperty("SelectedOptions");
         parent.TTS.speak(talk, function () {
              // success
          }, function (reason) {
              // error
          });
      }
      else {
    var msg = new SpeechSynthesisUtterance(talk);
  window.speechSynthesis.speak(msg);
  }
  alert(talk);
  }
  //"advance inquiry activities"
   else if ( option=="advance inquiry activities"){
   var talk ="This list are some examples of motion that are more complicated";
     if(parent.cordova) { // check it is running in Android
  //var option1 = _view.comboBox.getProperty("SelectedOptions");
         parent.TTS.speak(talk, function () {
              // success
          }, function (reason) {
              // error
          });
      }
      else {
    var msg = new SpeechSynthesisUtterance(talk);
  window.speechSynthesis.speak(msg);
  }
  alert(talk);
  }
  //"at rest v=0","uniform motion v=2","uniform motion v=3","uniform motion v=-2","uniform motion v=-3","acceleration a=1","negative acceleration a=-1"
    else if ( option=="uniform motion v=2"){
    y=0;
    vy=2;
    ay=0;
    k=0;
    showball=true;
    helicoptershow=false;
    }
    else if ( option=="uniform motion v=-2"){
    y=0;
    vy=-2;
    ay=0;
    k=0;
    showball=true;
    helicoptershow=false;
    }
    else if ( option=="uniform motion v=3"){
    y=0;
    vy=3;
    ay=0;
    k=0;
    showball=true;
    helicoptershow=false;
    }
    else if ( option=="uniform motion v=-3"){
    y=0;
    vy=-3;
    ay=0;
    k=0;
    showball=true;
    helicoptershow=false;
    }
    else if ( option=="acceleration a=1"){
    y=0;
    vy=0;
    ay=+1;
    showball=true;
    helicoptershow=false;
    }
    else if ( option=="negative acceleration a=-1"){
    y=0;
    vy=0;
    ay=-1;
    showball=true;
    helicoptershow=false;
    }
    else if ( option=="simple deceleration a=-9.81"){
    y=0;
    vy=13;
    ay=-9.81;
    showball=true;
    helicoptershow=false;
    }
  else if ( option=="toss up"){
    y=0.0001;
    vy=20;
    ay=-9.81;
    ymin = -10;
   yground = ymin-0.5;
    ymax = 25;
    showball=true;
    helicoptershow=false;
     var talk;
    talk = "You are throwing a ball straight up in the air. At the highest point, the ball’s \nA. velocity and acceleration are zero. \nB. velocity is nonzero but its acceleration is zero. \nC. acceleration is nonzero, but its velocity is zero. \nD. velocity and acceleration are both nonzero.";
     if(parent.cordova) { // check it is running in Android
  //var option1 = _view.comboBox.getProperty("SelectedOptions");
         parent.TTS.speak(talk, function () {
              // success
          }, function (reason) {
              // error
          });
      }
      else {
    var msg = new SpeechSynthesisUtterance(talk);
  window.speechSynthesis.speak(msg);
  }
  // alert(talk);
    var favDrink =  prompt(talk);
  var text;
  //var favDrink = prompt("What's your favorite cocktail drink?");
  switch(favDrink) {
      case "a":
          text = "incorrect, the velocity is zero at the top, while acceleration is -9.81 m/s² all the time.";
          break;
      case "b":
          text = "incorrect,  the velocity is zero at the top but  acceleration is -9.81 m/s² all the time.";
          break;
          case "c":
         text = "Excellent choice!, observe that acceleration is -9.81 m/s² all the time, and the velocity is zero only at the top,";
         break;
      case "d":
     text = "incorrect, the velocity is zero at the top";
            break;
      case "A":
          text = "incorrect, the velocity is zero at the top, while acceleration is -9.81 m/s² all the time.";
          break;
      case "B":
          text = "incorrect,  the velocity is zero at the top but  acceleration is -9.81 m/s² all the time.";
          break;
          case "C":
         text = "Excellent choice!, observe that acceleration is -9.81 m/s² all the time, and the velocity is zero only at the top,";
         break;
      case "D":
     text = "incorrect, the velocity is zero at the top";
            break;
      default:
          text = "I have never heard of that one..";
          break;
  }
   if(parent.cordova) { // check it is running in Android
         parent.TTS.speak(text, function () {
              // success
          }, function (reason) {
              // error
          });
      }
      else {
    var msg = new SpeechSynthesisUtterance(text);
  window.speechSynthesis.speak(msg);
  }
  alert(text); 
      
      }
    else if ( option=="toss up y=50,v=20"){
    y=50;
    vy=20;
    ay=-9.81;
    ymin = 0;
    yground = ymin-sizey/2+0.01;
    ymax = 100;
    showball=true;
    helicoptershow=false;
    
    }
    
    else if ( option=="free fall"){
    y=0;
    vy=0;
    ay=-9.81;
    k=0;
    showball=true;
    helicoptershow=false;
    }
     else if ( option=="free fall 2 sec later"){
    y=0;
    vy=0;
    ay=0;
    k=0;
    showball=true;
    helicoptershow=false;
    }
    else if ( option=="fall with small air resistance"){
    y=0;
    vy=0;
    ay=-9.81;
    k=0.2;
    showball=true;
    helicoptershow=false;
      }
      else if ( option=="fall with large air resistance"){
    y=0;
    vy=0;
    ay=-9.81;
    k=2;
    showball=true;
    helicoptershow=false;
      }
      else if ( option=="parachute jump"){
    y=0;
    vy=0;
    ay=-9.81;
    k=0.1;
    ymin =-1000;
    yground = ymin-25;
    showparachutejump=true;
     showparachutejump2=false;
     showball=false;
      helicoptershow=false;
      }
     else if ( option=="free fall and rebound"){
  y=0;
    vy=0;
    ay=-9.81;
    yground = ymin-sizey/2+0.01;
    }
    //"Conceptest 3"
    else if ( option=="Conceptest 3"){
   y=0;
    vy=10;
    ay=-9.81;
    showball=true;  
  showball2=true;   
  y2=0;
    vy2=-10;
    ay2=-9.81;
     world=true;
  graph=true;
  xvst = false;
  vvst = true;
  avst = false;
  Width1 = "50%";
  Width2 = "0%";
  Widthv = "50%";
  Widtha = "0%";
  _view.worldgraph.setSelectedOptions(["world and velocity"]);
    var talk;
    talk = "A person standing at the edge of a cliff throws one ball straight up and another ball straight down at the same initial speed. ";
   
    if(parent.cordova) { // check it is running in Android
  //var option1 = _view.comboBox.getProperty("SelectedOptions");
         parent.TTS.speak(talk, function () {
              // success
          }, function (reason) {
              // error
          });
      }
      else {
    var msg = new SpeechSynthesisUtterance(talk);
  window.speechSynthesis.speak(msg);
  }
   alert(talk);
      }
    
    //"Conceptest 6 4"
    else if ( option=="Conceptest 6 4"){
  y=0;
    vy=0;
    ay=-9.81;
  showobject2=true;
  helicoptershow=true;
  showball=false;
  y2=0;
    vy2=0;
    ay2=0;
    ymin =-1000;
    yground = ymin-sizey/2+0.01;
     world=true;
  graph=true;
  xvst = false;
  vvst = true;
  avst = false;
  Width1 = "50%";
  Width2 = "0%";
  Widthv = "50%";
  Widtha = "0%";
  _view.worldgraph.setSelectedOptions(["world and velocity"]);
    var talk;
    talk = "A sky diver jumps out of a hovering helicopter, click play to continue.";
   
    if(parent.cordova) { // check it is running in Android
  //var option1 = _view.comboBox.getProperty("SelectedOptions");
         parent.TTS.speak(talk, function () {
              // success
          }, function (reason) {
              // error
          });
      }
      else {
    var msg = new SpeechSynthesisUtterance(talk);
  window.speechSynthesis.speak(msg);
  }
   alert(talk);
  }
    
    
    /*
    if(parent.cordova) { // check it is running in Android
  //var option1 = _view.comboBox.getProperty("SelectedOptions");
         parent.TTS.speak(option, function () {
              // success
          }, function (reason) {
              // error
          });
      }
      else {
    var msg = new SpeechSynthesisUtterance(option);
  window.speechSynthesis.speak(msg);
  }
  */
  shadowinit ();
  // move the shadows into the selected positions
  /*
  for (var counter=0; counter<numShadows  ; counter++) {
  yShadows[counter] = y;
  tShadows[counter]=t;
  vShadows[counter]=vy;
  vShadowsaverage[counter]=vy;
  aShadows[counter]=ay;
  }
  */;

}); // HtmlView Page setting action 'OnChange' for element 'comboBox'
          _view.comboBox.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'comboBox'
          _view.carLeft2.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'carLeft2'
          _view.label33.linkProperty("Background",  function() { return memorycolory; }, function(_v) { memorycolory = _v; } ); // HtmlView Page linking property 'Background' for element 'label33'
          _view.label33.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'label33'
          _view.field23.linkProperty("Value",  function() { return y; }, function(_v) { y = _v; } ); // HtmlView Page linking property 'Value' for element 'field23'
          _view.field23.setAction("OnChange", function(_data,_info) {
  _view.comboBox.setSelectedOptions(["user defined"]);
  shadowinit ();

}); // HtmlView Page setting action 'OnChange' for element 'field23'
          _view.label223.linkProperty("Background",  function() { return memorycolory; }, function(_v) { memorycolory = _v; } ); // HtmlView Page linking property 'Background' for element 'label223'
          _view.slider23.linkProperty("Value",  function() { return y; }, function(_v) { y = _v; } ); // HtmlView Page linking property 'Value' for element 'slider23'
          _view.slider23.setAction("OnChange", function(_data,_info) {
  ys0=y;
  _view.comboBox.setSelectedOptions(["user defined"]);
  shadowinit ();

}); // HtmlView Page setting action 'OnChange' for element 'slider23'
          _view.v1.linkProperty("Text",  function() { return " u= "+vy.toFixed(0)+" m s⁻¹"; } ); // HtmlView Page linking property 'Text' for element 'v1'
          _view.v1.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'v1'
          _view.field222.linkProperty("Value",  function() { return vyslider; }, function(_v) { vyslider = _v; } ); // HtmlView Page linking property 'Value' for element 'field222'
          _view.field222.setAction("OnChange", function(_data,_info) {
  _view.comboBox.setSelectedOptions(["user defined"]);
  vy =vyslider;
  //storedata();
  shadowinit ();
  //_play();

}); // HtmlView Page setting action 'OnChange' for element 'field222'
          _view.velocity2.setAction("OnRelease", function(_data,_info) {
  //storedata();
  //_play();

}); // HtmlView Page setting action 'OnRelease' for element 'velocity2'
          _view.velocity2.linkProperty("Value",  function() { return vyslider; }, function(_v) { vyslider = _v; } ); // HtmlView Page linking property 'Value' for element 'velocity2'
          _view.velocity2.setAction("OnChange", function(_data,_info) {
  _view.comboBox.setSelectedOptions(["user defined"]);
  vy =vyslider;
  shadowinit ();
  shadowinit2 ();

}); // HtmlView Page setting action 'OnChange' for element 'velocity2'
          _view.a1.linkProperty("Text",  function() { return " a = "+ay.toFixed(1)+" m s⁻² "; } ); // HtmlView Page linking property 'Text' for element 'a1'
          _view.a1.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'a1'
          _view.field22222.linkProperty("Value",  function() { return ay; }, function(_v) { ay = _v; } ); // HtmlView Page linking property 'Value' for element 'field22222'
          _view.field22222.setAction("OnChange", function(_data,_info) {
  _view.comboBox.setSelectedOptions(["user defined"]);
  storedata();
  shadowinit ();
  shadowinit2 ();
  _play();

}); // HtmlView Page setting action 'OnChange' for element 'field22222'
          _view.label222222.linkProperty("Background",  function() { return memorycolora; }, function(_v) { memorycolora = _v; } ); // HtmlView Page linking property 'Background' for element 'label222222'
          _view.acceleration2.setAction("OnRelease", function(_data,_info) {
  //storedata();
  //_play();

}); // HtmlView Page setting action 'OnRelease' for element 'acceleration2'
          _view.acceleration2.linkProperty("Value",  function() { return ay; }, function(_v) { ay = _v; } ); // HtmlView Page linking property 'Value' for element 'acceleration2'
          _view.acceleration2.setAction("OnChange", function(_data,_info) {
  _view.comboBox.setSelectedOptions(["user defined"]);
  shadowinit ();
  shadowinit2 ();

}); // HtmlView Page setting action 'OnChange' for element 'acceleration2'
          _view.worldgraph.linkProperty("Options",  function() { return ["","displacement-time graph","velocity-time graph","acceleration-time graph","Hide graph"]; } ); // HtmlView Page linking property 'Options' for element 'worldgraph'
          _view.worldgraph.setAction("OnChange", function(_data,_info) {
  //var option = _view.worldgraph.getProperty("SelectedOptions");
  //alert(option);
  var opts = _view.worldgraph.getProperty("SelectedOptions");  // array of options
      var option = (opts.length > 0)? opts[0]:""; // selected option 
  if ( option=="Hide graph"){
    world=true;
  Width1 = "100%";
  Width2 = "0%";
  Widthv = "0%";
  Widtha = "0%";
  //disabled=false;
    }
  else if ( option=="y vs t"){
  graph=true;
  xvst = true;
  vvst = false;
  avst = false;
  Width1 = "0%";
  Width2 = "100%";
  Widthv = "0%";
  Widtha = "0%";
  //disabledworld=false;
  }
  //["displacement-time graph","velocity-time graph","acceleration-time graph","Hide graph"]
  else if ( option=="displacement-time graph"){
  world=true;
  graph=true;
  xvst = true;
  vvst = false;
  avst = false;
  Width1 = "50%";
  Width2 = "50%";
  Widthv = "0%";
  Widtha = "0%";
  //disabledworld=false;
  }
  else if ( option=="vy vs t"){
  graph=true;
  xvst = false;
  vvst = true;
  avst = false;
  Width1 = "0%";
  Width2 = "0%";
  Widthv = "100%";
  Widtha = "0%";
  //disabledworld=false;
  }
  else if ( option=="velocity-time graph"){
  world=true;
  graph=true;
  xvst = false;
  vvst = true;
  avst = false;
  Width1 = "50%";
  Width2 = "0%";
  Widthv = "50%";
  Widtha = "0%";
  //disabledworld=false;
  }
  else if ( option=="ay vs t"){
  graph=true;
  xvst = false;
  vvst = false;
  avst = true;
  Width1 = "0%";
  Width2 = "0%";
  Widthv = "0%";
  Widtha = "100%";
  //disabledworld=false;
  }
  else if ( option=="acceleration-time graph"){
  world=true;
  graph=true;
  xvst = false;
  vvst = false;
  avst = true;
  Width1 = "50%";
  Width2 = "0%";
  Widthv = "0%";
  Widtha = "50%";
  //disabledworld=false;
  }
  //"velocity arrows show","velocity arrows hide"
  else if ( option=="velocity arrows show"){
  velocityarrowshow=true;
  }
  else if ( option=="velocity arrows hide"){
  velocityarrowshow=false;
  }
  /*
  if(parent.cordova) { // check it is running in Android
  //var option1 = _view.comboBox.getProperty("SelectedOptions");
         parent.TTS.speak(option, function () {
              // success
          }, function (reason) {
              // error
          });
      }
      else {
    var msg = new SpeechSynthesisUtterance(option);
  window.speechSynthesis.speak(msg);
  }
  */;

}); // HtmlView Page setting action 'OnChange' for element 'worldgraph'
          _view.worldgraph.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'worldgraph'
          _view.label332.linkProperty("Background",  function() { return memorycolory; }, function(_v) { memorycolory = _v; } ); // HtmlView Page linking property 'Background' for element 'label332'
          _view.field232.linkProperty("Value",  function() { return y; }, function(_v) { y = _v; } ); // HtmlView Page linking property 'Value' for element 'field232'
          _view.field232.setAction("OnChange", function(_data,_info) {
  _view.comboBox.setSelectedOptions(["user defined"]);
  shadowinit ();

}); // HtmlView Page setting action 'OnChange' for element 'field232'
          _view.label2232.linkProperty("Background",  function() { return memorycolory; }, function(_v) { memorycolory = _v; } ); // HtmlView Page linking property 'Background' for element 'label2232'
          _view.v12.linkProperty("Text",  function() { return " u₂= "+vyslider2.toFixed(0)+" m s⁻¹"; } ); // HtmlView Page linking property 'Text' for element 'v12'
          _view.slider232.linkProperty("Background",  function() { return memorycolory; }, function(_v) { memorycolory = _v; } ); // HtmlView Page linking property 'Background' for element 'slider232'
          _view.slider232.linkProperty("Value",  function() { return y2; }, function(_v) { y2 = _v; } ); // HtmlView Page linking property 'Value' for element 'slider232'
          _view.slider232.setAction("OnChange", function(_data,_info) {
  ys0=y;
  _view.comboBox.setSelectedOptions(["user defined"]);
  shadowinit ();

}); // HtmlView Page setting action 'OnChange' for element 'slider232'
          _view.slider232.linkProperty("Disabled",  function() { return _isPlaying; } ); // HtmlView Page linking property 'Disabled' for element 'slider232'
          _view.field2222.linkProperty("Value",  function() { return vyslider2; }, function(_v) { vyslider2 = _v; } ); // HtmlView Page linking property 'Value' for element 'field2222'
          _view.field2222.setAction("OnChange", function(_data,_info) {
  _view.comboBox.setSelectedOptions(["user defined"]);
  vy2 =vyslider2;
  //storedata();
  shadowinit ();
  //_play();

}); // HtmlView Page setting action 'OnChange' for element 'field2222'
          _view.velocity22.setAction("OnRelease", function(_data,_info) {
  //storedata();
  //_play();

}); // HtmlView Page setting action 'OnRelease' for element 'velocity22'
          _view.velocity22.linkProperty("Value",  function() { return vyslider2; }, function(_v) { vyslider2 = _v; } ); // HtmlView Page linking property 'Value' for element 'velocity22'
          _view.velocity22.setAction("OnChange", function(_data,_info) {
  _view.comboBox.setSelectedOptions(["user defined"]);
  vy2 =vyslider2;
  shadowinit ();
  shadowinit2 ();

}); // HtmlView Page setting action 'OnChange' for element 'velocity22'
          _view.field222222.linkProperty("Value",  function() { return ay2; }, function(_v) { ay2 = _v; } ); // HtmlView Page linking property 'Value' for element 'field222222'
          _view.field222222.setAction("OnChange", function(_data,_info) {
  _view.comboBox.setSelectedOptions(["user defined"]);
  storedata();
  shadowinit ();
  shadowinit2 ();
  _play();

}); // HtmlView Page setting action 'OnChange' for element 'field222222'
          _view.a12.linkProperty("Text",  function() { return " a₂ = "+ay2.toFixed(1)+" m s⁻² "; } ); // HtmlView Page linking property 'Text' for element 'a12'
          _view.acceleration22.setAction("OnRelease", function(_data,_info) {
  //storedata();
  //_play();

}); // HtmlView Page setting action 'OnRelease' for element 'acceleration22'
          _view.acceleration22.linkProperty("Value",  function() { return ay2; }, function(_v) { ay2 = _v; } ); // HtmlView Page linking property 'Value' for element 'acceleration22'
          _view.acceleration22.setAction("OnChange", function(_data,_info) {
  _view.comboBox.setSelectedOptions(["user defined"]);
  shadowinit ();
  shadowinit2 ();

}); // HtmlView Page setting action 'OnChange' for element 'acceleration22'
          _view.runPauseButton.setAction("OffClick", function(_data,_info) {
  textt="paused";
  _pause();

}); // HtmlView Page setting action 'OffClick' for element 'runPauseButton'
          _view.runPauseButton.linkProperty("State",  function() { return _isPaused; } ); // HtmlView Page linking property 'State' for element 'runPauseButton'
          _view.runPauseButton.setAction("OnClick", function(_data,_info) {
  _play();
  textt="playing";

}); // HtmlView Page setting action 'OnClick' for element 'runPauseButton'
          _view.stepButton.setAction("OnClick", function(_data,_info) {
  _step();
  if (t>=20){
      _pause();
      }

}); // HtmlView Page setting action 'OnClick' for element 'stepButton'
          _view.initialize.setAction("OnClick", function(_data,_info) {
  _view.yTrail.newSegment();
  _view.vTrail.newSegment();
  _view.aTrail.newSegment();
  memorycolory=memorycolory+1;
  memorycolorv=memorycolorv+1;
  memorycolora=memorycolora+1;
  //_view.shadows.newShapeSet();
  t=0;
  y=ys0;
  vy=vys0;
   counter=0;
   next=1; // need for marker to draw again
  _initialize();
  next =1;
  for (var counter=0; counter<numShadows /* Iterations */ ; counter++) {
  yShadows[counter] = y;
  tShadows[counter]=t;
  vShadows[counter]=vy;
  aShadows[counter]=ay;
  }

}); // HtmlView Page setting action 'OnClick' for element 'initialize'
          _view.resetButton.setAction("OnClick", function(_data,_info) {
  _reset();

}); // HtmlView Page setting action 'OnClick' for element 'resetButton'
          _view.mrocket.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'mrocket'
          _view.model42.linkProperty("Visibility",  function() { return xvst; }, function(_v) { xvst = _v; } ); // HtmlView Page linking property 'Visibility' for element 'model42'
          _view.model42.linkProperty("Display",  function() { return showmodel?"inline-block":"none"; } ); // HtmlView Page linking property 'Display' for element 'model42'
          _view.model3.setAction("OnCheckOff", function(_data,_info) {
  showmodel=false;

}); // HtmlView Page setting action 'OnCheckOff' for element 'model3'
          _view.model3.linkProperty("Checked",  function() { return showmodel; }, function(_v) { showmodel = _v; } ); // HtmlView Page linking property 'Checked' for element 'model3'
          _view.model3.linkProperty("Visibility",  function() { return xvst; }, function(_v) { xvst = _v; } ); // HtmlView Page linking property 'Visibility' for element 'model3'
          _view.model3.setAction("OnCheckOn", function(_data,_info) {
  showmodel=true;

}); // HtmlView Page setting action 'OnCheckOn' for element 'model3'
          _view.model3.linkProperty("Display",  function() { return showmodel?"inline-block":"none"; } ); // HtmlView Page linking property 'Display' for element 'model3'
          _view.models2.linkProperty("Options",  function() { return ["0","t","2*t","-t","-2*t","0.5*1*t^2","5*t + 0.5*-t^2","0.5*-t^2","-4*t + 0.5*t^2","show me"]; } ); // HtmlView Page linking property 'Options' for element 'models2'
          _view.models2.setAction("OnChange", function(_data,_info) {
  xvst=true;
  vvst=false;
  avst=false;
  disabledworld=false;
   Width1="50%";
   Width2="50%";
   Widthv="0%";
   Widtha="0%";
  showmodel=true;
  functionY2=selectedmodely+"";
  ymodel=_view.fField2.evaluate({ t : t, y : ymodel });
  //vymodel=_view.fField2.evaluate({ t : t, vy : vymodel });
  if (selectedmodely[0]==="show me"){
  functionY2= _view._format(ys0,"0.00")+"+"+_view._format(vys0,"0.00")+"*t + 0.5*" +_view._format(ay,"0.00")+"*t^2";  
  functionYfirstderivative= _view._format(vys0,"0.00")+"+2*0.5*" +_view._format(ay,"0.00")+"*t";  
  functionYsecondderivative= _view._format(ay,"0.00");  
  }

}); // HtmlView Page setting action 'OnChange' for element 'models2'
          _view.models2.linkProperty("Visibility",  function() { return xvst; }, function(_v) { xvst = _v; } ); // HtmlView Page linking property 'Visibility' for element 'models2'
          _view.models2.linkProperty("Disabled",  function() { return t>0; } ); // HtmlView Page linking property 'Disabled' for element 'models2'
          _view.models2.linkProperty("SelectedOptions",  function() { return selectedmodely; }, function(_v) { selectedmodely = _v; } ); // HtmlView Page linking property 'SelectedOptions' for element 'models2'
          _view.models2.linkProperty("Display",  function() { return showmodel?"inline-block":"none"; } ); // HtmlView Page linking property 'Display' for element 'models2'
          _view.fField2.linkProperty("Value",  function() { return functionY2; }, function(_v) { functionY2 = _v; } ); // HtmlView Page linking property 'Value' for element 'fField2'
          _view.fField2.setAction("OnChange", function(_data,_info) {
  xvst=true;
  vvst=false;
  avst=false;
  disabledworld=false;
   Width1="50%";
   Width2="50%";
   Widthv="0%";
   Widtha="0%";
  showmodel=true;

}); // HtmlView Page setting action 'OnChange' for element 'fField2'
          _view.fField2.linkProperty("Visibility",  function() { return xvst; }, function(_v) { xvst = _v; } ); // HtmlView Page linking property 'Visibility' for element 'fField2'
          _view.fField2.linkProperty("Display",  function() { return showmodel?"inline-block":"none"; } ); // HtmlView Page linking property 'Display' for element 'fField2'
          _view.model422.linkProperty("Visibility",  function() { return vvst; }, function(_v) { vvst = _v; } ); // HtmlView Page linking property 'Visibility' for element 'model422'
          _view.model422.linkProperty("Display",  function() { return showmodel?"inline-block":"none"; } ); // HtmlView Page linking property 'Display' for element 'model422'
          _view.models22.linkProperty("Options",  function() { return ["0","t","2*t","-t","-2*t","0.5*1*t^2","5*t + 0.5*-t^2","0.5*-t^2","-4*t + 0.5*t^2","show me"]; } ); // HtmlView Page linking property 'Options' for element 'models22'
          _view.models22.setAction("OnChange", function(_data,_info) {
  xvst=false;
  vvst=true;
  avst=false;
  disabledworld=false;
   Width1="50%";
   Width2="0%";
   Widthv="50%";
   Widtha="0%";
   showmodel=false;
   ymodelvyshow=true; //show vy position
  functionY2v=selectedmodelyv+"";
  vymodel=_view.fField2v.evaluate({ t : t, y : vymodel });
  //vymodel=_view.fField2.evaluate({ t : t, vy : vymodel });
  if (selectedmodelyv[0]==="show me"){
  functionY2v=  _view._format(vys0,"0.00")+"+2*0.5*" +_view._format(ay,"0.00")+"*t";  
  functionYsecondderivative= _view._format(ay,"0.00");   
  //functionYfirstderivative= _view._format(vys0,"0.00")+"+2*0.5*" +_view._format(ay,"0.00")+"*t";  
  //functionYsecondderivative= _view._format(ay,"0.00");  
  }

}); // HtmlView Page setting action 'OnChange' for element 'models22'
          _view.models22.linkProperty("Visibility",  function() { return vvst; }, function(_v) { vvst = _v; } ); // HtmlView Page linking property 'Visibility' for element 'models22'
          _view.models22.linkProperty("Disabled",  function() { return t>0; } ); // HtmlView Page linking property 'Disabled' for element 'models22'
          _view.models22.linkProperty("SelectedOptions",  function() { return selectedmodelyv; }, function(_v) { selectedmodelyv = _v; } ); // HtmlView Page linking property 'SelectedOptions' for element 'models22'
          _view.models22.linkProperty("Display",  function() { return showmodel?"inline-block":"none"; } ); // HtmlView Page linking property 'Display' for element 'models22'
          _view.fField2v.linkProperty("Value",  function() { return functionY2v; }, function(_v) { functionY2v = _v; } ); // HtmlView Page linking property 'Value' for element 'fField2v'
          _view.fField2v.setAction("OnChange", function(_data,_info) {
  xvst=false;
  vvst=true;
  avst=false;
  disabledworld=false;
   Width1="50%";
   Width2="0%";
   Widthv="50%";
   Widtha="0%";
   showmodel=false;
   ymodelvyshow=true;

}); // HtmlView Page setting action 'OnChange' for element 'fField2v'
          _view.fField2v.linkProperty("Visibility",  function() { return vvst; }, function(_v) { vvst = _v; } ); // HtmlView Page linking property 'Visibility' for element 'fField2v'
          _view.fField2v.linkProperty("Display",  function() { return showmodel?"inline-block":"none"; } ); // HtmlView Page linking property 'Display' for element 'fField2v'
          _view.model4222.linkProperty("Visibility",  function() { return avst&&showmodel; } ); // HtmlView Page linking property 'Visibility' for element 'model4222'
          _view.model4222.linkProperty("Display",  function() { return showmodel?"inline-block":"none"; } ); // HtmlView Page linking property 'Display' for element 'model4222'
          _view.models222.linkProperty("Options",  function() { return ["0","t","2*t","-t","-2*t","0.5*1*t^2","5*t + 0.5*-t^2","0.5*-t^2","-4*t + 0.5*t^2","show me"]; } ); // HtmlView Page linking property 'Options' for element 'models222'
          _view.models222.setAction("OnChange", function(_data,_info) {
  xvst=false;
  vvst=false;
  avst=true;
  disabledworld=false;
   Width1="50%";
   Width2="0%";
   Widthv="0%";
   Widtha="50%";
   showmodel=false;
   ymodelayshow=true; //show ay position
  functionY2a=selectedmodelya+"";
  //vymodel=_view.fField2.evaluate({ t : t, vy : vymodel });
  if (selectedmodelya[0]==="show me"){
  functionY2a=  _view._format(ay,"0.00");  
  functionYsecondderivative= _view._format(ay,"0.00");    
  //functionYfirstderivative= _view._format(vys0,"0.00")+"+2*0.5*" +_view._format(ay,"0.00")+"*t";  
  //functionYsecondderivative= _view._format(ay,"0.00");  
  }
  aymodel=_view.fField2a.evaluate({ t : t, y : ay });

}); // HtmlView Page setting action 'OnChange' for element 'models222'
          _view.models222.linkProperty("Visibility",  function() { return avst&&showmodel; } ); // HtmlView Page linking property 'Visibility' for element 'models222'
          _view.models222.linkProperty("Disabled",  function() { return t>0; } ); // HtmlView Page linking property 'Disabled' for element 'models222'
          _view.models222.linkProperty("SelectedOptions",  function() { return selectedmodelya; }, function(_v) { selectedmodelya = _v; } ); // HtmlView Page linking property 'SelectedOptions' for element 'models222'
          _view.models222.linkProperty("Display",  function() { return showmodel?"inline-block":"none"; } ); // HtmlView Page linking property 'Display' for element 'models222'
          _view.fField2a.linkProperty("Value",  function() { return functionY2a; }, function(_v) { functionY2a = _v; } ); // HtmlView Page linking property 'Value' for element 'fField2a'
          _view.fField2a.setAction("OnChange", function(_data,_info) {
  xvst=false;
  vvst=false;
  avst=true;
  disabledworld=false;
   Width1="50%";
   Width2="0%";
   Widthv="0%";
   Widtha="50%";
   showmodel=false;
   ymodelayshow=true;

}); // HtmlView Page setting action 'OnChange' for element 'fField2a'
          _view.fField2a.linkProperty("Visibility",  function() { return avst&&showmodel; } ); // HtmlView Page linking property 'Visibility' for element 'fField2a'
          _view.fField2a.linkProperty("Display",  function() { return showmodel?"inline-block":"none"; } ); // HtmlView Page linking property 'Display' for element 'fField2a'
          _view.plottingPanel.linkProperty("Width",  function() { return Width1; }, function(_v) { Width1 = _v; } ); // HtmlView Page linking property 'Width' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("AxisYFont",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'AxisYFont' for element 'plottingPanel'
          _view.plottingPanel.setAction("OnDoubleClick", function(_data,_info) {
  _pause();
  toggleFullScreen();

}); // HtmlView Page setting action 'OnDoubleClick' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("YTickStep",  function() { return ymin>-110?Math.round(Math.max(-ymin,ymax)/10):Math.round(Math.max(-ymin,ymax)/10); } ); // HtmlView Page linking property 'YTickStep' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("TLMessage",  function() { return "t = "+_view._format(t,"0.0")+ " s "; } ); // HtmlView Page linking property 'TLMessage' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("AxisXFont",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'AxisXFont' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("BLMessage",  function() { return " y = "+_view._format(y,"0.0")+ " m " +" \nv = "+_view._format(vy,"0.0")+ " m s⁻¹ " + " \na = "+_view._format(ay-k*vy,"0.0")+ " m s⁻² "; } ); // HtmlView Page linking property 'BLMessage' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("BRMessage",  function() { return " y₂ = "+_view._format(y2,"0.0")+ " m " +" \nv₂ = "+_view._format(vy2,"0.0")+ " m s⁻¹ " + " \na₂ = "+_view._format(ay2-k*vy2,"0.0")+ " m s⁻² "; } ); // HtmlView Page linking property 'BRMessage' for element 'plottingPanel'
          _view.carLeft.linkProperty("X",  function() { return x; }, function(_v) { x = _v; } ); // HtmlView Page linking property 'X' for element 'carLeft'
          _view.carLeft.linkProperty("Y",  function() { return y; }, function(_v) { y = _v; } ); // HtmlView Page linking property 'Y' for element 'carLeft'
          _view.carLeft.linkProperty("Visibility",  function() { return showball; }, function(_v) { showball = _v; } ); // HtmlView Page linking property 'Visibility' for element 'carLeft'
          _view.carLeft.setAction("OnDrag", function(_data,_info) {
  _view.comboBox.setSelectedOptions(["user defined"]);
  y = Math.round(y);
  if (y <=ymin) y = ymin;
  if (y >ymax) y = ymax;
  for (var counter=0; counter<numShadows /* Iterations */ ; counter++) {
  yShadows[counter] = y;
  tShadows[counter]=t;
  vShadows[counter]=vy;
  aShadows[counter]=ay;
  }
  shadowinit ();

}); // HtmlView Page setting action 'OnDrag' for element 'carLeft'
          _view.carRight.linkProperty("X",  function() { return x2; }, function(_v) { x2 = _v; } ); // HtmlView Page linking property 'X' for element 'carRight'
          _view.carRight.linkProperty("Y",  function() { return y2; }, function(_v) { y2 = _v; } ); // HtmlView Page linking property 'Y' for element 'carRight'
          _view.carRight.linkProperty("Visibility",  function() { return showball2; }, function(_v) { showball2 = _v; } ); // HtmlView Page linking property 'Visibility' for element 'carRight'
          _view.carRight.setAction("OnDrag", function(_data,_info) {
  _view.comboBox.setSelectedOptions(["user defined"]);
  y2 = Math.round(y2);
  if (y2 <=ymin) y2 = ymin;
  if (y2 >ymax) y2 = ymax;

}); // HtmlView Page setting action 'OnDrag' for element 'carRight'
          _view.vset.linkProperty("NumberOfElements",  function() { return numShadows; }, function(_v) { numShadows = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'vset'
          _view.vset.linkProperty("X",  function() { return xShadows; }, function(_v) { xShadows = _v; } ); // HtmlView Page linking property 'X' for element 'vset'
          _view.vset.linkProperty("LineColor",  function() { return colorv; }, function(_v) { colorv = _v; } ); // HtmlView Page linking property 'LineColor' for element 'vset'
          _view.vset.linkProperty("Y",  function() { return yShadows; }, function(_v) { yShadows = _v; } ); // HtmlView Page linking property 'Y' for element 'vset'
          _view.vset.linkProperty("Visibility",  function() { return velocityarrowshow; }, function(_v) { velocityarrowshow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'vset'
          _view.vset.linkProperty("SizeY",  function() { return vShadowsaverage; }, function(_v) { vShadowsaverage = _v; } ); // HtmlView Page linking property 'SizeY' for element 'vset'
          _view.shadows.linkProperty("NumberOfElements",  function() { return numShadows; }, function(_v) { numShadows = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'shadows'
          _view.shadows.linkProperty("FillColor",  function() { return colorv; }, function(_v) { colorv = _v; } ); // HtmlView Page linking property 'FillColor' for element 'shadows'
          _view.shadows.linkProperty("LineColor",  function() { return colorv; }, function(_v) { colorv = _v; } ); // HtmlView Page linking property 'LineColor' for element 'shadows'
          _view.shadows.linkProperty("X",  function() { return xShadows; }, function(_v) { xShadows = _v; } ); // HtmlView Page linking property 'X' for element 'shadows'
          _view.shadows.linkProperty("Y",  function() { return yShadows; }, function(_v) { yShadows = _v; } ); // HtmlView Page linking property 'Y' for element 'shadows'
          _view.shadows.linkProperty("Visibility",  function() { return t>0; } ); // HtmlView Page linking property 'Visibility' for element 'shadows'
          _view.vxShadowsvalues2.linkProperty("NumberOfElements",  function() { return numShadows; }, function(_v) { numShadows = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'vxShadowsvalues2'
          _view.vxShadowsvalues2.linkProperty("RelativePosition",  function() { return relativeposition; }, function(_v) { relativeposition = _v; } ); // HtmlView Page linking property 'RelativePosition' for element 'vxShadowsvalues2'
          _view.vxShadowsvalues2.linkProperty("X",  function() { return xShadowstext; }, function(_v) { xShadowstext = _v; } ); // HtmlView Page linking property 'X' for element 'vxShadowsvalues2'
          _view.vxShadowsvalues2.linkProperty("Y",  function() { return yanddyShadows; }, function(_v) { yanddyShadows = _v; } ); // HtmlView Page linking property 'Y' for element 'vxShadowsvalues2'
          _view.vxShadowsvalues2.linkProperty("Text",  function() { return vShadowstext; }, function(_v) { vShadowstext = _v; } ); // HtmlView Page linking property 'Text' for element 'vxShadowsvalues2'
          _view.vxShadowsvalues2.linkProperty("Visibility",  function() { return velocityarrowshow; }, function(_v) { velocityarrowshow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'vxShadowsvalues2'
          _view.vxShadowsvalues2.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'vxShadowsvalues2'
          _view.vset3.linkProperty("NumberOfElements",  function() { return numShadows; }, function(_v) { numShadows = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'vset3'
          _view.vset3.linkProperty("X",  function() { return xShadows2; }, function(_v) { xShadows2 = _v; } ); // HtmlView Page linking property 'X' for element 'vset3'
          _view.vset3.linkProperty("LineColor",  function() { return colorv; }, function(_v) { colorv = _v; } ); // HtmlView Page linking property 'LineColor' for element 'vset3'
          _view.vset3.linkProperty("Y",  function() { return yShadows2; }, function(_v) { yShadows2 = _v; } ); // HtmlView Page linking property 'Y' for element 'vset3'
          _view.vset3.linkProperty("Visibility",  function() { return velocityarrowshow; }, function(_v) { velocityarrowshow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'vset3'
          _view.vset3.linkProperty("SizeY",  function() { return vShadowsaverage2; }, function(_v) { vShadowsaverage2 = _v; } ); // HtmlView Page linking property 'SizeY' for element 'vset3'
          _view.shadows3.linkProperty("NumberOfElements",  function() { return numShadows; }, function(_v) { numShadows = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'shadows3'
          _view.shadows3.linkProperty("FillColor",  function() { return colorv; }, function(_v) { colorv = _v; } ); // HtmlView Page linking property 'FillColor' for element 'shadows3'
          _view.shadows3.linkProperty("LineColor",  function() { return colorv; }, function(_v) { colorv = _v; } ); // HtmlView Page linking property 'LineColor' for element 'shadows3'
          _view.shadows3.linkProperty("X",  function() { return xShadows2; }, function(_v) { xShadows2 = _v; } ); // HtmlView Page linking property 'X' for element 'shadows3'
          _view.shadows3.linkProperty("Y",  function() { return yShadows2; }, function(_v) { yShadows2 = _v; } ); // HtmlView Page linking property 'Y' for element 'shadows3'
          _view.shadows3.linkProperty("Visibility",  function() { return t>0; } ); // HtmlView Page linking property 'Visibility' for element 'shadows3'
          _view.vxShadowsvalues22.linkProperty("NumberOfElements",  function() { return numShadows; }, function(_v) { numShadows = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'vxShadowsvalues22'
          _view.vxShadowsvalues22.linkProperty("RelativePosition",  function() { return relativeposition2; }, function(_v) { relativeposition2 = _v; } ); // HtmlView Page linking property 'RelativePosition' for element 'vxShadowsvalues22'
          _view.vxShadowsvalues22.linkProperty("X",  function() { return xShadowstext2; }, function(_v) { xShadowstext2 = _v; } ); // HtmlView Page linking property 'X' for element 'vxShadowsvalues22'
          _view.vxShadowsvalues22.linkProperty("Y",  function() { return yanddyShadows2; }, function(_v) { yanddyShadows2 = _v; } ); // HtmlView Page linking property 'Y' for element 'vxShadowsvalues22'
          _view.vxShadowsvalues22.linkProperty("Text",  function() { return vShadowstext2; }, function(_v) { vShadowstext2 = _v; } ); // HtmlView Page linking property 'Text' for element 'vxShadowsvalues22'
          _view.vxShadowsvalues22.linkProperty("Visibility",  function() { return velocityarrowshow; }, function(_v) { velocityarrowshow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'vxShadowsvalues22'
          _view.vxShadowsvalues22.linkProperty("Font",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'Font' for element 'vxShadowsvalues22'
          _view.position.linkProperty("Y",  function() { return y; }, function(_v) { y = _v; } ); // HtmlView Page linking property 'Y' for element 'position'
          _view.velocity.linkProperty("SizeY",  function() { return vy; }, function(_v) { vy = _v; } ); // HtmlView Page linking property 'SizeY' for element 'velocity'
          _view.group2.linkProperty("Y",  function() { return vy; }, function(_v) { vy = _v; } ); // HtmlView Page linking property 'Y' for element 'group2'
          _view.v2.linkProperty("Text",  function() { return "v ="+vy.toFixed(2) + " m/s"; } ); // HtmlView Page linking property 'Text' for element 'v2'
          _view.velocitydrag22.setAction("OnRelease", function(_data,_info) {
  //vdrag = false;

}); // HtmlView Page setting action 'OnRelease' for element 'velocitydrag22'
          _view.velocitydrag22.linkProperty("Y",  function() { return vy; }, function(_v) { vy = _v; } ); // HtmlView Page linking property 'Y' for element 'velocitydrag22'
          _view.velocitydrag22.setAction("OnDrag", function(_data,_info) {
  vy = Math.round(vy);
  vdrag = true;
  for (var counter=0; counter<numShadows /* Iterations */ ; counter++) {
   //xShadows[counter] = x;
  //yShadows[counter] = y;
  tShadows[counter]=t;
  vShadows[counter]=vy;
  //aShadows[counter]=a;
  }
  _view.comboBox.setSelectedOptions(["user defined"]);
  shadowinit ();

}); // HtmlView Page setting action 'OnDrag' for element 'velocitydrag22'
          _view.acceleration.linkProperty("SizeY",  function() { return ay; }, function(_v) { ay = _v; } ); // HtmlView Page linking property 'SizeY' for element 'acceleration'
          _view.group22.linkProperty("Y",  function() { return ay; }, function(_v) { ay = _v; } ); // HtmlView Page linking property 'Y' for element 'group22'
          _view.v22.linkProperty("Text",  function() { return "ay ="+(ay-k*vy).toFixed(1) + " m/s²"; } ); // HtmlView Page linking property 'Text' for element 'v22'
          _view.adrag.linkProperty("Y",  function() { return ay; }, function(_v) { ay = _v; } ); // HtmlView Page linking property 'Y' for element 'adrag'
          _view.adrag.linkProperty("Visibility",  function() { return t==0; } ); // HtmlView Page linking property 'Visibility' for element 'adrag'
          _view.adrag.setAction("OnDrag", function(_data,_info) {
  ay = Math.round(ay);
  _view.comboBox.setSelectedOptions(["user defined"]);
  for (var counter=0; counter<numShadows /* Iterations */ ; counter++) {
  // xShadows[counter] = x;
  //yShadows[counter] = y;
  tShadows[counter]=t;
  //vShadows[counter]=v;
  aShadows[counter]=ay;
  }
  shadowinit ();

}); // HtmlView Page setting action 'OnDrag' for element 'adrag'
          _view.model23.linkProperty("X",  function() { return xmodel; }, function(_v) { xmodel = _v; } ); // HtmlView Page linking property 'X' for element 'model23'
          _view.model23.linkProperty("Y",  function() { return ymodel; }, function(_v) { ymodel = _v; } ); // HtmlView Page linking property 'Y' for element 'model23'
          _view.model23.linkProperty("Visibility",  function() { return showmodel; }, function(_v) { showmodel = _v; } ); // HtmlView Page linking property 'Visibility' for element 'model23'
          _view.model23.setAction("OnDrag", _initialize); // HtmlView Page setting action 'OnDrag' for element 'model23'
          _view.modelvy.linkProperty("X",  function() { return xmodel; }, function(_v) { xmodel = _v; } ); // HtmlView Page linking property 'X' for element 'modelvy'
          _view.modelvy.linkProperty("Y",  function() { return ymodelvy; }, function(_v) { ymodelvy = _v; } ); // HtmlView Page linking property 'Y' for element 'modelvy'
          _view.modelvy.linkProperty("Visibility",  function() { return ymodelvyshow; }, function(_v) { ymodelvyshow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'modelvy'
          _view.modelvy.setAction("OnDrag", _initialize); // HtmlView Page setting action 'OnDrag' for element 'modelvy'
          _view.modeay.linkProperty("X",  function() { return xmodel; }, function(_v) { xmodel = _v; } ); // HtmlView Page linking property 'X' for element 'modeay'
          _view.modeay.linkProperty("Y",  function() { return ymodelay; }, function(_v) { ymodelay = _v; } ); // HtmlView Page linking property 'Y' for element 'modeay'
          _view.modeay.linkProperty("Visibility",  function() { return ymodelayshow; }, function(_v) { ymodelayshow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'modeay'
          _view.modeay.setAction("OnDrag", _initialize); // HtmlView Page setting action 'OnDrag' for element 'modeay'
          _view.plottingPanelxvst.linkProperty("Width",  function() { return Width2; }, function(_v) { Width2 = _v; } ); // HtmlView Page linking property 'Width' for element 'plottingPanelxvst'
          _view.plottingPanelxvst.linkProperty("AxisYFont",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'AxisYFont' for element 'plottingPanelxvst'
          _view.plottingPanelxvst.setAction("OnRelease", function(_data,_info) {
  _view.plottingPanelxvst.getAxisX().setAbsoluteY(_view.plottingPanelxvst.getGrid().getFixedTickY());
  _view.plottingPanelxvst.getAxisY().setAbsoluteX(_view.plottingPanelxvst.getGrid().getFixedTickX());

}); // HtmlView Page setting action 'OnRelease' for element 'plottingPanelxvst'
          _view.plottingPanelxvst.linkProperty("TLMessage",  function() { return TLMessage; }, function(_v) { TLMessage = _v; } ); // HtmlView Page linking property 'TLMessage' for element 'plottingPanelxvst'
          _view.plottingPanelxvst.linkProperty("TitleYFont",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'TitleYFont' for element 'plottingPanelxvst'
          _view.plottingPanelxvst.linkProperty("TitleXFont",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'TitleXFont' for element 'plottingPanelxvst'
          _view.plottingPanelxvst.setAction("OnDrag", function(_data,_info) {
  _view.plottingPanelxvst.getAxisX().setAbsoluteY(_view.plottingPanelxvst.getGrid().getFixedTickY());
  _view.plottingPanelxvst.getAxisY().setAbsoluteX(_view.plottingPanelxvst.getGrid().getFixedTickX());

}); // HtmlView Page setting action 'OnDrag' for element 'plottingPanelxvst'
          _view.plottingPanelxvst.linkProperty("AxisXFont",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'AxisXFont' for element 'plottingPanelxvst'
          _view.plottingPanelxvst.setAction("OnZoom", function(_data,_info) {
  _view.plottingPanelxvst.getAxisX().setAbsoluteY(_view.plottingPanelxvst.getGrid().getFixedTickY());
  _view.plottingPanelxvst.getAxisY().setAbsoluteX(_view.plottingPanelxvst.getGrid().getFixedTickX());

}); // HtmlView Page setting action 'OnZoom' for element 'plottingPanelxvst'
          _view.plottingPanelxvst.linkProperty("Visibility",  function() { return xvst; }, function(_v) { xvst = _v; } ); // HtmlView Page linking property 'Visibility' for element 'plottingPanelxvst'
          _view.model22.linkProperty("X",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'X' for element 'model22'
          _view.model22.linkProperty("Y",  function() { return ymodel; }, function(_v) { ymodel = _v; } ); // HtmlView Page linking property 'Y' for element 'model22'
          _view.model22.linkProperty("Visibility",  function() { return showmodel; }, function(_v) { showmodel = _v; } ); // HtmlView Page linking property 'Visibility' for element 'model22'
          _view.analyticCurve.linkProperty("FunctionY",  function() { return functionY2; }, function(_v) { functionY2 = _v; } ); // HtmlView Page linking property 'FunctionY' for element 'analyticCurve'
          _view.analyticCurve.linkProperty("Maximum",  function() { return Math.max(t,4.52); } ); // HtmlView Page linking property 'Maximum' for element 'analyticCurve'
          _view.analyticCurve.linkProperty("Visibility",  function() { return showmodel; }, function(_v) { showmodel = _v; } ); // HtmlView Page linking property 'Visibility' for element 'analyticCurve'
          _view.yDot.linkProperty("X",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'X' for element 'yDot'
          _view.yDot.linkProperty("Y",  function() { return y; }, function(_v) { y = _v; } ); // HtmlView Page linking property 'Y' for element 'yDot'
          _view.yDot.setAction("OnDrag", function(_data,_info) {
  _view.comboBox.setSelectedOptions(["user defined"]);
  y = Math.round(y);
  if (y <=ymin) y = ymin;
  if (y >ymax) y = ymax;
  for (var counter=0; counter<numShadows /* Iterations */ ; counter++) {
  yShadows[counter] = y;
  tShadows[counter]=t;
  vShadows[counter]=vy;
  aShadows[counter]=ay;
  }

}); // HtmlView Page setting action 'OnDrag' for element 'yDot'
          _view.carLeft3.linkProperty("X",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'X' for element 'carLeft3'
          _view.carLeft3.linkProperty("Y",  function() { return y; }, function(_v) { y = _v; } ); // HtmlView Page linking property 'Y' for element 'carLeft3'
          _view.carLeft3.linkProperty("Visibility",  function() { return showball; }, function(_v) { showball = _v; } ); // HtmlView Page linking property 'Visibility' for element 'carLeft3'
          _view.yTrail.linkProperty("Connected",  function() { return t>0; } ); // HtmlView Page linking property 'Connected' for element 'yTrail'
          _view.yTrail.linkProperty("InputX",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'InputX' for element 'yTrail'
          _view.yTrail.linkProperty("Visibility",  function() { return xvst; }, function(_v) { xvst = _v; } ); // HtmlView Page linking property 'Visibility' for element 'yTrail'
          _view.yTrail.linkProperty("InputY",  function() { return y; }, function(_v) { y = _v; } ); // HtmlView Page linking property 'InputY' for element 'yTrail'
          _view.shadows2.linkProperty("NumberOfElements",  function() { return numShadows; }, function(_v) { numShadows = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'shadows2'
          _view.shadows2.linkProperty("FillColor",  function() { return colorv; }, function(_v) { colorv = _v; } ); // HtmlView Page linking property 'FillColor' for element 'shadows2'
          _view.shadows2.linkProperty("LineColor",  function() { return colorv; }, function(_v) { colorv = _v; } ); // HtmlView Page linking property 'LineColor' for element 'shadows2'
          _view.shadows2.linkProperty("X",  function() { return tShadows; }, function(_v) { tShadows = _v; } ); // HtmlView Page linking property 'X' for element 'shadows2'
          _view.shadows2.linkProperty("Y",  function() { return yShadows; }, function(_v) { yShadows = _v; } ); // HtmlView Page linking property 'Y' for element 'shadows2'
          _view.secondball.linkProperty("Visibility",  function() { return showball2; }, function(_v) { showball2 = _v; } ); // HtmlView Page linking property 'Visibility' for element 'secondball'
          _view.yTrail2.linkProperty("Connected",  function() { return t>0; } ); // HtmlView Page linking property 'Connected' for element 'yTrail2'
          _view.yTrail2.linkProperty("InputX",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'InputX' for element 'yTrail2'
          _view.yTrail2.linkProperty("Visibility",  function() { return xvst; }, function(_v) { xvst = _v; } ); // HtmlView Page linking property 'Visibility' for element 'yTrail2'
          _view.yTrail2.linkProperty("InputY",  function() { return y2; }, function(_v) { y2 = _v; } ); // HtmlView Page linking property 'InputY' for element 'yTrail2'
          _view.yDot22.linkProperty("X",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'X' for element 'yDot22'
          _view.yDot22.linkProperty("Y",  function() { return y2; }, function(_v) { y2 = _v; } ); // HtmlView Page linking property 'Y' for element 'yDot22'
          _view.yDot22.setAction("OnDrag", function(_data,_info) {
  _view.comboBox.setSelectedOptions(["user defined"]);
  y2 = Math.round(y2);
  if (y2 <=ymin) y2 = ymin;
  if (y2 >ymax) y2 = ymax;

}); // HtmlView Page setting action 'OnDrag' for element 'yDot22'
          _view.carRight3.linkProperty("X",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'X' for element 'carRight3'
          _view.carRight3.linkProperty("Y",  function() { return y2; }, function(_v) { y2 = _v; } ); // HtmlView Page linking property 'Y' for element 'carRight3'
          _view.carRight3.linkProperty("Visibility",  function() { return showball2; }, function(_v) { showball2 = _v; } ); // HtmlView Page linking property 'Visibility' for element 'carRight3'
          _view.shadows22.linkProperty("NumberOfElements",  function() { return numShadows; }, function(_v) { numShadows = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'shadows22'
          _view.shadows22.linkProperty("FillColor",  function() { return colorv; }, function(_v) { colorv = _v; } ); // HtmlView Page linking property 'FillColor' for element 'shadows22'
          _view.shadows22.linkProperty("LineColor",  function() { return colorv; }, function(_v) { colorv = _v; } ); // HtmlView Page linking property 'LineColor' for element 'shadows22'
          _view.shadows22.linkProperty("X",  function() { return tShadows2; }, function(_v) { tShadows2 = _v; } ); // HtmlView Page linking property 'X' for element 'shadows22'
          _view.shadows22.linkProperty("Y",  function() { return yShadows2; }, function(_v) { yShadows2 = _v; } ); // HtmlView Page linking property 'Y' for element 'shadows22'
          _view.xset22.linkProperty("NumberOfElements",  function() { return numShadows; }, function(_v) { numShadows = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'xset22'
          _view.xset22.linkProperty("X",  function() { return tShadows; }, function(_v) { tShadows = _v; } ); // HtmlView Page linking property 'X' for element 'xset22'
          _view.xset22.linkProperty("LineColor",  function() { return colorv; }, function(_v) { colorv = _v; } ); // HtmlView Page linking property 'LineColor' for element 'xset22'
          _view.xset22.linkProperty("SizeY",  function() { return yShadows; }, function(_v) { yShadows = _v; } ); // HtmlView Page linking property 'SizeY' for element 'xset22'
          _view.plottingPanelxvst2.linkProperty("Width",  function() { return Widthv; }, function(_v) { Widthv = _v; } ); // HtmlView Page linking property 'Width' for element 'plottingPanelxvst2'
          _view.plottingPanelxvst2.linkProperty("AxisYFont",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'AxisYFont' for element 'plottingPanelxvst2'
          _view.plottingPanelxvst2.setAction("OnRelease", function(_data,_info) {
  _view.plottingPanelxvst2.getAxisX().setAbsoluteY(_view.plottingPanelxvst2.getGrid().getFixedTickY());
  _view.plottingPanelxvst2.getAxisY().setAbsoluteX(_view.plottingPanelxvst2.getGrid().getFixedTickX());

}); // HtmlView Page setting action 'OnRelease' for element 'plottingPanelxvst2'
          _view.plottingPanelxvst2.linkProperty("TLMessage",  function() { return TLMessage; }, function(_v) { TLMessage = _v; } ); // HtmlView Page linking property 'TLMessage' for element 'plottingPanelxvst2'
          _view.plottingPanelxvst2.linkProperty("TitleYFont",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'TitleYFont' for element 'plottingPanelxvst2'
          _view.plottingPanelxvst2.linkProperty("TitleXFont",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'TitleXFont' for element 'plottingPanelxvst2'
          _view.plottingPanelxvst2.linkProperty("MaximumY",  function() { return Math.max(10,Math.abs(vy)); } ); // HtmlView Page linking property 'MaximumY' for element 'plottingPanelxvst2'
          _view.plottingPanelxvst2.setAction("OnDrag", function(_data,_info) {
  _view.plottingPanelxvst2.getAxisX().setAbsoluteY(_view.plottingPanelxvst2.getGrid().getFixedTickY());
  _view.plottingPanelxvst2.getAxisY().setAbsoluteX(_view.plottingPanelxvst2.getGrid().getFixedTickX());

}); // HtmlView Page setting action 'OnDrag' for element 'plottingPanelxvst2'
          _view.plottingPanelxvst2.linkProperty("MinimumY",  function() { return -Math.max(10,Math.abs(vy)); } ); // HtmlView Page linking property 'MinimumY' for element 'plottingPanelxvst2'
          _view.plottingPanelxvst2.linkProperty("AxisXFont",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'AxisXFont' for element 'plottingPanelxvst2'
          _view.plottingPanelxvst2.setAction("OnZoom", function(_data,_info) {
  _view.plottingPanelxvst2.getAxisX().setAbsoluteY(_view.plottingPanelxvst2.getGrid().getFixedTickY());
  _view.plottingPanelxvst2.getAxisY().setAbsoluteX(_view.plottingPanelxvst2.getGrid().getFixedTickX());

}); // HtmlView Page setting action 'OnZoom' for element 'plottingPanelxvst2'
          _view.plottingPanelxvst2.linkProperty("Visibility",  function() { return vvst; }, function(_v) { vvst = _v; } ); // HtmlView Page linking property 'Visibility' for element 'plottingPanelxvst2'
          _view.analyticCurve2.linkProperty("FunctionY",  function() { return functionY2v; }, function(_v) { functionY2v = _v; } ); // HtmlView Page linking property 'FunctionY' for element 'analyticCurve2'
          _view.analyticCurve2.linkProperty("Maximum",  function() { return Math.max(t,4.52); } ); // HtmlView Page linking property 'Maximum' for element 'analyticCurve2'
          _view.analyticCurve2.linkProperty("Visibility",  function() { return ymodelvyshow; }, function(_v) { ymodelvyshow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'analyticCurve2'
          _view.trail.linkProperty("Connected",  function() { return t>0; } ); // HtmlView Page linking property 'Connected' for element 'trail'
          _view.trail.linkProperty("InputX",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'InputX' for element 'trail'
          _view.trail.linkProperty("InputY",  function() { return vymodel; }, function(_v) { vymodel = _v; } ); // HtmlView Page linking property 'InputY' for element 'trail'
          _view.shadows222.linkProperty("NumberOfElements",  function() { return numShadows; }, function(_v) { numShadows = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'shadows222'
          _view.shadows222.linkProperty("FillColor",  function() { return colorv; }, function(_v) { colorv = _v; } ); // HtmlView Page linking property 'FillColor' for element 'shadows222'
          _view.shadows222.linkProperty("LineColor",  function() { return colorv; }, function(_v) { colorv = _v; } ); // HtmlView Page linking property 'LineColor' for element 'shadows222'
          _view.shadows222.linkProperty("X",  function() { return tShadows; }, function(_v) { tShadows = _v; } ); // HtmlView Page linking property 'X' for element 'shadows222'
          _view.shadows222.linkProperty("Y",  function() { return vShadows; }, function(_v) { vShadows = _v; } ); // HtmlView Page linking property 'Y' for element 'shadows222'
          _view.vDot2.linkProperty("X",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'X' for element 'vDot2'
          _view.vDot2.linkProperty("Y",  function() { return vy; }, function(_v) { vy = _v; } ); // HtmlView Page linking property 'Y' for element 'vDot2'
          _view.vDot2.setAction("OnDrag", function(_data,_info) {
  vy = Math.round(vy);
  vdrag = true;
  for (var counter=0; counter<numShadows /* Iterations */ ; counter++) {
   //xShadows[counter] = x;
  //yShadows[counter] = y;
  tShadows[counter]=t;
  vShadows[counter]=vy;
  //aShadows[counter]=a;
  }
  _view.comboBox.setSelectedOptions(["user defined"]);

}); // HtmlView Page setting action 'OnDrag' for element 'vDot2'
          _view.carLeft32.linkProperty("X",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'X' for element 'carLeft32'
          _view.carLeft32.linkProperty("Y",  function() { return vy; }, function(_v) { vy = _v; } ); // HtmlView Page linking property 'Y' for element 'carLeft32'
          _view.carLeft32.linkProperty("Visibility",  function() { return showball; }, function(_v) { showball = _v; } ); // HtmlView Page linking property 'Visibility' for element 'carLeft32'
          _view.vset2.linkProperty("NumberOfElements",  function() { return numShadows; }, function(_v) { numShadows = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'vset2'
          _view.vset2.linkProperty("X",  function() { return tShadows; }, function(_v) { tShadows = _v; } ); // HtmlView Page linking property 'X' for element 'vset2'
          _view.vset2.linkProperty("LineColor",  function() { return colorv; }, function(_v) { colorv = _v; } ); // HtmlView Page linking property 'LineColor' for element 'vset2'
          _view.vset2.linkProperty("Visibility",  function() { return velocityarrowshow; }, function(_v) { velocityarrowshow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'vset2'
          _view.vset2.linkProperty("SizeY",  function() { return vShadows; }, function(_v) { vShadows = _v; } ); // HtmlView Page linking property 'SizeY' for element 'vset2'
          _view.vyTrail.linkProperty("Connected",  function() { return t>0; } ); // HtmlView Page linking property 'Connected' for element 'vyTrail'
          _view.vyTrail.linkProperty("InputX",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'InputX' for element 'vyTrail'
          _view.vyTrail.linkProperty("Visibility",  function() { return vvst; }, function(_v) { vvst = _v; } ); // HtmlView Page linking property 'Visibility' for element 'vyTrail'
          _view.vyTrail.linkProperty("InputY",  function() { return vy; }, function(_v) { vy = _v; } ); // HtmlView Page linking property 'InputY' for element 'vyTrail'
          _view.vyTrail2.linkProperty("Connected",  function() { return t>0; } ); // HtmlView Page linking property 'Connected' for element 'vyTrail2'
          _view.vyTrail2.linkProperty("InputX",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'InputX' for element 'vyTrail2'
          _view.vyTrail2.linkProperty("Visibility",  function() { return vvst; }, function(_v) { vvst = _v; } ); // HtmlView Page linking property 'Visibility' for element 'vyTrail2'
          _view.vyTrail2.linkProperty("InputY",  function() { return vy2; }, function(_v) { vy2 = _v; } ); // HtmlView Page linking property 'InputY' for element 'vyTrail2'
          _view.shadows2222.linkProperty("NumberOfElements",  function() { return numShadows; }, function(_v) { numShadows = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'shadows2222'
          _view.shadows2222.linkProperty("FillColor",  function() { return colorv; }, function(_v) { colorv = _v; } ); // HtmlView Page linking property 'FillColor' for element 'shadows2222'
          _view.shadows2222.linkProperty("LineColor",  function() { return colorv; }, function(_v) { colorv = _v; } ); // HtmlView Page linking property 'LineColor' for element 'shadows2222'
          _view.shadows2222.linkProperty("X",  function() { return tShadows; }, function(_v) { tShadows = _v; } ); // HtmlView Page linking property 'X' for element 'shadows2222'
          _view.shadows2222.linkProperty("Y",  function() { return vShadows2; }, function(_v) { vShadows2 = _v; } ); // HtmlView Page linking property 'Y' for element 'shadows2222'
          _view.vDot22.linkProperty("X",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'X' for element 'vDot22'
          _view.vDot22.linkProperty("Y",  function() { return vy2; }, function(_v) { vy2 = _v; } ); // HtmlView Page linking property 'Y' for element 'vDot22'
          _view.vDot22.setAction("OnDrag", function(_data,_info) {
  vy2 = Math.round(vy2);
  vdrag = true;
  for (var counter=0; counter<numShadows /* Iterations */ ; counter++) {
   //xShadows[counter] = x;
  //yShadows[counter] = y;
  tShadows2[counter]=t;
  vShadows2[counter]=vy2;
  //aShadows[counter]=a;
  }
  _view.comboBox.setSelectedOptions(["user defined"]);

}); // HtmlView Page setting action 'OnDrag' for element 'vDot22'
          _view.carRight32.linkProperty("X",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'X' for element 'carRight32'
          _view.carRight32.linkProperty("Y",  function() { return vy2; }, function(_v) { vy2 = _v; } ); // HtmlView Page linking property 'Y' for element 'carRight32'
          _view.carRight32.linkProperty("Visibility",  function() { return showball2; }, function(_v) { showball2 = _v; } ); // HtmlView Page linking property 'Visibility' for element 'carRight32'
          _view.vset22.linkProperty("NumberOfElements",  function() { return numShadows; }, function(_v) { numShadows = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'vset22'
          _view.vset22.linkProperty("X",  function() { return tShadows2; }, function(_v) { tShadows2 = _v; } ); // HtmlView Page linking property 'X' for element 'vset22'
          _view.vset22.linkProperty("LineColor",  function() { return colorv; }, function(_v) { colorv = _v; } ); // HtmlView Page linking property 'LineColor' for element 'vset22'
          _view.vset22.linkProperty("Visibility",  function() { return velocityarrowshow; }, function(_v) { velocityarrowshow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'vset22'
          _view.vset22.linkProperty("SizeY",  function() { return vShadows2; }, function(_v) { vShadows2 = _v; } ); // HtmlView Page linking property 'SizeY' for element 'vset22'
          _view.plottingPanelxvst3.linkProperty("Width",  function() { return Widtha; }, function(_v) { Widtha = _v; } ); // HtmlView Page linking property 'Width' for element 'plottingPanelxvst3'
          _view.plottingPanelxvst3.linkProperty("AxisYFont",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'AxisYFont' for element 'plottingPanelxvst3'
          _view.plottingPanelxvst3.setAction("OnRelease", function(_data,_info) {
  _view.plottingPanelxvst3.getAxisX().setAbsoluteY(_view.plottingPanelxvst3.getGrid().getFixedTickY());
  _view.plottingPanelxvst3.getAxisY().setAbsoluteX(_view.plottingPanelxvst3.getGrid().getFixedTickX());

}); // HtmlView Page setting action 'OnRelease' for element 'plottingPanelxvst3'
          _view.plottingPanelxvst3.linkProperty("TLMessage",  function() { return TLMessage; }, function(_v) { TLMessage = _v; } ); // HtmlView Page linking property 'TLMessage' for element 'plottingPanelxvst3'
          _view.plottingPanelxvst3.linkProperty("TitleYFont",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'TitleYFont' for element 'plottingPanelxvst3'
          _view.plottingPanelxvst3.linkProperty("TitleXFont",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'TitleXFont' for element 'plottingPanelxvst3'
          _view.plottingPanelxvst3.setAction("OnDrag", function(_data,_info) {
  _view.plottingPanelxvst3.getAxisX().setAbsoluteY(_view.plottingPanelxvst3.getGrid().getFixedTickY());
  _view.plottingPanelxvst3.getAxisY().setAbsoluteX(_view.plottingPanelxvst3.getGrid().getFixedTickX());
  _view.plottingPanelxvst3.setProperty("MinimumY",-11);
  _view.plottingPanelxvst3.setProperty("MaximumY",11);

}); // HtmlView Page setting action 'OnDrag' for element 'plottingPanelxvst3'
          _view.plottingPanelxvst3.linkProperty("AxisXFont",  function() { return font; }, function(_v) { font = _v; } ); // HtmlView Page linking property 'AxisXFont' for element 'plottingPanelxvst3'
          _view.plottingPanelxvst3.setAction("OnZoom", function(_data,_info) {
  _view.plottingPanelxvst3.getAxisX().setAbsoluteY(_view.plottingPanelxvst3.getGrid().getFixedTickY());
  _view.plottingPanelxvst3.getAxisY().setAbsoluteX(_view.plottingPanelxvst3.getGrid().getFixedTickX());

}); // HtmlView Page setting action 'OnZoom' for element 'plottingPanelxvst3'
          _view.plottingPanelxvst3.linkProperty("Visibility",  function() { return avst; }, function(_v) { avst = _v; } ); // HtmlView Page linking property 'Visibility' for element 'plottingPanelxvst3'
          _view.model4.linkProperty("X",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'X' for element 'model4'
          _view.model4.linkProperty("Y",  function() { return aymodel; }, function(_v) { aymodel = _v; } ); // HtmlView Page linking property 'Y' for element 'model4'
          _view.model4.linkProperty("Visibility",  function() { return ymodelayshow; }, function(_v) { ymodelayshow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'model4'
          _view.analyticCurve22.linkProperty("FunctionY",  function() { return functionY2a; }, function(_v) { functionY2a = _v; } ); // HtmlView Page linking property 'FunctionY' for element 'analyticCurve22'
          _view.analyticCurve22.linkProperty("Maximum",  function() { return Math.max(t,4.52); } ); // HtmlView Page linking property 'Maximum' for element 'analyticCurve22'
          _view.analyticCurve22.linkProperty("Visibility",  function() { return ymodelayshow; }, function(_v) { ymodelayshow = _v; } ); // HtmlView Page linking property 'Visibility' for element 'analyticCurve22'
          _view.trail2.linkProperty("Connected",  function() { return t>2*dt; } ); // HtmlView Page linking property 'Connected' for element 'trail2'
          _view.trail2.linkProperty("InputX",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'InputX' for element 'trail2'
          _view.trail2.linkProperty("InputY",  function() { return aymodel; }, function(_v) { aymodel = _v; } ); // HtmlView Page linking property 'InputY' for element 'trail2'
          _view.secondDerivativeTrail23.linkProperty("FunctionY",  function() { return functionYsecondderivative; }, function(_v) { functionYsecondderivative = _v; } ); // HtmlView Page linking property 'FunctionY' for element 'secondDerivativeTrail23'
          _view.secondDerivativeTrail23.linkProperty("Maximum",  function() { return Math.max(t,4.52); } ); // HtmlView Page linking property 'Maximum' for element 'secondDerivativeTrail23'
          _view.secondbll.linkProperty("Visibility",  function() { return showball2; }, function(_v) { showball2 = _v; } ); // HtmlView Page linking property 'Visibility' for element 'secondbll'
          _view.aDot24dragay22.linkProperty("X",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'X' for element 'aDot24dragay22'
          _view.aDot24dragay22.linkProperty("Y",  function() { return ay2; }, function(_v) { ay2 = _v; } ); // HtmlView Page linking property 'Y' for element 'aDot24dragay22'
          _view.aDot24dragay22.setAction("OnDrag", function(_data,_info) {
  ay2 = Math.round(ay2);
  _view.comboBox.setSelectedOptions(["user defined"]);

}); // HtmlView Page setting action 'OnDrag' for element 'aDot24dragay22'
          _view.carRight33.linkProperty("X",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'X' for element 'carRight33'
          _view.carRight33.linkProperty("Y",  function() { return ay2; }, function(_v) { ay2 = _v; } ); // HtmlView Page linking property 'Y' for element 'carRight33'
          _view.carRight33.linkProperty("Visibility",  function() { return showball2; }, function(_v) { showball2 = _v; } ); // HtmlView Page linking property 'Visibility' for element 'carRight33'
          _view.ayTrail2.linkProperty("Active",  function() { return t>0; } ); // HtmlView Page linking property 'Active' for element 'ayTrail2'
          _view.ayTrail2.linkProperty("Connected",  function() { return t>0; } ); // HtmlView Page linking property 'Connected' for element 'ayTrail2'
          _view.ayTrail2.linkProperty("InputX",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'InputX' for element 'ayTrail2'
          _view.ayTrail2.linkProperty("Visibility",  function() { return avst&&(_view.comboBox.getProperty("SelectedOptions")!="free fall and rebound"); } ); // HtmlView Page linking property 'Visibility' for element 'ayTrail2'
          _view.ayTrail2.linkProperty("InputY",  function() { return ay2; }, function(_v) { ay2 = _v; } ); // HtmlView Page linking property 'InputY' for element 'ayTrail2'
          _view.ashadows22232.linkProperty("NumberOfElements",  function() { return numShadows; }, function(_v) { numShadows = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'ashadows22232'
          _view.ashadows22232.linkProperty("FillColor",  function() { return colorv; }, function(_v) { colorv = _v; } ); // HtmlView Page linking property 'FillColor' for element 'ashadows22232'
          _view.ashadows22232.linkProperty("LineColor",  function() { return colorv; }, function(_v) { colorv = _v; } ); // HtmlView Page linking property 'LineColor' for element 'ashadows22232'
          _view.ashadows22232.linkProperty("X",  function() { return tShadows; }, function(_v) { tShadows = _v; } ); // HtmlView Page linking property 'X' for element 'ashadows22232'
          _view.ashadows22232.linkProperty("Y",  function() { return aShadows2; }, function(_v) { aShadows2 = _v; } ); // HtmlView Page linking property 'Y' for element 'ashadows22232'
          _view.ayTrail.linkProperty("Active",  function() { return t>0; } ); // HtmlView Page linking property 'Active' for element 'ayTrail'
          _view.ayTrail.linkProperty("Connected",  function() { return t>0; } ); // HtmlView Page linking property 'Connected' for element 'ayTrail'
          _view.ayTrail.linkProperty("InputX",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'InputX' for element 'ayTrail'
          _view.ayTrail.linkProperty("Visibility",  function() { return avst&&(_view.comboBox.getProperty("SelectedOptions")!="free fall and rebound"); } ); // HtmlView Page linking property 'Visibility' for element 'ayTrail'
          _view.ayTrail.linkProperty("InputY",  function() { return ay-k*vy; } ); // HtmlView Page linking property 'InputY' for element 'ayTrail'
          _view.ashadows2223.linkProperty("NumberOfElements",  function() { return numShadows; }, function(_v) { numShadows = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'ashadows2223'
          _view.ashadows2223.linkProperty("FillColor",  function() { return colorv; }, function(_v) { colorv = _v; } ); // HtmlView Page linking property 'FillColor' for element 'ashadows2223'
          _view.ashadows2223.linkProperty("LineColor",  function() { return colorv; }, function(_v) { colorv = _v; } ); // HtmlView Page linking property 'LineColor' for element 'ashadows2223'
          _view.ashadows2223.linkProperty("X",  function() { return tShadows; }, function(_v) { tShadows = _v; } ); // HtmlView Page linking property 'X' for element 'ashadows2223'
          _view.ashadows2223.linkProperty("Y",  function() { return aShadows; }, function(_v) { aShadows = _v; } ); // HtmlView Page linking property 'Y' for element 'ashadows2223'
          _view.aDot242showay_kvy.linkProperty("FillColor",  function() { return memorycolora; }, function(_v) { memorycolora = _v; } ); // HtmlView Page linking property 'FillColor' for element 'aDot242showay_kvy'
          _view.aDot242showay_kvy.linkProperty("X",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'X' for element 'aDot242showay_kvy'
          _view.aDot242showay_kvy.linkProperty("Y",  function() { return ay-k*vy; } ); // HtmlView Page linking property 'Y' for element 'aDot242showay_kvy'
          _view.carLeft33.linkProperty("X",  function() { return t; }, function(_v) { t = _v; } ); // HtmlView Page linking property 'X' for element 'carLeft33'
          _view.carLeft33.linkProperty("Y",  function() { return ay; }, function(_v) { ay = _v; } ); // HtmlView Page linking property 'Y' for element 'carLeft33'
          _view.carLeft33.linkProperty("Visibility",  function() { return showball; }, function(_v) { showball = _v; } ); // HtmlView Page linking property 'Visibility' for element 'carLeft33'
          break;
      } // end of switch
    }; // end of new reset

    _model.setView(_view);
    _model.reset();
    _view._enableEPub();
  } // end of _selectView

  _model.setAutoplay(false);
  _model.setFPS(20);
  _model.setStepsPerDisplay(5);
  _selectView(-1); // this includes _model.reset()
  return _model;
}

function kinematics2car_View (_topFrame,_viewNumber,_libraryPath,_codebasePath) {
  var _view;
  switch(_viewNumber) {
    case -10 : break; // make Lint happy
    default :
    case 0: _view = kinematics2car_View_0 (_topFrame); break;
  } // end of switch

  if (_codebasePath) _view._setResourcePath(_codebasePath);

  if (_libraryPath) _view._setLibraryPath(_libraryPath);

  _view._addDescriptionPage('About','./kinematics2car_Intro_1.html');

  return _view;
} // end of main function

function kinematics2car_View_0 (_topFrame) {
  var _view = EJSS_CORE.createView(_topFrame);

  _view._reset = function() {
    _view._clearAll();
    _view._addElement(EJSS_INTERFACE.panel,"fullscreen", _view._topFrame) // EJsS HtmlView.HtmlView Page: declaration of element 'fullscreen'
      .setProperty("Display","inline-block") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'fullscreen'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"Notis_Moblise", _view.fullscreen) // EJsS HtmlView.HtmlView Page: declaration of element 'Notis_Moblise'
      .setProperty("Width","100%") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'Notis_Moblise'
      .setProperty("Display","inline-block") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'Notis_Moblise'
      ;

    _view._addElement(EJSS_INTERFACE.comboBox,"comboBox", _view.Notis_Moblise) // EJsS HtmlView.HtmlView Page: declaration of element 'comboBox'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'comboBox'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"carLeft2", _view.Notis_Moblise) // EJsS HtmlView.HtmlView Page: declaration of element 'carLeft2'
      .setProperty("Display","inline-block") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'carLeft2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"label33", _view.carLeft2) // EJsS HtmlView.HtmlView Page: declaration of element 'label33'
      .setProperty("Tooltip","displacement ") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'label33'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'label33'
      .setProperty("Text"," y = ") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'label33'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'label33'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"field23", _view.carLeft2) // EJsS HtmlView.HtmlView Page: declaration of element 'field23'
      .setProperty("Width",30) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'field23'
      .setProperty("Format","00.0") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'field23'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'field23'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"label223", _view.carLeft2) // EJsS HtmlView.HtmlView Page: declaration of element 'label223'
      .setProperty("Tooltip","metre") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'label223'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'label223'
      .setProperty("Text"," m ") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'label223'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'label223'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"slider23", _view.carLeft2) // EJsS HtmlView.HtmlView Page: declaration of element 'slider23'
      .setProperty("Width","15vw") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'slider23'
      .setProperty("Maximum",10) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'slider23'
      .setProperty("Minimum",-10) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'slider23'
      .setProperty("Tooltip","displacement") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'slider23'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'slider23'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"v1", _view.carLeft2) // EJsS HtmlView.HtmlView Page: declaration of element 'v1'
      .setProperty("Background","rgba(255,0,255,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'v1'
      .setProperty("Tooltip","velocity in y direction") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'v1'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"field222", _view.carLeft2) // EJsS HtmlView.HtmlView Page: declaration of element 'field222'
      .setProperty("Width",30) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'field222'
      .setProperty("Format","00.0") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'field222'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'field222'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'field222'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"label2222", _view.carLeft2) // EJsS HtmlView.HtmlView Page: declaration of element 'label2222'
      .setProperty("Background","rgba(153,0,153,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'label2222'
      .setProperty("Tooltip","metre per second") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'label2222'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'label2222'
      .setProperty("Text","m s⁻¹") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'label2222'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'label2222'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"velocity2", _view.carLeft2) // EJsS HtmlView.HtmlView Page: declaration of element 'velocity2'
      .setProperty("Width","12vw") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'velocity2'
      .setProperty("Maximum",3) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'velocity2'
      .setProperty("Minimum",-3) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'velocity2'
      .setProperty("Background","rgba(255,0,255,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'velocity2'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'velocity2'
      .setProperty("Step",1) // EJsS HtmlView.HtmlView Page: setting property 'Step' for element 'velocity2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"a1", _view.carLeft2) // EJsS HtmlView.HtmlView Page: declaration of element 'a1'
      .setProperty("Background","rgba(0,255,0,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'a1'
      .setProperty("Tooltip","acceleration") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'a1'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"field22222", _view.carLeft2) // EJsS HtmlView.HtmlView Page: declaration of element 'field22222'
      .setProperty("Width",30) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'field22222'
      .setProperty("Format","00.0") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'field22222'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'field22222'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"label222222", _view.carLeft2) // EJsS HtmlView.HtmlView Page: declaration of element 'label222222'
      .setProperty("Tooltip","metre per second per second") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'label222222'
      .setProperty("Text"," m/s² ") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'label222222'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'label222222'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"acceleration2", _view.carLeft2) // EJsS HtmlView.HtmlView Page: declaration of element 'acceleration2'
      .setProperty("Width","12vw") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'acceleration2'
      .setProperty("Maximum",0.5) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'acceleration2'
      .setProperty("Minimum",-0.5) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'acceleration2'
      .setProperty("Background","rgba(0,255,0,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'acceleration2'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'acceleration2'
      .setProperty("Step",0.1) // EJsS HtmlView.HtmlView Page: setting property 'Step' for element 'acceleration2'
      ;

    _view._addElement(EJSS_INTERFACE.comboBox,"worldgraph", _view.Notis_Moblise) // EJsS HtmlView.HtmlView Page: declaration of element 'worldgraph'
      .setProperty("Tooltip","select user_defined and drag the mass") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'worldgraph'
      .setProperty("Display","inline-block") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'worldgraph'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"carRight2", _view.Notis_Moblise) // EJsS HtmlView.HtmlView Page: declaration of element 'carRight2'
      .setProperty("Display","inline-block") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'carRight2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"label332", _view.carRight2) // EJsS HtmlView.HtmlView Page: declaration of element 'label332'
      .setProperty("Tooltip","displacement ") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'label332'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'label332'
      .setProperty("Text"," y = ") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'label332'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'label332'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"field232", _view.carRight2) // EJsS HtmlView.HtmlView Page: declaration of element 'field232'
      .setProperty("Width",30) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'field232'
      .setProperty("Format","00.0") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'field232'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'field232'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"label2232", _view.carRight2) // EJsS HtmlView.HtmlView Page: declaration of element 'label2232'
      .setProperty("Tooltip","metre") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'label2232'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'label2232'
      .setProperty("Text"," m ") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'label2232'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'label2232'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"v12", _view.carRight2) // EJsS HtmlView.HtmlView Page: declaration of element 'v12'
      .setProperty("Background","rgba(100,0,100,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'v12'
      .setProperty("Tooltip","velocity in y direction") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'v12'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'v12'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"slider232", _view.carRight2) // EJsS HtmlView.HtmlView Page: declaration of element 'slider232'
      .setProperty("Width","12vw") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'slider232'
      .setProperty("Maximum",10) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'slider232'
      .setProperty("Minimum",-10) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'slider232'
      .setProperty("Tooltip","displacement") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'slider232'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'slider232'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"field2222", _view.carRight2) // EJsS HtmlView.HtmlView Page: declaration of element 'field2222'
      .setProperty("Width",30) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'field2222'
      .setProperty("Format","00.0") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'field2222'
      .setProperty("Editable",false) // EJsS HtmlView.HtmlView Page: setting property 'Editable' for element 'field2222'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'field2222'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"label22222", _view.carRight2) // EJsS HtmlView.HtmlView Page: declaration of element 'label22222'
      .setProperty("Background","rgba(153,0,153,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'label22222'
      .setProperty("Tooltip","metre per second") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'label22222'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'label22222'
      .setProperty("Text"," m/s ") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'label22222'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'label22222'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"velocity22", _view.carRight2) // EJsS HtmlView.HtmlView Page: declaration of element 'velocity22'
      .setProperty("Width","12vw") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'velocity22'
      .setProperty("Maximum",3) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'velocity22'
      .setProperty("Minimum",-3) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'velocity22'
      .setProperty("Background","rgba(100,0,100,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'velocity22'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'velocity22'
      .setProperty("Step",1) // EJsS HtmlView.HtmlView Page: setting property 'Step' for element 'velocity22'
      ;

    _view._addElement(EJSS_INTERFACE.numberField,"field222222", _view.carRight2) // EJsS HtmlView.HtmlView Page: declaration of element 'field222222'
      .setProperty("Width",30) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'field222222'
      .setProperty("Format","00.0") // EJsS HtmlView.HtmlView Page: setting property 'Format' for element 'field222222'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'field222222'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"a12", _view.carRight2) // EJsS HtmlView.HtmlView Page: declaration of element 'a12'
      .setProperty("Background","rgba(0,100,0,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'a12'
      .setProperty("Tooltip","acceleration") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'a12'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'a12'
      ;

    _view._addElement(EJSS_INTERFACE.slider,"acceleration22", _view.carRight2) // EJsS HtmlView.HtmlView Page: declaration of element 'acceleration22'
      .setProperty("Width","12vw") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'acceleration22'
      .setProperty("Maximum",0.5) // EJsS HtmlView.HtmlView Page: setting property 'Maximum' for element 'acceleration22'
      .setProperty("Minimum",-0.5) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'acceleration22'
      .setProperty("Background","rgba(0,100,0,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'acceleration22'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'acceleration22'
      .setProperty("Step",0.1) // EJsS HtmlView.HtmlView Page: setting property 'Step' for element 'acceleration22'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"panel2", _view.Notis_Moblise) // EJsS HtmlView.HtmlView Page: declaration of element 'panel2'
      .setProperty("Display","inline-block") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'panel2'
      ;

    _view._addElement(EJSS_INTERFACE.twoStateButton,"runPauseButton", _view.panel2) // EJsS HtmlView.HtmlView Page: declaration of element 'runPauseButton'
      .setProperty("TextOn","►") // EJsS HtmlView.HtmlView Page: setting property 'TextOn' for element 'runPauseButton'
      .setProperty("TextOff","||") // EJsS HtmlView.HtmlView Page: setting property 'TextOff' for element 'runPauseButton'
      ;

    _view._addElement(EJSS_INTERFACE.button,"stepButton", _view.panel2) // EJsS HtmlView.HtmlView Page: declaration of element 'stepButton'
      .setProperty("Text","►|") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'stepButton'
      ;

    _view._addElement(EJSS_INTERFACE.button,"initialize", _view.panel2) // EJsS HtmlView.HtmlView Page: declaration of element 'initialize'
      .setProperty("Tooltip","store data") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'initialize'
      .setProperty("ImageUrl","/org/opensourcephysics/resources/controls/images/initial.gif") // EJsS HtmlView.HtmlView Page: setting property 'ImageUrl' for element 'initialize'
      .setProperty("Display","none") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'initialize'
      ;

    _view._addElement(EJSS_INTERFACE.button,"resetButton", _view.panel2) // EJsS HtmlView.HtmlView Page: declaration of element 'resetButton'
      .setProperty("Tooltip","Resets the simulation") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'resetButton'
      .setProperty("Text","↻") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'resetButton'
      .setProperty("Display","inline-block") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'resetButton'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"mrocket", _view.Notis_Moblise) // EJsS HtmlView.HtmlView Page: declaration of element 'mrocket'
      .setProperty("Width","100%") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'mrocket'
      .setProperty("Display","inline-block") // EJsS HtmlView.HtmlView Page: setting property 'Display' for element 'mrocket'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"hide", _view.mrocket) // EJsS HtmlView.HtmlView Page: declaration of element 'hide'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"model42", _view.hide) // EJsS HtmlView.HtmlView Page: declaration of element 'model42'
      .setProperty("Background","Green") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'model42'
      .setProperty("Tooltip","key in expression like 1*t, t^2+t+0, etc") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'model42'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'model42'
      .setProperty("Text","your model, Y =") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'model42'
      ;

    _view._addElement(EJSS_INTERFACE.checkBox,"model3", _view.hide) // EJsS HtmlView.HtmlView Page: declaration of element 'model3'
      .setProperty("Background","Green") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'model3'
      .setProperty("Tooltip","show model") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'model3'
      ;

    _view._addElement(EJSS_INTERFACE.comboBox,"models2", _view.hide) // EJsS HtmlView.HtmlView Page: declaration of element 'models2'
      .setProperty("Background","Green") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'models2'
      .setProperty("Tooltip","select suggested models") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'models2'
      ;

    _view._addElement(EJSS_INTERFACE.functionField,"fField2", _view.hide) // EJsS HtmlView.HtmlView Page: declaration of element 'fField2'
      .setProperty("Width",200) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'fField2'
      .setProperty("Tooltip","model") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'fField2'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"model422", _view.hide) // EJsS HtmlView.HtmlView Page: declaration of element 'model422'
      .setProperty("Background","Green") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'model422'
      .setProperty("Tooltip","key in expression like 1*t, t^2+t+0, etc") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'model422'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'model422'
      .setProperty("Text","your model, Vy =") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'model422'
      ;

    _view._addElement(EJSS_INTERFACE.comboBox,"models22", _view.hide) // EJsS HtmlView.HtmlView Page: declaration of element 'models22'
      .setProperty("Background","Green") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'models22'
      .setProperty("Tooltip","select suggested models") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'models22'
      ;

    _view._addElement(EJSS_INTERFACE.functionField,"fField2v", _view.hide) // EJsS HtmlView.HtmlView Page: declaration of element 'fField2v'
      .setProperty("Width",150) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'fField2v'
      .setProperty("Tooltip","model") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'fField2v'
      ;

    _view._addElement(EJSS_INTERFACE.imageAndTextButton,"model4222", _view.hide) // EJsS HtmlView.HtmlView Page: declaration of element 'model4222'
      .setProperty("Background","Green") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'model4222'
      .setProperty("Tooltip","key in expression like 1*t, t^2+t+0, etc") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'model4222'
      .setProperty("Foreground","White") // EJsS HtmlView.HtmlView Page: setting property 'Foreground' for element 'model4222'
      .setProperty("Text","your model, Ay =") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'model4222'
      ;

    _view._addElement(EJSS_INTERFACE.comboBox,"models222", _view.hide) // EJsS HtmlView.HtmlView Page: declaration of element 'models222'
      .setProperty("Background","Green") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'models222'
      .setProperty("Tooltip","select suggested models") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'models222'
      ;

    _view._addElement(EJSS_INTERFACE.functionField,"fField2a", _view.hide) // EJsS HtmlView.HtmlView Page: declaration of element 'fField2a'
      .setProperty("Width",150) // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'fField2a'
      .setProperty("Tooltip","model") // EJsS HtmlView.HtmlView Page: setting property 'Tooltip' for element 'fField2a'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"panel", _view.fullscreen) // EJsS HtmlView.HtmlView Page: declaration of element 'panel'
      .setProperty("Height","100%") // EJsS HtmlView.HtmlView Page: setting property 'Height' for element 'panel'
      .setProperty("Width","100%") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'panel'
      ;

    _view._addElement(EJSS_DRAWING2D.plottingPanel,"plottingPanel", _view.panel) // EJsS HtmlView.HtmlView Page: declaration of element 'plottingPanel'
      .setProperty("Height",window.innerHeight*0.9) // EJsS HtmlView.HtmlView Page: setting property 'Height' for element 'plottingPanel'
      .setProperty("Gutters",[0,0,0,0]) // EJsS HtmlView.HtmlView Page: setting property 'Gutters' for element 'plottingPanel'
      .setProperty("ShowAreaRectangle",false) // EJsS HtmlView.HtmlView Page: setting property 'ShowAreaRectangle' for element 'plottingPanel'
      .setProperty("YScalePrecision",0) // EJsS HtmlView.HtmlView Page: setting property 'YScalePrecision' for element 'plottingPanel'
      .setProperty("XFixedTick",0) // EJsS HtmlView.HtmlView Page: setting property 'XFixedTick' for element 'plottingPanel'
      .setProperty("AxisXShow",false) // EJsS HtmlView.HtmlView Page: setting property 'AxisXShow' for element 'plottingPanel'
      .setProperty("YFixedTick",0) // EJsS HtmlView.HtmlView Page: setting property 'YFixedTick' for element 'plottingPanel'
      .setProperty("XTickStep",10) // EJsS HtmlView.HtmlView Page: setting property 'XTickStep' for element 'plottingPanel'
      .setProperty("XAutoTicks",false) // EJsS HtmlView.HtmlView Page: setting property 'XAutoTicks' for element 'plottingPanel'
      .setProperty("GridXShow",false) // EJsS HtmlView.HtmlView Page: setting property 'GridXShow' for element 'plottingPanel'
      .setProperty("Background","rgba(0,92,10,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'plottingPanel'
      .setProperty("Enabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Enabled' for element 'plottingPanel'
      .setProperty("Title",null) // EJsS HtmlView.HtmlView Page: setting property 'Title' for element 'plottingPanel'
      .setProperty("SquareAspect",true) // EJsS HtmlView.HtmlView Page: setting property 'SquareAspect' for element 'plottingPanel'
      .setProperty("MaximumY",40) // EJsS HtmlView.HtmlView Page: setting property 'MaximumY' for element 'plottingPanel'
      .setProperty("MaximumX",20) // EJsS HtmlView.HtmlView Page: setting property 'MaximumX' for element 'plottingPanel'
      .setProperty("YAutoTicks",false) // EJsS HtmlView.HtmlView Page: setting property 'YAutoTicks' for element 'plottingPanel'
      .setProperty("GridYShow",false) // EJsS HtmlView.HtmlView Page: setting property 'GridYShow' for element 'plottingPanel'
      .setProperty("MinimumX",-20) // EJsS HtmlView.HtmlView Page: setting property 'MinimumX' for element 'plottingPanel'
      .setProperty("MinimumY",-5) // EJsS HtmlView.HtmlView Page: setting property 'MinimumY' for element 'plottingPanel'
      .setProperty("TitleY","") // EJsS HtmlView.HtmlView Page: setting property 'TitleY' for element 'plottingPanel'
      .setProperty("AutoScaleY",false) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleY' for element 'plottingPanel'
      .setProperty("TitleX","") // EJsS HtmlView.HtmlView Page: setting property 'TitleX' for element 'plottingPanel'
      .setProperty("MarginY",20) // EJsS HtmlView.HtmlView Page: setting property 'MarginY' for element 'plottingPanel'
      .setProperty("XScalePrecision",0) // EJsS HtmlView.HtmlView Page: setting property 'XScalePrecision' for element 'plottingPanel'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"background", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'background'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"Road", _view.background) // EJsS HtmlView.HtmlView Page: declaration of element 'Road'
      .setProperty("FillColor","DarkGray") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'Road'
      .setProperty("SizeX",30) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'Road'
      .setProperty("RelativePosition","CENTERED") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element 'Road'
      .setProperty("ShapeType","RECTANGLE") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'Road'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'Road'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'Road'
      .setProperty("SizeY",90) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'Road'
      ;

    _view._addElement(EJSS_DRAWING2D.segment,"whitecentreline", _view.background) // EJsS HtmlView.HtmlView Page: declaration of element 'whitecentreline'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'whitecentreline'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'whitecentreline'
      .setProperty("LineColor","White") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'whitecentreline'
      .setProperty("Attributes",{ "stroke-dasharray":"30 30 30 30" }) // EJsS HtmlView.HtmlView Page: setting property 'Attributes' for element 'whitecentreline'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'whitecentreline'
      .setProperty("SizeY",90) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'whitecentreline'
      .setProperty("LineWidth",5) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'whitecentreline'
      .setProperty("Offset","CENTERED") // EJsS HtmlView.HtmlView Page: setting property 'Offset' for element 'whitecentreline'
      ;

    _view._addElement(EJSS_DRAWING2D.segment,"yellowL", _view.background) // EJsS HtmlView.HtmlView Page: declaration of element 'yellowL'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'yellowL'
      .setProperty("X",-14) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'yellowL'
      .setProperty("LineColor","Yellow") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'yellowL'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'yellowL'
      .setProperty("SizeY",90) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'yellowL'
      .setProperty("LineWidth",5) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'yellowL'
      .setProperty("Offset","CENTERED") // EJsS HtmlView.HtmlView Page: setting property 'Offset' for element 'yellowL'
      ;

    _view._addElement(EJSS_DRAWING2D.segment,"yellowR", _view.background) // EJsS HtmlView.HtmlView Page: declaration of element 'yellowR'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'yellowR'
      .setProperty("X",14) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'yellowR'
      .setProperty("LineColor","Yellow") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'yellowR'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'yellowR'
      .setProperty("SizeY",90) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'yellowR'
      .setProperty("LineWidth",5) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'yellowR'
      .setProperty("Offset","CENTERED") // EJsS HtmlView.HtmlView Page: setting property 'Offset' for element 'yellowR'
      ;

    _view._addElement(EJSS_DRAWING2D.image,"carLeft", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'carLeft'
      .setProperty("Sensitivity",100) // EJsS HtmlView.HtmlView Page: setting property 'Sensitivity' for element 'carLeft'
      .setProperty("SizeX",2) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'carLeft'
      .setProperty("ImageUrl","./kinematicscarupanddown/car-2030056_960_720.png") // EJsS HtmlView.HtmlView Page: setting property 'ImageUrl' for element 'carLeft'
      .setProperty("PixelSize",false) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'carLeft'
      .setProperty("SizeY",4) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'carLeft'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"show", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'show'
      ;

    _view._addElement(EJSS_DRAWING2D.image,"carRight", _view.show) // EJsS HtmlView.HtmlView Page: declaration of element 'carRight'
      .setProperty("Sensitivity",100) // EJsS HtmlView.HtmlView Page: setting property 'Sensitivity' for element 'carRight'
      .setProperty("SizeX",4) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'carRight'
      .setProperty("ImageUrl","./kinematicscarupanddown/bus-310766_960_720.png") // EJsS HtmlView.HtmlView Page: setting property 'ImageUrl' for element 'carRight'
      .setProperty("PixelSize",false) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'carRight'
      .setProperty("SizeY",7) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'carRight'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"shadow1", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'shadow1'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'shadow1'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"group7", _view.shadow1) // EJsS HtmlView.HtmlView Page: declaration of element 'group7'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'group7'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'group7'
      ;

    _view._addElement(EJSS_DRAWING2D.arrowSet,"vset", _view.group7) // EJsS HtmlView.HtmlView Page: declaration of element 'vset'
      .setProperty("MarkEnd","ANGLE") // EJsS HtmlView.HtmlView Page: setting property 'MarkEnd' for element 'vset'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'vset'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'vset'
      .setProperty("Offset","SOUTH_WEST") // EJsS HtmlView.HtmlView Page: setting property 'Offset' for element 'vset'
      ;

    _view._addElement(EJSS_DRAWING2D.shapeSet,"shadows", _view.group7) // EJsS HtmlView.HtmlView Page: declaration of element 'shadows'
      .setProperty("ShapeType","WHEEL") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'shadows'
      .setProperty("DrawFill",true) // EJsS HtmlView.HtmlView Page: setting property 'DrawFill' for element 'shadows'
      .setProperty("SizeX",5) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'shadows'
      .setProperty("DrawLines",true) // EJsS HtmlView.HtmlView Page: setting property 'DrawLines' for element 'shadows'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'shadows'
      .setProperty("SizeY",5) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'shadows'
      .setProperty("LineWidth",1) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'shadows'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"displacevleongster", _view.shadow1) // EJsS HtmlView.HtmlView Page: declaration of element 'displacevleongster'
      ;

    _view._addElement(EJSS_DRAWING2D.textSet,"vxShadowsvalues2", _view.displacevleongster) // EJsS HtmlView.HtmlView Page: declaration of element 'vxShadowsvalues2'
      .setProperty("FillColor","Black") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'vxShadowsvalues2'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"shadow2bus", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'shadow2bus'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'shadow2bus'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"group72", _view.shadow2bus) // EJsS HtmlView.HtmlView Page: declaration of element 'group72'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'group72'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'group72'
      ;

    _view._addElement(EJSS_DRAWING2D.arrowSet,"vset3", _view.group72) // EJsS HtmlView.HtmlView Page: declaration of element 'vset3'
      .setProperty("MarkEnd","ANGLE") // EJsS HtmlView.HtmlView Page: setting property 'MarkEnd' for element 'vset3'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'vset3'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'vset3'
      .setProperty("Offset","SOUTH_WEST") // EJsS HtmlView.HtmlView Page: setting property 'Offset' for element 'vset3'
      ;

    _view._addElement(EJSS_DRAWING2D.shapeSet,"shadows3", _view.group72) // EJsS HtmlView.HtmlView Page: declaration of element 'shadows3'
      .setProperty("ShapeType","WHEEL") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'shadows3'
      .setProperty("DrawFill",true) // EJsS HtmlView.HtmlView Page: setting property 'DrawFill' for element 'shadows3'
      .setProperty("SizeX",5) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'shadows3'
      .setProperty("DrawLines",true) // EJsS HtmlView.HtmlView Page: setting property 'DrawLines' for element 'shadows3'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'shadows3'
      .setProperty("SizeY",5) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'shadows3'
      .setProperty("LineWidth",1) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'shadows3'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"displacevleongster2", _view.shadow2bus) // EJsS HtmlView.HtmlView Page: declaration of element 'displacevleongster2'
      ;

    _view._addElement(EJSS_DRAWING2D.textSet,"vxShadowsvalues22", _view.displacevleongster2) // EJsS HtmlView.HtmlView Page: declaration of element 'vxShadowsvalues22'
      .setProperty("FillColor","Black") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'vxShadowsvalues22'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"position", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'position'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'position'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'position'
      ;

    _view._addElement(EJSS_DRAWING2D.arrow,"velocity", _view.position) // EJsS HtmlView.HtmlView Page: declaration of element 'velocity'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'velocity'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'velocity'
      .setProperty("LineColor","Magenta") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'velocity'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'velocity'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'velocity'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"group2", _view.position) // EJsS HtmlView.HtmlView Page: declaration of element 'group2'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'group2'
      ;

    _view._addElement(EJSS_DRAWING2D.text,"v2", _view.group2) // EJsS HtmlView.HtmlView Page: declaration of element 'v2'
      .setProperty("RelativePosition","SOUTH_WEST") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element 'v2'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'v2'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'v2'
      .setProperty("EnabledPosition","ENABLED_ANY") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element 'v2'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"velocitydrag22", _view.position) // EJsS HtmlView.HtmlView Page: declaration of element 'velocitydrag22'
      .setProperty("FillColor","rgba(0,255,255,0.0)") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'velocitydrag22'
      .setProperty("SizeX",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'velocitydrag22'
      .setProperty("ShapeType","RECTANGLE") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'velocitydrag22'
      .setProperty("LineColor","Magenta") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'velocitydrag22'
      .setProperty("X",0) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'velocitydrag22'
      .setProperty("SizeY",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'velocitydrag22'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'velocitydrag22'
      .setProperty("DrawFill",false) // EJsS HtmlView.HtmlView Page: setting property 'DrawFill' for element 'velocitydrag22'
      .setProperty("EnabledPosition","ENABLED_Y") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element 'velocitydrag22'
      ;

    _view._addElement(EJSS_DRAWING2D.arrow,"acceleration", _view.position) // EJsS HtmlView.HtmlView Page: declaration of element 'acceleration'
      .setProperty("MarkEnd","TRIANGLE") // EJsS HtmlView.HtmlView Page: setting property 'MarkEnd' for element 'acceleration'
      .setProperty("MarkMiddle","TRIANGLE") // EJsS HtmlView.HtmlView Page: setting property 'MarkMiddle' for element 'acceleration'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'acceleration'
      .setProperty("X",5) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'acceleration'
      .setProperty("LineColor","Red") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'acceleration'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'acceleration'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'acceleration'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"group22", _view.position) // EJsS HtmlView.HtmlView Page: declaration of element 'group22'
      .setProperty("X",5) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'group22'
      ;

    _view._addElement(EJSS_DRAWING2D.text,"v22", _view.group22) // EJsS HtmlView.HtmlView Page: declaration of element 'v22'
      .setProperty("RelativePosition","SOUTH_WEST") // EJsS HtmlView.HtmlView Page: setting property 'RelativePosition' for element 'v22'
      .setProperty("EnabledPosition","ENABLED_ANY") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element 'v22'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"adrag", _view.position) // EJsS HtmlView.HtmlView Page: declaration of element 'adrag'
      .setProperty("FillColor","rgba(0,255,255,0.0)") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'adrag'
      .setProperty("SizeX",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'adrag'
      .setProperty("ShapeType","RECTANGLE") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'adrag'
      .setProperty("LineColor","Red") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'adrag'
      .setProperty("X",5) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'adrag'
      .setProperty("SizeY",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'adrag'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'adrag'
      .setProperty("DrawFill",false) // EJsS HtmlView.HtmlView Page: setting property 'DrawFill' for element 'adrag'
      .setProperty("EnabledPosition","ENABLED_Y") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element 'adrag'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"model23", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'model23'
      .setProperty("FillColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'model23'
      .setProperty("SizeX",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'model23'
      .setProperty("ShapeType","WHEEL") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'model23'
      .setProperty("SizeY",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'model23'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'model23'
      .setProperty("EnabledPosition","ENABLED_ANY") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element 'model23'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"modelvy", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'modelvy'
      .setProperty("FillColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'modelvy'
      .setProperty("SizeX",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'modelvy'
      .setProperty("ShapeType","WHEEL") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'modelvy'
      .setProperty("SizeY",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'modelvy'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'modelvy'
      .setProperty("EnabledPosition","ENABLED_ANY") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element 'modelvy'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"modeay", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'modeay'
      .setProperty("FillColor","Orange") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'modeay'
      .setProperty("SizeX",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'modeay'
      .setProperty("ShapeType","WHEEL") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'modeay'
      .setProperty("SizeY",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'modeay'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'modeay'
      .setProperty("EnabledPosition","ENABLED_ANY") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element 'modeay'
      ;

    _view._addElement(EJSS_DRAWING2D.plottingPanel,"plottingPanelxvst", _view.panel) // EJsS HtmlView.HtmlView Page: declaration of element 'plottingPanelxvst'
      .setProperty("Height",window.innerHeight*0.9) // EJsS HtmlView.HtmlView Page: setting property 'Height' for element 'plottingPanelxvst'
      .setProperty("Gutters",[0,0,0,0]) // EJsS HtmlView.HtmlView Page: setting property 'Gutters' for element 'plottingPanelxvst'
      .setProperty("ShowAreaRectangle",false) // EJsS HtmlView.HtmlView Page: setting property 'ShowAreaRectangle' for element 'plottingPanelxvst'
      .setProperty("YScalePrecision",0) // EJsS HtmlView.HtmlView Page: setting property 'YScalePrecision' for element 'plottingPanelxvst'
      .setProperty("XFixedTick",0) // EJsS HtmlView.HtmlView Page: setting property 'XFixedTick' for element 'plottingPanelxvst'
      .setProperty("YFixedTick",0) // EJsS HtmlView.HtmlView Page: setting property 'YFixedTick' for element 'plottingPanelxvst'
      .setProperty("XTickStep",1) // EJsS HtmlView.HtmlView Page: setting property 'XTickStep' for element 'plottingPanelxvst'
      .setProperty("YTickStep",2) // EJsS HtmlView.HtmlView Page: setting property 'YTickStep' for element 'plottingPanelxvst'
      .setProperty("AllowScalingDragging",true) // EJsS HtmlView.HtmlView Page: setting property 'AllowScalingDragging' for element 'plottingPanelxvst'
      .setProperty("XAutoTicks",false) // EJsS HtmlView.HtmlView Page: setting property 'XAutoTicks' for element 'plottingPanelxvst'
      .setProperty("Enabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Enabled' for element 'plottingPanelxvst'
      .setProperty("Title","") // EJsS HtmlView.HtmlView Page: setting property 'Title' for element 'plottingPanelxvst'
      .setProperty("MaximumY",40) // EJsS HtmlView.HtmlView Page: setting property 'MaximumY' for element 'plottingPanelxvst'
      .setProperty("MaximumX",20) // EJsS HtmlView.HtmlView Page: setting property 'MaximumX' for element 'plottingPanelxvst'
      .setProperty("YAutoTicks",false) // EJsS HtmlView.HtmlView Page: setting property 'YAutoTicks' for element 'plottingPanelxvst'
      .setProperty("MinimumX",-0) // EJsS HtmlView.HtmlView Page: setting property 'MinimumX' for element 'plottingPanelxvst'
      .setProperty("MinimumY",-5) // EJsS HtmlView.HtmlView Page: setting property 'MinimumY' for element 'plottingPanelxvst'
      .setProperty("TitleY","displacement / m") // EJsS HtmlView.HtmlView Page: setting property 'TitleY' for element 'plottingPanelxvst'
      .setProperty("TitleX","t / s") // EJsS HtmlView.HtmlView Page: setting property 'TitleX' for element 'plottingPanelxvst'
      .setProperty("AutoScaleY",false) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleY' for element 'plottingPanelxvst'
      .setProperty("AutoScaleX",false) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleX' for element 'plottingPanelxvst'
      .setProperty("MarginX",20) // EJsS HtmlView.HtmlView Page: setting property 'MarginX' for element 'plottingPanelxvst'
      .setProperty("MarginY",20) // EJsS HtmlView.HtmlView Page: setting property 'MarginY' for element 'plottingPanelxvst'
      .setProperty("XScalePrecision",0) // EJsS HtmlView.HtmlView Page: setting property 'XScalePrecision' for element 'plottingPanelxvst'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"model22", _view.plottingPanelxvst) // EJsS HtmlView.HtmlView Page: declaration of element 'model22'
      .setProperty("FillColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'model22'
      .setProperty("SizeX",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'model22'
      .setProperty("ShapeType","WHEEL") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'model22'
      .setProperty("SizeY",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'model22'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'model22'
      ;

    _view._addElement(EJSS_DRAWING2D.analyticCurve,"analyticCurve", _view.plottingPanelxvst) // EJsS HtmlView.HtmlView Page: declaration of element 'analyticCurve'
      .setProperty("FunctionX","t") // EJsS HtmlView.HtmlView Page: setting property 'FunctionX' for element 'analyticCurve'
      .setProperty("Minimum",0) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'analyticCurve'
      .setProperty("NumPoints",100) // EJsS HtmlView.HtmlView Page: setting property 'NumPoints' for element 'analyticCurve'
      .setProperty("Variable","t") // EJsS HtmlView.HtmlView Page: setting property 'Variable' for element 'analyticCurve'
      .setProperty("LineColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'analyticCurve'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'analyticCurve'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"yDot", _view.plottingPanelxvst) // EJsS HtmlView.HtmlView Page: declaration of element 'yDot'
      .setProperty("SizeX",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'yDot'
      .setProperty("LineColor","rgba(0,0,255,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'yDot'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'yDot'
      .setProperty("SizeY",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'yDot'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'yDot'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'yDot'
      .setProperty("DrawFill",false) // EJsS HtmlView.HtmlView Page: setting property 'DrawFill' for element 'yDot'
      ;

    _view._addElement(EJSS_DRAWING2D.image,"carLeft3", _view.plottingPanelxvst) // EJsS HtmlView.HtmlView Page: declaration of element 'carLeft3'
      .setProperty("SizeX",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'carLeft3'
      .setProperty("ImageUrl","./kinematicscarupanddown/car-2030056_960_720.png") // EJsS HtmlView.HtmlView Page: setting property 'ImageUrl' for element 'carLeft3'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'carLeft3'
      .setProperty("SizeY",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'carLeft3'
      ;

    _view._addElement(EJSS_DRAWING2D.trail,"yTrail", _view.plottingPanelxvst) // EJsS HtmlView.HtmlView Page: declaration of element 'yTrail'
      .setProperty("LineColor","rgba(0,0,255,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'yTrail'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'yTrail'
      ;

    _view._addElement(EJSS_DRAWING2D.shapeSet,"shadows2", _view.plottingPanelxvst) // EJsS HtmlView.HtmlView Page: declaration of element 'shadows2'
      .setProperty("SizeX",5) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'shadows2'
      .setProperty("ShapeType","WHEEL") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'shadows2'
      .setProperty("DrawLines",true) // EJsS HtmlView.HtmlView Page: setting property 'DrawLines' for element 'shadows2'
      .setProperty("SizeY",5) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'shadows2'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'shadows2'
      .setProperty("LineWidth",1) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'shadows2'
      .setProperty("DrawFill",true) // EJsS HtmlView.HtmlView Page: setting property 'DrawFill' for element 'shadows2'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"secondball", _view.plottingPanelxvst) // EJsS HtmlView.HtmlView Page: declaration of element 'secondball'
      ;

    _view._addElement(EJSS_DRAWING2D.trail,"yTrail2", _view.secondball) // EJsS HtmlView.HtmlView Page: declaration of element 'yTrail2'
      .setProperty("LineColor","rgba(0,0,100,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'yTrail2'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'yTrail2'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"yDot22", _view.secondball) // EJsS HtmlView.HtmlView Page: declaration of element 'yDot22'
      .setProperty("SizeX",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'yDot22'
      .setProperty("LineColor","rgba(0,0,100,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'yDot22'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'yDot22'
      .setProperty("SizeY",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'yDot22'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'yDot22'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'yDot22'
      .setProperty("DrawFill",false) // EJsS HtmlView.HtmlView Page: setting property 'DrawFill' for element 'yDot22'
      ;

    _view._addElement(EJSS_DRAWING2D.image,"carRight3", _view.secondball) // EJsS HtmlView.HtmlView Page: declaration of element 'carRight3'
      .setProperty("Sensitivity",100) // EJsS HtmlView.HtmlView Page: setting property 'Sensitivity' for element 'carRight3'
      .setProperty("SizeX",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'carRight3'
      .setProperty("ImageUrl","./kinematicscarupanddown/bus-310766_960_720.png") // EJsS HtmlView.HtmlView Page: setting property 'ImageUrl' for element 'carRight3'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'carRight3'
      .setProperty("SizeY",16) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'carRight3'
      ;

    _view._addElement(EJSS_DRAWING2D.shapeSet,"shadows22", _view.secondball) // EJsS HtmlView.HtmlView Page: declaration of element 'shadows22'
      .setProperty("SizeX",5) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'shadows22'
      .setProperty("ShapeType","WHEEL") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'shadows22'
      .setProperty("DrawLines",true) // EJsS HtmlView.HtmlView Page: setting property 'DrawLines' for element 'shadows22'
      .setProperty("SizeY",5) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'shadows22'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'shadows22'
      .setProperty("LineWidth",1) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'shadows22'
      .setProperty("DrawFill",true) // EJsS HtmlView.HtmlView Page: setting property 'DrawFill' for element 'shadows22'
      ;

    _view._addElement(EJSS_DRAWING2D.arrowSet,"xset22", _view.plottingPanelxvst) // EJsS HtmlView.HtmlView Page: declaration of element 'xset22'
      .setProperty("MarkEnd","NONE") // EJsS HtmlView.HtmlView Page: setting property 'MarkEnd' for element 'xset22'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'xset22'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'xset22'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'xset22'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'xset22'
      .setProperty("Offset","SOUTH_WEST") // EJsS HtmlView.HtmlView Page: setting property 'Offset' for element 'xset22'
      ;

    _view._addElement(EJSS_DRAWING2D.plottingPanel,"plottingPanelxvst2", _view.panel) // EJsS HtmlView.HtmlView Page: declaration of element 'plottingPanelxvst2'
      .setProperty("Height",window.innerHeight*0.9) // EJsS HtmlView.HtmlView Page: setting property 'Height' for element 'plottingPanelxvst2'
      .setProperty("Gutters",[0,0,0,0]) // EJsS HtmlView.HtmlView Page: setting property 'Gutters' for element 'plottingPanelxvst2'
      .setProperty("ShowAreaRectangle",false) // EJsS HtmlView.HtmlView Page: setting property 'ShowAreaRectangle' for element 'plottingPanelxvst2'
      .setProperty("YScalePrecision",0) // EJsS HtmlView.HtmlView Page: setting property 'YScalePrecision' for element 'plottingPanelxvst2'
      .setProperty("XFixedTick",0) // EJsS HtmlView.HtmlView Page: setting property 'XFixedTick' for element 'plottingPanelxvst2'
      .setProperty("YFixedTick",0) // EJsS HtmlView.HtmlView Page: setting property 'YFixedTick' for element 'plottingPanelxvst2'
      .setProperty("XTickStep",1) // EJsS HtmlView.HtmlView Page: setting property 'XTickStep' for element 'plottingPanelxvst2'
      .setProperty("YTickStep",2) // EJsS HtmlView.HtmlView Page: setting property 'YTickStep' for element 'plottingPanelxvst2'
      .setProperty("AllowScalingDragging",true) // EJsS HtmlView.HtmlView Page: setting property 'AllowScalingDragging' for element 'plottingPanelxvst2'
      .setProperty("XAutoTicks",false) // EJsS HtmlView.HtmlView Page: setting property 'XAutoTicks' for element 'plottingPanelxvst2'
      .setProperty("Enabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Enabled' for element 'plottingPanelxvst2'
      .setProperty("Title","") // EJsS HtmlView.HtmlView Page: setting property 'Title' for element 'plottingPanelxvst2'
      .setProperty("MaximumX",20) // EJsS HtmlView.HtmlView Page: setting property 'MaximumX' for element 'plottingPanelxvst2'
      .setProperty("YAutoTicks",false) // EJsS HtmlView.HtmlView Page: setting property 'YAutoTicks' for element 'plottingPanelxvst2'
      .setProperty("MinimumX",0.0) // EJsS HtmlView.HtmlView Page: setting property 'MinimumX' for element 'plottingPanelxvst2'
      .setProperty("TitleY","velocity / m s⁻¹") // EJsS HtmlView.HtmlView Page: setting property 'TitleY' for element 'plottingPanelxvst2'
      .setProperty("TitleX","t / s") // EJsS HtmlView.HtmlView Page: setting property 'TitleX' for element 'plottingPanelxvst2'
      .setProperty("AutoScaleY",true) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleY' for element 'plottingPanelxvst2'
      .setProperty("AutoScaleX",false) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleX' for element 'plottingPanelxvst2'
      .setProperty("MarginX",20) // EJsS HtmlView.HtmlView Page: setting property 'MarginX' for element 'plottingPanelxvst2'
      .setProperty("MarginY",30) // EJsS HtmlView.HtmlView Page: setting property 'MarginY' for element 'plottingPanelxvst2'
      .setProperty("XScalePrecision",0) // EJsS HtmlView.HtmlView Page: setting property 'XScalePrecision' for element 'plottingPanelxvst2'
      ;

    _view._addElement(EJSS_DRAWING2D.analyticCurve,"analyticCurve2", _view.plottingPanelxvst2) // EJsS HtmlView.HtmlView Page: declaration of element 'analyticCurve2'
      .setProperty("FunctionX","t") // EJsS HtmlView.HtmlView Page: setting property 'FunctionX' for element 'analyticCurve2'
      .setProperty("Minimum",0) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'analyticCurve2'
      .setProperty("NumPoints",100) // EJsS HtmlView.HtmlView Page: setting property 'NumPoints' for element 'analyticCurve2'
      .setProperty("Variable","t") // EJsS HtmlView.HtmlView Page: setting property 'Variable' for element 'analyticCurve2'
      .setProperty("LineColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'analyticCurve2'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'analyticCurve2'
      ;

    _view._addElement(EJSS_DRAWING2D.trail,"trail", _view.plottingPanelxvst2) // EJsS HtmlView.HtmlView Page: declaration of element 'trail'
      .setProperty("LineColor","rgba(255,0,255,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'trail'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'trail'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 'trail'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'trail'
      ;

    _view._addElement(EJSS_DRAWING2D.shapeSet,"shadows222", _view.plottingPanelxvst2) // EJsS HtmlView.HtmlView Page: declaration of element 'shadows222'
      .setProperty("SizeX",5) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'shadows222'
      .setProperty("ShapeType","WHEEL") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'shadows222'
      .setProperty("Visibility",true) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'shadows222'
      .setProperty("DrawLines",true) // EJsS HtmlView.HtmlView Page: setting property 'DrawLines' for element 'shadows222'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'shadows222'
      .setProperty("SizeY",5) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'shadows222'
      .setProperty("LineWidth",1) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'shadows222'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"vDot2", _view.plottingPanelxvst2) // EJsS HtmlView.HtmlView Page: declaration of element 'vDot2'
      .setProperty("SizeX",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'vDot2'
      .setProperty("LineColor","rgba(255,0,255,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'vDot2'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'vDot2'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'vDot2'
      .setProperty("SizeY",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'vDot2'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'vDot2'
      .setProperty("DrawFill",false) // EJsS HtmlView.HtmlView Page: setting property 'DrawFill' for element 'vDot2'
      ;

    _view._addElement(EJSS_DRAWING2D.image,"carLeft32", _view.plottingPanelxvst2) // EJsS HtmlView.HtmlView Page: declaration of element 'carLeft32'
      .setProperty("SizeX",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'carLeft32'
      .setProperty("ImageUrl","./kinematicscarupanddown/car-2030056_960_720.png") // EJsS HtmlView.HtmlView Page: setting property 'ImageUrl' for element 'carLeft32'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'carLeft32'
      .setProperty("SizeY",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'carLeft32'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"offset2", _view.plottingPanelxvst2) // EJsS HtmlView.HtmlView Page: declaration of element 'offset2'
      .setProperty("X",-0.03) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'offset2'
      ;

    _view._addElement(EJSS_DRAWING2D.arrowSet,"vset2", _view.offset2) // EJsS HtmlView.HtmlView Page: declaration of element 'vset2'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'vset2'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'vset2'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'vset2'
      .setProperty("Offset","SOUTH_WEST") // EJsS HtmlView.HtmlView Page: setting property 'Offset' for element 'vset2'
      ;

    _view._addElement(EJSS_DRAWING2D.trail,"vyTrail", _view.plottingPanelxvst2) // EJsS HtmlView.HtmlView Page: declaration of element 'vyTrail'
      .setProperty("LineColor","rgba(255,0,255,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'vyTrail'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'vyTrail'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"second", _view.plottingPanelxvst2) // EJsS HtmlView.HtmlView Page: declaration of element 'second'
      ;

    _view._addElement(EJSS_DRAWING2D.trail,"vyTrail2", _view.second) // EJsS HtmlView.HtmlView Page: declaration of element 'vyTrail2'
      .setProperty("LineColor","rgba(100,0,100,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'vyTrail2'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'vyTrail2'
      ;

    _view._addElement(EJSS_DRAWING2D.shapeSet,"shadows2222", _view.second) // EJsS HtmlView.HtmlView Page: declaration of element 'shadows2222'
      .setProperty("SizeX",5) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'shadows2222'
      .setProperty("ShapeType","WHEEL") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'shadows2222'
      .setProperty("Visibility",true) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'shadows2222'
      .setProperty("DrawLines",true) // EJsS HtmlView.HtmlView Page: setting property 'DrawLines' for element 'shadows2222'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'shadows2222'
      .setProperty("SizeY",5) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'shadows2222'
      .setProperty("LineWidth",1) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'shadows2222'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"vDot22", _view.second) // EJsS HtmlView.HtmlView Page: declaration of element 'vDot22'
      .setProperty("SizeX",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'vDot22'
      .setProperty("LineColor","rgba(153,0,153,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'vDot22'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'vDot22'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'vDot22'
      .setProperty("SizeY",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'vDot22'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'vDot22'
      .setProperty("DrawFill",false) // EJsS HtmlView.HtmlView Page: setting property 'DrawFill' for element 'vDot22'
      ;

    _view._addElement(EJSS_DRAWING2D.image,"carRight32", _view.second) // EJsS HtmlView.HtmlView Page: declaration of element 'carRight32'
      .setProperty("Sensitivity",100) // EJsS HtmlView.HtmlView Page: setting property 'Sensitivity' for element 'carRight32'
      .setProperty("SizeX",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'carRight32'
      .setProperty("ImageUrl","./kinematicscarupanddown/bus-310766_960_720.png") // EJsS HtmlView.HtmlView Page: setting property 'ImageUrl' for element 'carRight32'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'carRight32'
      .setProperty("SizeY",16) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'carRight32'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"offset", _view.second) // EJsS HtmlView.HtmlView Page: declaration of element 'offset'
      .setProperty("X",0.03) // EJsS HtmlView.HtmlView Page: setting property 'X' for element 'offset'
      ;

    _view._addElement(EJSS_DRAWING2D.arrowSet,"vset22", _view.offset) // EJsS HtmlView.HtmlView Page: declaration of element 'vset22'
      .setProperty("SizeX",0) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'vset22'
      .setProperty("Y",0) // EJsS HtmlView.HtmlView Page: setting property 'Y' for element 'vset22'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'vset22'
      .setProperty("Offset","SOUTH_WEST") // EJsS HtmlView.HtmlView Page: setting property 'Offset' for element 'vset22'
      ;

    _view._addElement(EJSS_DRAWING2D.plottingPanel,"plottingPanelxvst3", _view.panel) // EJsS HtmlView.HtmlView Page: declaration of element 'plottingPanelxvst3'
      .setProperty("Height",window.innerHeight*0.9) // EJsS HtmlView.HtmlView Page: setting property 'Height' for element 'plottingPanelxvst3'
      .setProperty("Gutters",[0,0,0,0]) // EJsS HtmlView.HtmlView Page: setting property 'Gutters' for element 'plottingPanelxvst3'
      .setProperty("ShowAreaRectangle",false) // EJsS HtmlView.HtmlView Page: setting property 'ShowAreaRectangle' for element 'plottingPanelxvst3'
      .setProperty("YScalePrecision",1) // EJsS HtmlView.HtmlView Page: setting property 'YScalePrecision' for element 'plottingPanelxvst3'
      .setProperty("XFixedTick",0) // EJsS HtmlView.HtmlView Page: setting property 'XFixedTick' for element 'plottingPanelxvst3'
      .setProperty("YFixedTick",0) // EJsS HtmlView.HtmlView Page: setting property 'YFixedTick' for element 'plottingPanelxvst3'
      .setProperty("XTickStep",1) // EJsS HtmlView.HtmlView Page: setting property 'XTickStep' for element 'plottingPanelxvst3'
      .setProperty("YTickStep",0.1) // EJsS HtmlView.HtmlView Page: setting property 'YTickStep' for element 'plottingPanelxvst3'
      .setProperty("AllowScalingDragging",true) // EJsS HtmlView.HtmlView Page: setting property 'AllowScalingDragging' for element 'plottingPanelxvst3'
      .setProperty("XAutoTicks",false) // EJsS HtmlView.HtmlView Page: setting property 'XAutoTicks' for element 'plottingPanelxvst3'
      .setProperty("Enabled",true) // EJsS HtmlView.HtmlView Page: setting property 'Enabled' for element 'plottingPanelxvst3'
      .setProperty("Title","") // EJsS HtmlView.HtmlView Page: setting property 'Title' for element 'plottingPanelxvst3'
      .setProperty("MaximumY",0.5) // EJsS HtmlView.HtmlView Page: setting property 'MaximumY' for element 'plottingPanelxvst3'
      .setProperty("MaximumX",20) // EJsS HtmlView.HtmlView Page: setting property 'MaximumX' for element 'plottingPanelxvst3'
      .setProperty("YAutoTicks",false) // EJsS HtmlView.HtmlView Page: setting property 'YAutoTicks' for element 'plottingPanelxvst3'
      .setProperty("MinimumX",0.0) // EJsS HtmlView.HtmlView Page: setting property 'MinimumX' for element 'plottingPanelxvst3'
      .setProperty("MinimumY",-0.5) // EJsS HtmlView.HtmlView Page: setting property 'MinimumY' for element 'plottingPanelxvst3'
      .setProperty("TitleY","acceleration / m s⁻²") // EJsS HtmlView.HtmlView Page: setting property 'TitleY' for element 'plottingPanelxvst3'
      .setProperty("TitleX","t / s") // EJsS HtmlView.HtmlView Page: setting property 'TitleX' for element 'plottingPanelxvst3'
      .setProperty("AutoScaleY",false) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleY' for element 'plottingPanelxvst3'
      .setProperty("AutoScaleX",false) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleX' for element 'plottingPanelxvst3'
      .setProperty("MarginX",20) // EJsS HtmlView.HtmlView Page: setting property 'MarginX' for element 'plottingPanelxvst3'
      .setProperty("MarginY",20) // EJsS HtmlView.HtmlView Page: setting property 'MarginY' for element 'plottingPanelxvst3'
      .setProperty("XScalePrecision",0) // EJsS HtmlView.HtmlView Page: setting property 'XScalePrecision' for element 'plottingPanelxvst3'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"model4", _view.plottingPanelxvst3) // EJsS HtmlView.HtmlView Page: declaration of element 'model4'
      .setProperty("FillColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'model4'
      .setProperty("SizeX",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'model4'
      .setProperty("ShapeType","WHEEL") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'model4'
      .setProperty("LineColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'model4'
      .setProperty("SizeY",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'model4'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'model4'
      ;

    _view._addElement(EJSS_DRAWING2D.analyticCurve,"analyticCurve22", _view.plottingPanelxvst3) // EJsS HtmlView.HtmlView Page: declaration of element 'analyticCurve22'
      .setProperty("FunctionX","t") // EJsS HtmlView.HtmlView Page: setting property 'FunctionX' for element 'analyticCurve22'
      .setProperty("Minimum",0) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'analyticCurve22'
      .setProperty("NumPoints",100) // EJsS HtmlView.HtmlView Page: setting property 'NumPoints' for element 'analyticCurve22'
      .setProperty("Variable","t") // EJsS HtmlView.HtmlView Page: setting property 'Variable' for element 'analyticCurve22'
      .setProperty("LineColor","Green") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'analyticCurve22'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'analyticCurve22'
      ;

    _view._addElement(EJSS_DRAWING2D.trail,"trail2", _view.plottingPanelxvst3) // EJsS HtmlView.HtmlView Page: declaration of element 'trail2'
      .setProperty("LineColor","rgba(0,153,0,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'trail2'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'trail2'
      .setProperty("NoRepeat",true) // EJsS HtmlView.HtmlView Page: setting property 'NoRepeat' for element 'trail2'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'trail2'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"hide3", _view.plottingPanelxvst3) // EJsS HtmlView.HtmlView Page: declaration of element 'hide3'
      ;

    _view._addElement(EJSS_DRAWING2D.analyticCurve,"secondDerivativeTrail23", _view.hide3) // EJsS HtmlView.HtmlView Page: declaration of element 'secondDerivativeTrail23'
      .setProperty("FunctionX","t") // EJsS HtmlView.HtmlView Page: setting property 'FunctionX' for element 'secondDerivativeTrail23'
      .setProperty("Minimum",0) // EJsS HtmlView.HtmlView Page: setting property 'Minimum' for element 'secondDerivativeTrail23'
      .setProperty("Variable","t") // EJsS HtmlView.HtmlView Page: setting property 'Variable' for element 'secondDerivativeTrail23'
      .setProperty("LineColor","rgba(150,0,0,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'secondDerivativeTrail23'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'secondDerivativeTrail23'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'secondDerivativeTrail23'
      ;

    _view._addElement(EJSS_DRAWING2D.group,"secondbll", _view.hide3) // EJsS HtmlView.HtmlView Page: declaration of element 'secondbll'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"aDot24dragay22", _view.secondbll) // EJsS HtmlView.HtmlView Page: declaration of element 'aDot24dragay22'
      .setProperty("FillColor","rgba(0,100,0,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'FillColor' for element 'aDot24dragay22'
      .setProperty("SizeX",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'aDot24dragay22'
      .setProperty("LineColor","rgba(0,100,0,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'aDot24dragay22'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'aDot24dragay22'
      .setProperty("SizeY",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'aDot24dragay22'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'aDot24dragay22'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'aDot24dragay22'
      .setProperty("DrawFill",false) // EJsS HtmlView.HtmlView Page: setting property 'DrawFill' for element 'aDot24dragay22'
      ;

    _view._addElement(EJSS_DRAWING2D.image,"carRight33", _view.secondbll) // EJsS HtmlView.HtmlView Page: declaration of element 'carRight33'
      .setProperty("Sensitivity",100) // EJsS HtmlView.HtmlView Page: setting property 'Sensitivity' for element 'carRight33'
      .setProperty("SizeX",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'carRight33'
      .setProperty("ImageUrl","./kinematicscarupanddown/bus-310766_960_720.png") // EJsS HtmlView.HtmlView Page: setting property 'ImageUrl' for element 'carRight33'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'carRight33'
      .setProperty("SizeY",16) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'carRight33'
      ;

    _view._addElement(EJSS_DRAWING2D.trail,"ayTrail2", _view.secondbll) // EJsS HtmlView.HtmlView Page: declaration of element 'ayTrail2'
      .setProperty("LineColor","rgba(0,100,0,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'ayTrail2'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'ayTrail2'
      ;

    _view._addElement(EJSS_DRAWING2D.shapeSet,"ashadows22232", _view.secondbll) // EJsS HtmlView.HtmlView Page: declaration of element 'ashadows22232'
      .setProperty("SizeX",5) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'ashadows22232'
      .setProperty("ShapeType","WHEEL") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'ashadows22232'
      .setProperty("Visibility",true) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'ashadows22232'
      .setProperty("DrawLines",true) // EJsS HtmlView.HtmlView Page: setting property 'DrawLines' for element 'ashadows22232'
      .setProperty("SizeY",5) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'ashadows22232'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'ashadows22232'
      .setProperty("LineWidth",1) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'ashadows22232'
      ;

    _view._addElement(EJSS_DRAWING2D.trail,"ayTrail", _view.plottingPanelxvst3) // EJsS HtmlView.HtmlView Page: declaration of element 'ayTrail'
      .setProperty("LineColor","rgba(0,255,0,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'ayTrail'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'ayTrail'
      ;

    _view._addElement(EJSS_DRAWING2D.shapeSet,"ashadows2223", _view.plottingPanelxvst3) // EJsS HtmlView.HtmlView Page: declaration of element 'ashadows2223'
      .setProperty("SizeX",5) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'ashadows2223'
      .setProperty("ShapeType","WHEEL") // EJsS HtmlView.HtmlView Page: setting property 'ShapeType' for element 'ashadows2223'
      .setProperty("Visibility",true) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'ashadows2223'
      .setProperty("DrawLines",true) // EJsS HtmlView.HtmlView Page: setting property 'DrawLines' for element 'ashadows2223'
      .setProperty("SizeY",5) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'ashadows2223'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'ashadows2223'
      .setProperty("LineWidth",1) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'ashadows2223'
      ;

    _view._addElement(EJSS_DRAWING2D.shape,"aDot242showay_kvy", _view.plottingPanelxvst3) // EJsS HtmlView.HtmlView Page: declaration of element 'aDot242showay_kvy'
      .setProperty("SizeX",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'aDot242showay_kvy'
      .setProperty("LineColor","rgba(0,153,0,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'aDot242showay_kvy'
      .setProperty("Visibility",false) // EJsS HtmlView.HtmlView Page: setting property 'Visibility' for element 'aDot242showay_kvy'
      .setProperty("SizeY",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'aDot242showay_kvy'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'aDot242showay_kvy'
      .setProperty("LineWidth",3) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'aDot242showay_kvy'
      .setProperty("DrawFill",false) // EJsS HtmlView.HtmlView Page: setting property 'DrawFill' for element 'aDot242showay_kvy'
      ;

    _view._addElement(EJSS_DRAWING2D.image,"carLeft33", _view.plottingPanelxvst3) // EJsS HtmlView.HtmlView Page: declaration of element 'carLeft33'
      .setProperty("SizeX",10) // EJsS HtmlView.HtmlView Page: setting property 'SizeX' for element 'carLeft33'
      .setProperty("ImageUrl","./kinematicscarupanddown/car-2030056_960_720.png") // EJsS HtmlView.HtmlView Page: setting property 'ImageUrl' for element 'carLeft33'
      .setProperty("PixelSize",true) // EJsS HtmlView.HtmlView Page: setting property 'PixelSize' for element 'carLeft33'
      .setProperty("SizeY",20) // EJsS HtmlView.HtmlView Page: setting property 'SizeY' for element 'carLeft33'
      ;

  };

  return _view;
}


//--><!]]></script>
  </head>
  <body>
    <div role="button" id="_topFrame" style="text-align:center"></div>
  <div id="metadata" class="metadata">
    <br />
    <div id="title_author">
      <hr />
      <b>Title and author:</b>
      <p>
      Kinematics Car and Bus Y Direction Simulator<br />
     <img alt="Logo" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/02_newtonianmechanics_2kinematics/kinematicscarupanddown/Screen Shot 2018-04-13 at 2.57.14 PM (2).png" />
      </p>
      <p>
      <img alt="author image" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/02_newtonianmechanics_2kinematics/01authorlookang50x50.png" />
      <img alt="author image" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/02_newtonianmechanics_2kinematics/01authorPacoEsquembre2011.png" />
      <img alt="author image" src="file:///Users/lookang/Google Drive/PublicLawrence/workspace/source/EJSS/02_newtonianmechanics_2kinematics/01authorFelix_J_Garcia_Clemente.png" />
 weelookang@gmail.com; Francisco Esquembre; Félix J. García
      </p>
    </div>
    <hr />
    <p></p>
    <div id="copyright_message">
      <div class="cc_left"  style="float:left">&#169; 2018, creative common attribution.</div>
      <div class="cc_right" style="float:right">    Released under a <a rel="license" target="_blank" href="http://creativecommons.org/licenses/by-nc-sa/4.0/deed.en_US"> <img alt="Creative Commons Attribution-NonCommercial-ShareAlike" src="file:///Users/lookang/Google Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/images/cc_icon.png" /> </a> license.</div>
    </div>
  </div>
    <script type="text/javascript"><!--//--><![CDATA[//><!--
      var _model;
      var _scorm;
      window.addEventListener('load',
        function () { 
          _model =  new kinematics2car("_topFrame","file:/Users/lookang/Google%20Drive/PublicLawrence/EjsS_5.3.SG_180225/bin/javascript/lib/","file:/Users/lookang/Google%20Drive/PublicLawrence/workspace/source/EJSS/02_newtonianmechanics_2kinematics/");
          if (typeof _isApp !== "undefined" && _isApp) _model.setRunAlways(true);
          TextResizeDetector.TARGET_ELEMENT_ID = '_topFrame';
          TextResizeDetector.USER_INIT_FUNC = function () {
            var iBase = TextResizeDetector.addEventListener(function(e,args) {
              _model._fontResized(args[0].iBase,args[0].iSize,args[0].iDelta);
              },null);
            _model._fontResized(iBase);
          };
          _model.onload();
        }, false);
    //--><!]]></script>
  </body>
</html>
