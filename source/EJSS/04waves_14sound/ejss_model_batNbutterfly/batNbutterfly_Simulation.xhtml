<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title></title>
    <link rel="stylesheet"  type="text/css" href="_ejs_library/css/ejss.css" />
    <script src="_ejs_library/scripts/common_script.js"></script>
    <script src="_ejs_library/scripts/textresizedetector.js"></script>
    <script src="_ejs_library/ejsS.v1.min.js"></script>
<script type="text/javascript"><!--//--><![CDATA[//><!--
/* _inputParameters: an object with different values for the model parameters */
function batNbutterfly(_topFrame,_libraryPath,_codebasePath, _inputParameters) {
  var _model = EJSS_CORE.createAnimationLMS();
  var _view;
  var _isPlaying = false;
  var _isPaused = true;
  var _isMobile = (navigator===undefined) ? false : navigator.userAgent.match(/iPhone|iPad|iPod|Android|BlackBerry|Opera Mini|IEMobile/i);

var _stringProperties = {};
  var _tools = {
    showInputDialog : EJSS_INTERFACE.BoxPanel.showInputDialog,
    showOkDialog : EJSS_INTERFACE.BoxPanel.showOkDialog,
    showOkCancelDialog : EJSS_INTERFACE.BoxPanel.showOkCancelDialog,
    downloadText: EJSS_TOOLS.File.downloadText,
    uploadText: function(action) { EJSS_TOOLS.File.uploadText(_model,action); } 
  };

  function _play()  { _isPaused = false; _isPlaying = true;  _model.play();  }
  function _pause() { _isPaused = true;  _isPlaying = false; _model.pause(); }
  function _step()  { _pause();  _model.step(); }
  function _reset() { _model.reset();  _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); }
  _model._play  = _play;
  _model._pause = _pause;
  _model._step  = _step;
  _model._reset = _reset;
  function _update() { _model.update(); }
  function _initialize() { _model.initialize(); }
  function _setFPS(_fps) { _model.setFPS(_fps); }
  function _setDelay(_delay) { _model.setDelay(_delay); }
  function _setStepsPerDisplay(_spd) { _model.setStepsPerDisplay(_spd); }
  function _setUpdateView(_updateView) { _model.setUpdateView(_updateView); }
  function _setAutoplay(_auto) { _model.setAutoplay(_auto); }
  function _println(_message) { console.log(_message); }

  function _breakAfterThisPage() { _model.setShouldBreak(true); }

  function _resetSolvers() { if (_model.resetSolvers) _model.resetSolvers(); }

  function _saveText(name,type,content) { if (_model.saveText) _model.saveText(name,type,content); }

  function _saveState(name) { if (_model.saveState) _model.saveState(name); }

  function _saveImage(name,panelname) { if (_model.saveImage) _model.saveImage(name,panelname); }

  function _readState(url,type) { if (_model.readState) _model.readState(url,type); }

  function _readText(url,type,varname) { if (_model.readText) _model.readText(url,type,varname); }

  function _getStringProperty(propertyName) {
    var _value = _stringProperties[propertyName];
    if (_value===undefined) return propertyName;
    else return _value;
  }
  var __pagesEnabled = [];
  function _setPageEnabled(pageName,enabled) { __pagesEnabled[pageName] = enabled; }

  var t; // EjsS Model.Variables.Var Table.t
  var dt; // EjsS Model.Variables.Var Table.dt
  var range; // EjsS Model.Variables.Var Table.range
  var xmin; // EjsS Model.Variables.Var Table.xmin
  var xmax; // EjsS Model.Variables.Var Table.xmax
  var ymin; // EjsS Model.Variables.Var Table.ymin
  var ymax; // EjsS Model.Variables.Var Table.ymax
  var size; // EjsS Model.Variables.Var Table.size
  var pi; // EjsS Model.Variables.Var Table.pi
  var stroke; // EjsS Model.Variables.Var Table.stroke
  var npt; // EjsS Model.Variables.Var Table.npt

  var x1; // EjsS Model.Variables.object.x1
  var y1; // EjsS Model.Variables.object.y1
  var w1; // EjsS Model.Variables.object.w1
  var h1; // EjsS Model.Variables.object.h1
  var x2; // EjsS Model.Variables.object.x2
  var y2; // EjsS Model.Variables.object.y2
  var w2; // EjsS Model.Variables.object.w2
  var h2; // EjsS Model.Variables.object.h2

  var n; // EjsS Model.Variables.wave.n
  var r1; // EjsS Model.Variables.wave.r1
  var r2; // EjsS Model.Variables.wave.r2
  var r; // EjsS Model.Variables.wave.r
  var v; // EjsS Model.Variables.wave.v
  var v1; // EjsS Model.Variables.wave.v1
  var v2; // EjsS Model.Variables.wave.v2
  var id1; // EjsS Model.Variables.wave.id1
  var id2; // EjsS Model.Variables.wave.id2
  var d; // EjsS Model.Variables.wave.d

  var _privateOdesList;
  var _ODEi_evolution1;
  var userEvents1=[];

  _model.getOdes = function() { return [_ODEi_evolution1]; };

  _model.removeEvents = function(){
    userEvents1=[];
  };

  function _serialize() { return _model.serialize(); }

  _model._userSerialize = function() {
    return {
      t : t,
      dt : dt,
      range : range,
      xmin : xmin,
      xmax : xmax,
      ymin : ymin,
      ymax : ymax,
      size : size,
      pi : pi,
      stroke : stroke,
      npt : npt,
      x1 : x1,
      y1 : y1,
      w1 : w1,
      h1 : h1,
      x2 : x2,
      y2 : y2,
      w2 : w2,
      h2 : h2,
      n : n,
      r1 : r1,
      r2 : r2,
      r : r,
      v : v,
      v1 : v1,
      v2 : v2,
      id1 : id1,
      id2 : id2,
      d : d
    };
  };

  function _serializePublic() { return _model.serializePublic(); }

  _model._userSerializePublic = function() {
    return {
      t : t,
      dt : dt,
      range : range,
      xmin : xmin,
      xmax : xmax,
      ymin : ymin,
      ymax : ymax,
      size : size,
      pi : pi,
      stroke : stroke,
      npt : npt,
      x1 : x1,
      y1 : y1,
      w1 : w1,
      h1 : h1,
      x2 : x2,
      y2 : y2,
      w2 : w2,
      h2 : h2,
      n : n,
      r1 : r1,
      r2 : r2,
      r : r,
      v : v,
      v1 : v1,
      v2 : v2,
      id1 : id1,
      id2 : id2,
      d : d
    };
  };

  _model._readParameters = function(json) {
    if(typeof json.t != "undefined") t = json.t;
    if(typeof json.dt != "undefined") dt = json.dt;
    if(typeof json.range != "undefined") range = json.range;
    if(typeof json.xmin != "undefined") xmin = json.xmin;
    if(typeof json.xmax != "undefined") xmax = json.xmax;
    if(typeof json.ymin != "undefined") ymin = json.ymin;
    if(typeof json.ymax != "undefined") ymax = json.ymax;
    if(typeof json.size != "undefined") size = json.size;
    if(typeof json.pi != "undefined") pi = json.pi;
    if(typeof json.stroke != "undefined") stroke = json.stroke;
    if(typeof json.npt != "undefined") npt = json.npt;
    if(typeof json.x1 != "undefined") x1 = json.x1;
    if(typeof json.y1 != "undefined") y1 = json.y1;
    if(typeof json.w1 != "undefined") w1 = json.w1;
    if(typeof json.h1 != "undefined") h1 = json.h1;
    if(typeof json.x2 != "undefined") x2 = json.x2;
    if(typeof json.y2 != "undefined") y2 = json.y2;
    if(typeof json.w2 != "undefined") w2 = json.w2;
    if(typeof json.h2 != "undefined") h2 = json.h2;
    if(typeof json.n != "undefined") n = json.n;
    if(typeof json.r1 != "undefined") r1 = json.r1;
    if(typeof json.r2 != "undefined") r2 = json.r2;
    if(typeof json.r != "undefined") r = json.r;
    if(typeof json.v != "undefined") v = json.v;
    if(typeof json.v1 != "undefined") v1 = json.v1;
    if(typeof json.v2 != "undefined") v2 = json.v2;
    if(typeof json.id1 != "undefined") id1 = json.id1;
    if(typeof json.id2 != "undefined") id2 = json.id2;
    if(typeof json.d != "undefined") d = json.d;
  };

  _model._readParametersPublic = function(json) {
    if(typeof json.t != "undefined") t = json.t;
    if(typeof json.dt != "undefined") dt = json.dt;
    if(typeof json.range != "undefined") range = json.range;
    if(typeof json.xmin != "undefined") xmin = json.xmin;
    if(typeof json.xmax != "undefined") xmax = json.xmax;
    if(typeof json.ymin != "undefined") ymin = json.ymin;
    if(typeof json.ymax != "undefined") ymax = json.ymax;
    if(typeof json.size != "undefined") size = json.size;
    if(typeof json.pi != "undefined") pi = json.pi;
    if(typeof json.stroke != "undefined") stroke = json.stroke;
    if(typeof json.npt != "undefined") npt = json.npt;
    if(typeof json.x1 != "undefined") x1 = json.x1;
    if(typeof json.y1 != "undefined") y1 = json.y1;
    if(typeof json.w1 != "undefined") w1 = json.w1;
    if(typeof json.h1 != "undefined") h1 = json.h1;
    if(typeof json.x2 != "undefined") x2 = json.x2;
    if(typeof json.y2 != "undefined") y2 = json.y2;
    if(typeof json.w2 != "undefined") w2 = json.w2;
    if(typeof json.h2 != "undefined") h2 = json.h2;
    if(typeof json.n != "undefined") n = json.n;
    if(typeof json.r1 != "undefined") r1 = json.r1;
    if(typeof json.r2 != "undefined") r2 = json.r2;
    if(typeof json.r != "undefined") r = json.r;
    if(typeof json.v != "undefined") v = json.v;
    if(typeof json.v1 != "undefined") v1 = json.v1;
    if(typeof json.v2 != "undefined") v2 = json.v2;
    if(typeof json.id1 != "undefined") id1 = json.id1;
    if(typeof json.id2 != "undefined") id2 = json.id2;
    if(typeof json.d != "undefined") d = json.d;
  };

  function _unserializePublic(json) { return _model.unserializePublic(json); }

  _model._userUnserializePublic = function(json) {
    _model._readParametersPublic(json);
   _resetSolvers();
   _model.update();
  };

  function _unserialize(json) { return _model.unserialize(json); }

  _model._userUnserialize = function(json) {
    _model._readParameters(json);
   _resetSolvers();
   _model.update();
  };

  _model.addToReset(function() {
    __pagesEnabled["Init Page"] = true;
    __pagesEnabled["Evol Page"] = true;
    __pagesEnabled["Event"] = true;
    __pagesEnabled["Event 2"] = true;
    __pagesEnabled["FixRel Page"] = true;
  });

  _model.addToReset(function() {
    t = 0; // EjsS Model.Variables.Var Table.t
    dt = 0.05; // EjsS Model.Variables.Var Table.dt
    range = 200; // EjsS Model.Variables.Var Table.range
    xmin = -range/2; // EjsS Model.Variables.Var Table.xmin
    xmax = range/2; // EjsS Model.Variables.Var Table.xmax
    ymin = -range/2; // EjsS Model.Variables.Var Table.ymin
    ymax = range/2; // EjsS Model.Variables.Var Table.ymax
    size = range/50; // EjsS Model.Variables.Var Table.size
    pi = Math.PI; // EjsS Model.Variables.Var Table.pi
    stroke = 2; // EjsS Model.Variables.Var Table.stroke
    npt = 300; // EjsS Model.Variables.Var Table.npt
  });

  _model.addToReset(function() {
    x1 = xmin/2; // EjsS Model.Variables.object.x1
    y1 = ymin/2; // EjsS Model.Variables.object.y1
    w1 = size*7; // EjsS Model.Variables.object.w1
    h1 = w1*0.8; // EjsS Model.Variables.object.h1
    x2 = xmax/2; // EjsS Model.Variables.object.x2
    y2 = ymax/2; // EjsS Model.Variables.object.y2
    w2 = size*3; // EjsS Model.Variables.object.w2
    h2 = w2; // EjsS Model.Variables.object.h2
  });

  _model.addToReset(function() {
    n = 128; // EjsS Model.Variables.wave.n
    r1 = new Array(n*2); // EjsS Model.Variables.wave.r1
    (function () {
      var _i0;
      for (_i0=0; _i0<n*2; _i0+=1) {  // EjsS Model.Variables.wave.r1
        r1[_i0] = 0;  // EjsS Model.Variables.wave.r1
      }
    }());
    r2 = new Array(n); // EjsS Model.Variables.wave.r2
    (function () {
      var _i0;
      for (_i0=0; _i0<n; _i0+=1) {  // EjsS Model.Variables.wave.r2
        r2[_i0] = 0;  // EjsS Model.Variables.wave.r2
      }
    }());
    r = size*2; // EjsS Model.Variables.wave.r
    v = size*10; // EjsS Model.Variables.wave.v
    v1 = new Array(n*2); // EjsS Model.Variables.wave.v1
    (function () {
      var _i0;
      for (_i0=0; _i0<n*2; _i0+=1) {  // EjsS Model.Variables.wave.v1
        v1[_i0] = 0;  // EjsS Model.Variables.wave.v1
      }
    }());
    v2 = new Array(n); // EjsS Model.Variables.wave.v2
    (function () {
      var _i0;
      for (_i0=0; _i0<n; _i0+=1) {  // EjsS Model.Variables.wave.v2
        v2[_i0] = 0;  // EjsS Model.Variables.wave.v2
      }
    }());
    id1 = 0; // EjsS Model.Variables.wave.id1
    id2 = 0; // EjsS Model.Variables.wave.id2
    d = 0; // EjsS Model.Variables.wave.d
  });

  if (_inputParameters) {
    _inputParameters = _model.parseInputParameters(_inputParameters);
    if (_inputParameters) _model.addToReset(function() { _model._readParameters(_inputParameters); });
  }

  _model.addToReset(function() {
    _privateOdesList=[];
    _ODEi_evolution1 = _ODE_evolution1();
    _privateOdesList.push(_ODEi_evolution1);
  });

  _model.addToReset(function() {
    _model.setAutoplay(false);
    _model.setPauseOnPageExit(true);
    _model.setFPS(20);
    _model.setStepsPerDisplay(1);
  });

  var dv;  // > CustomCode.dvalue:1
  function dvalue (v) {  // > CustomCode.dvalue:2
    if(v>0)dv=0.5;  // > CustomCode.dvalue:3
    else if(v<0)dv=-0.5;  // > CustomCode.dvalue:4
    else dv=0;  // > CustomCode.dvalue:5
    return Math.round(v*100+dv)/100.;  // > CustomCode.dvalue:6
  }  // > CustomCode.dvalue:7

  function getV1 (r) {  // > CustomCode.getV1:1
      // > CustomCode.getV1:2
  }  // > CustomCode.getV1:3

  _model.addToInitialization(function() {
    if (!__pagesEnabled["Init Page"]) return;
    for(var i=0;i<n;i++){  // > Initialization.Init Page:1
     r1[i]=r2[i]=0.;  // > Initialization.Init Page:2
     v1[i]=v2[i]=0.;  // > Initialization.Init Page:3
    }  // > Initialization.Init Page:4
    v1[0]=v*2;  // > Initialization.Init Page:5
    id1=1;  // > Initialization.Init Page:6
    d=Math.sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));  // > Initialization.Init Page:7
    id2=0;  // > Initialization.Init Page:8
  });

  _model.addToInitialization(function() {
    _initializeSolvers();
  });

  _model.addToEvolution(function() {
    if (!__pagesEnabled["Evol Page"]) return;
    _ODEi_evolution1.step();
  });

  _model.addToFixedRelations(function() { _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); });

  _model.addToFixedRelations(function() {
    if (!__pagesEnabled["FixRel Page"]) return;
    if(id1>=n*2 || id2>=n)_pause();  // > FixedRelations.FixRel Page:1
  });

  _model.addToFixedRelations(function() { _isPaused = _model.isPaused(); _isPlaying = _model.isPlaying(); });

  function _initializeSolvers() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].initializeSolver();
  }

  function _automaticResetSolvers() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].automaticResetSolver();
  }

  _model.resetSolvers = function() {
    for (var i=0,n=_privateOdesList.length; i<n; i++) _privateOdesList[i].resetSolver();
  };

  _getODE = function (_odeName) {
    if (_odeName=="Evol Page") return _ODEi_evolution1;
    return null;
  }

  function _getEventSolver(_odeName) {
    var ode = _getODE(_odeName);
    if (ode===null) return null;
    return ode.getEventSolver();
  }

  function _setSolverClass(_odeName, _engine) {
    var ode = _getODE(_odeName);
    if (ode===null) return;
    if (!_engine.setODE) {
      var classname = _engine.toLowerCase();
      if      (classname.indexOf("boga")>=0)   _engine = EJSS_ODE_SOLVERS.bogackiShampine23;
      else if (classname.indexOf("cash")>=0)   _engine = EJSS_ODE_SOLVERS.cashKarp45;
      else if (classname.indexOf("dopri5")>=0) _engine = EJSS_ODE_SOLVERS.dopri5;
      else if (classname.indexOf("dopri8")>=0) _engine = EJSS_ODE_SOLVERS.dopri853;
      else if (classname.indexOf("richa")>=0)  _engine = EJSS_ODE_SOLVERS.eulerRichardson;
      else if (classname.indexOf("euler")>=0)  _engine = EJSS_ODE_SOLVERS.euler;
      else if (classname.indexOf("fehlberg87")>=0) _engine = EJSS_ODE_SOLVERS.fehlberg87;
      else if (classname.indexOf("fehlberg8")>=0)  _engine = EJSS_ODE_SOLVERS.fehlberg8;
      else if (classname.indexOf("radau")>=0)   _engine = EJSS_ODE_SOLVERS.radau5;
      else if (classname.indexOf("runge")>=0)  _engine = EJSS_ODE_SOLVERS.rungeKutta4;
      else if (classname.indexOf("rk4")>=0)    _engine = EJSS_ODE_SOLVERS.rungeKutta4;
      else if (classname.indexOf("verlet")>=0) _engine = EJSS_ODE_SOLVERS.velocityVerlet;
    }
    if (_engine) ode.setSolverClass(_engine);
  }

  function _ODE_evolution1() {
    var __odeSelf = {};
    var __eventSolver;
    var __solverClass = EJSS_ODE_SOLVERS.rungeKutta4;
    var __state=[];
    var _ODE_evolution1_Event1;
    var _ODE_evolution1_Event2;
    var __ignoreErrors=false;
    var __mustInitialize=true;
    var __isEnabled=true;
    var __mustUserReinitialize=false;
    var __mustReinitialize=true;

    var _r1Length;
    var _r2Length;

    __odeSelf._getOdeVars = function (){ return["r1","r2","t"]};

    __odeSelf.setSolverClass = function(__aSolverClass) {
      __solverClass = __aSolverClass;
      __instantiateSolver();
    };

    function __instantiateSolver() {
      __state=[];
      _r1Length = r1.length;
      _r2Length = r2.length;
      __pushState();
      __eventSolver = EJSS_ODE_SOLVERS.interpolatorEventSolver(__solverClass(),__odeSelf);
      __mustInitialize = true;
    }

    __odeSelf.setEnabled = function(_enabled) { __isEnabled = _enabled; };

    __odeSelf.getIndependentVariableValue = function() { return __eventSolver.getIndependentVariableValue(); };

    __odeSelf.getInternalStepSize = function() { return __eventSolver.getInternalStepSize(); };

    __odeSelf.isAccelerationIndependentOfVelocity = function() { return false; };

    __odeSelf.initializeSolver = function() {
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); return; }
      __pushState();
      __eventSolver.initialize(dt);
      __eventSolver.setBestInterpolation(false);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.removeAllEvents();
      if (__pagesEnabled["Event"]) __eventSolver.addEvent(_ODE_evolution1_Event1());
      if (__pagesEnabled["Event 2"]) __eventSolver.addEvent(_ODE_evolution1_Event2());
      for(k in userEvents1){__eventSolver.addEvent(userEvents1[k]);}
      __eventSolver.setEstimateFirstStep(false);
      __eventSolver.setEnableExceptions(false);
      __eventSolver.setTolerances(0.00001,0.00001);
      __mustReinitialize = true;
      __mustInitialize = false;
    };

    function __pushState() {
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
      if (!__mustReinitialize)
        for (__j=0,__n=__cIn; __j<_r1Length; __j++)
           if (__state[__n++]!=r1[__j]) { __mustReinitialize = true; break; }
        for (__j=0;__j<_r1Length; __j++) {
          __state[__cIn++] = r1[__j];
        }
      if (!__mustReinitialize)
        for (__j=0,__n=__cIn; __j<_r2Length; __j++)
           if (__state[__n++]!=r2[__j]) { __mustReinitialize = true; break; }
        for (__j=0;__j<_r2Length; __j++) {
          __state[__cIn++] = r2[__j];
        }
        if (__state[__cIn]!=t) __mustReinitialize = true;
        __state[__cIn++] = t;
    }

    function __arraysChanged () {
      if (_r1Length != r1.length) return true;
      if (_r2Length != r2.length) return true;
      return false;
    }

    __odeSelf.getEventSolver = function() {
      return __eventSolver;
    };

    __odeSelf.resetSolver = function() {
      __mustUserReinitialize = true;
    };

    __odeSelf.automaticResetSolver = function() {
      __mustReinitialize = true;
    };

    function __errorAction () {
      if (__ignoreErrors) return;
      console.log (__eventSolver.getErrorMessage());
      _pause();
      // Make sure the solver is reinitialized;
      __mustReinitialize = true;
    }

    __odeSelf.step = function() { return __privateStep(false); };

    __odeSelf.solverStep = function() { return __privateStep(true); };

    function __privateStep(__takeMaximumStep) {
      if (!__isEnabled) return 0;
      if (dt===0) return 0;
      if (__mustInitialize) __odeSelf.initializeSolver();
      if (__arraysChanged()) { __instantiateSolver(); __odeSelf.initializeSolver(); }
      __eventSolver.setStepSize(dt);
      __eventSolver.setInternalStepSize(dt);
      __eventSolver.setMaximumInternalSteps(10000);
      __eventSolver.setTolerances(0.00001,0.00001);
      __pushState();
      if (__mustUserReinitialize) { 
        __eventSolver.userReinitialize();
        __mustUserReinitialize = false;
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      else if (__mustReinitialize) { 
        __eventSolver.reinitialize();
        __mustReinitialize = false;
        if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      }
      var __stepTaken = __takeMaximumStep ? __eventSolver.maxStep() : __eventSolver.step();
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        for (__i=0;__i<_r1Length; __i++) {
          r1[__i] = __state[__cOut++];
        }
        for (__i=0;__i<_r2Length; __i++) {
          r2[__i] = __state[__cOut++];
        }
        t = __state[__cOut++];
      // Check for error
      if (__eventSolver.getErrorCode()!=EJSS_ODE_SOLVERS.ERROR.NO_ERROR) __errorAction();
      return __stepTaken;
    }

    __odeSelf.getState = function() { return __state; };

    __odeSelf.getRate = function(_aState,_aRate) {
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var r1 = [];
        for (__i=0;__i<_r1Length; __i++) {
          r1[__i] = _aState[__cOut++];
        }
        var r2 = [];
        for (__i=0;__i<_r2Length; __i++) {
          r2[__i] = _aState[__cOut++];
        }
        var t = _aState[__cOut++];
      // Compute the rate
        var __cRate=0;
        var i;
        for (i=0;i<_r1Length;i++) {
          _aRate[__cRate++] = Array.isArray(v1[i]) ? v1[i][i] : v1[i]; // Rate for ODE: Evol Page:r1
        }
        for (i=0;i<_r2Length;i++) {
          _aRate[__cRate++] = Array.isArray(v2[i]) ? v2[i][i] : v2[i]; // Rate for ODE: Evol Page:r2
        }
        _aRate[__cRate++] = 1; // independent variable
        return _aRate;
    }; //end of getRate

    __odeSelf._addEvent = function(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent){
    var User_Event = function (userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent) {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return eventType; };

      _eventSelf.getRootFindingMethod = function() { return eventMethod; };

      _eventSelf.getMaxIterations = function() { return maxIter; };

      _eventSelf.getTolerance = function() { return eventTolerance; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var r1 = [];
        for (__i=0;__i<_r1Length; __i++) {
          r1[__i] = _aState[__cOut++];
        }
        var r2 = [];
        for (__i=0;__i<_r2Length; __i++) {
          r2[__i] = _aState[__cOut++];
        }
        var t = _aState[__cOut++];
      return eval(userCondition);
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        for (__i=0;__i<_r1Length; __i++) {
          r1[__i] = __state[__cOut++];
        }
        for (__i=0;__i<_r2Length; __i++) {
          r2[__i] = __state[__cOut++];
        }
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        for (__j=0;__j<_r1Length; __j++) {
          __state[__cIn++] = r1[__j];
        }
        for (__j=0;__j<_r2Length; __j++) {
          __state[__cIn++] = r2[__j];
        }
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        if (undefined != functions) eval(functions.toString());
        eval(userAction);
        return endAtEvent;
      }

      return _eventSelf;
    }; // End of event

   userEvents1.push(User_Event(userCondition,userAction,eventType,eventMethod,maxIter,eventTolerance,endAtEvent));
   }

    _ODE_evolution1_Event1 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.STATE_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var r1 = [];
        for (__i=0;__i<_r1Length; __i++) {
          r1[__i] = _aState[__cOut++];
        }
        var r2 = [];
        for (__i=0;__i<_r2Length; __i++) {
          r2[__i] = _aState[__cOut++];
        }
        var t = _aState[__cOut++];
        if(id1>=n)return 1.0;  // > Event zero-condition for page Evol Page:1
        if(v*t>id1*r)return id1*r-v*t;  // > Event zero-condition for page Evol Page:2
        return 1.0;  // > Event zero-condition for page Evol Page:3
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        for (__i=0;__i<_r1Length; __i++) {
          r1[__i] = __state[__cOut++];
        }
        for (__i=0;__i<_r2Length; __i++) {
          r2[__i] = __state[__cOut++];
        }
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        for (__j=0;__j<_r1Length; __j++) {
          __state[__cIn++] = r1[__j];
        }
        for (__j=0;__j<_r2Length; __j++) {
          __state[__cIn++] = r2[__j];
        }
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        v1[id1]=v*2;  // > Event action for page Evol Page:1
        id1++;  // > Event action for page Evol Page:2
        return true;
      }

      return _eventSelf;
    }; // End of event

    _ODE_evolution1_Event2 = function() {
      var _eventSelf = {};

      _eventSelf.getTypeOfEvent = function() { return EJSS_ODE_SOLVERS.EVENT_TYPE.CROSSING_EVENT; };

      _eventSelf.getRootFindingMethod = function() { return EJSS_ODE_SOLVERS.EVENT_METHOD.BISECTION; };

      _eventSelf.getMaxIterations = function() { return 100; };

      _eventSelf.getTolerance = function() { return 1.0e-5; };

      _eventSelf.evaluate = function(_aState) { 
      // Extract our variables from _aState
        var __i=0;
        var __cOut=0;
        var r1 = [];
        for (__i=0;__i<_r1Length; __i++) {
          r1[__i] = _aState[__cOut++];
        }
        var r2 = [];
        for (__i=0;__i<_r2Length; __i++) {
          r2[__i] = _aState[__cOut++];
        }
        var t = _aState[__cOut++];
        if(id2>=n)return 1.0;  // > Event zero-condition for page Evol Page:1
        if(v*t>d+r*id2)return d+r*id2-v*t;  // > Event zero-condition for page Evol Page:2
        return 1.0;  // > Event zero-condition for page Evol Page:3
      };

      _eventSelf.action = function() { 
      // Extract our variables from __state
        var __i=0;
        var __cOut=0;
        for (__i=0;__i<_r1Length; __i++) {
          r1[__i] = __state[__cOut++];
        }
        for (__i=0;__i<_r2Length; __i++) {
          r2[__i] = __state[__cOut++];
        }
        t = __state[__cOut++];
        var _returnValue = __userDefinedAction();
      // Copy our variables to __state[] 
        var __j=0;
        var __n=0;
        var __cIn=0;
        for (__j=0;__j<_r1Length; __j++) {
          __state[__cIn++] = r1[__j];
        }
        for (__j=0;__j<_r2Length; __j++) {
          __state[__cIn++] = r2[__j];
        }
        __state[__cIn++] = t;
        return _returnValue;
      };

      function __userDefinedAction() {
        v2[id2]=v*2;  // > Event action for page Evol Page:1
        id2++;  // > Event action for page Evol Page:2
        return true;
      }

      return _eventSelf;
    }; // End of event

    __instantiateSolver();

    return __odeSelf;
  }

  function _historic_r1(__time) {
    var __beginIndex = 0;
    return _ODEi_evolution1.getEventSolver().getStateHistory().interpolate(__time,new Array(r1.length),__beginIndex,r1.ength);
  }

  function _historic_r2(__time) {
    var __beginIndex = 0 + r1.length;
    return _ODEi_evolution1.getEventSolver().getStateHistory().interpolate(__time,new Array(r2.length),__beginIndex,r2.ength);
  }

    _model._fontResized = function(iBase,iSize,iDelta) {
      _view._fontResized(iBase,iSize,iDelta);
  }; // end of _fontResized

  function _getViews() {
    var _viewsInfo = [];
    var _counter = 0;
    _viewsInfo[_counter++] = { name : "HtmlView Page", width : 800, height : 600 };
    return _viewsInfo;
  } // end of _getViews

  function _selectView(_viewNumber) {
    _view = null;
    _view = new batNbutterfly_View(_topFrame,_viewNumber,_libraryPath,_codebasePath);
    var _view_super_reset = _view._reset;
    _view._reset = function() {
      _view_super_reset();
      switch(_viewNumber) {
        case -10 : break; // make Lint happy
        default :
        case 0:
          _view.plottingPanel.linkProperty("MaximumY",  function() { return ymax; }, function(_v) { ymax = _v; } ); // HtmlView Page linking property 'MaximumY' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("MaximumX",  function() { return xmax; }, function(_v) { xmax = _v; } ); // HtmlView Page linking property 'MaximumX' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("TRMessage",  function() { return "t = "+t; } ); // HtmlView Page linking property 'TRMessage' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("MinimumX",  function() { return xmin; }, function(_v) { xmin = _v; } ); // HtmlView Page linking property 'MinimumX' for element 'plottingPanel'
          _view.plottingPanel.linkProperty("MinimumY",  function() { return ymin; }, function(_v) { ymin = _v; } ); // HtmlView Page linking property 'MinimumY' for element 'plottingPanel'
          _view.image.linkProperty("SizeX",  function() { return w1; }, function(_v) { w1 = _v; } ); // HtmlView Page linking property 'SizeX' for element 'image'
          _view.image.linkProperty("X",  function() { return x1; }, function(_v) { x1 = _v; } ); // HtmlView Page linking property 'X' for element 'image'
          _view.image.linkProperty("Y",  function() { return y1; }, function(_v) { y1 = _v; } ); // HtmlView Page linking property 'Y' for element 'image'
          _view.image.linkProperty("SizeY",  function() { return h1; }, function(_v) { h1 = _v; } ); // HtmlView Page linking property 'SizeY' for element 'image'
          _view.image2.linkProperty("SizeX",  function() { return w2; }, function(_v) { w2 = _v; } ); // HtmlView Page linking property 'SizeX' for element 'image2'
          _view.image2.linkProperty("X",  function() { return x2; }, function(_v) { x2 = _v; } ); // HtmlView Page linking property 'X' for element 'image2'
          _view.image2.linkProperty("Y",  function() { return y2; }, function(_v) { y2 = _v; } ); // HtmlView Page linking property 'Y' for element 'image2'
          _view.image2.linkProperty("SizeY",  function() { return h2; }, function(_v) { h2 = _v; } ); // HtmlView Page linking property 'SizeY' for element 'image2'
          _view.bat.linkProperty("X",  function() { return x1; }, function(_v) { x1 = _v; } ); // HtmlView Page linking property 'X' for element 'bat'
          _view.bat.linkProperty("Y",  function() { return y1; }, function(_v) { y1 = _v; } ); // HtmlView Page linking property 'Y' for element 'bat'
          _view.shapeSet.linkProperty("NumberOfElements",  function() { return id1; }, function(_v) { id1 = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'shapeSet'
          _view.shapeSet.linkProperty("SizeX",  function() { return r1; }, function(_v) { r1 = _v; } ); // HtmlView Page linking property 'SizeX' for element 'shapeSet'
          _view.shapeSet.linkProperty("X",  function() { return x1; }, function(_v) { x1 = _v; } ); // HtmlView Page linking property 'X' for element 'shapeSet'
          _view.shapeSet.linkProperty("Y",  function() { return y1; }, function(_v) { y1 = _v; } ); // HtmlView Page linking property 'Y' for element 'shapeSet'
          _view.shapeSet.linkProperty("SizeY",  function() { return r1; }, function(_v) { r1 = _v; } ); // HtmlView Page linking property 'SizeY' for element 'shapeSet'
          _view.shapeSet2.linkProperty("NumberOfElements",  function() { return id2; }, function(_v) { id2 = _v; } ); // HtmlView Page linking property 'NumberOfElements' for element 'shapeSet2'
          _view.shapeSet2.linkProperty("SizeX",  function() { return r2; }, function(_v) { r2 = _v; } ); // HtmlView Page linking property 'SizeX' for element 'shapeSet2'
          _view.shapeSet2.linkProperty("X",  function() { return x2; }, function(_v) { x2 = _v; } ); // HtmlView Page linking property 'X' for element 'shapeSet2'
          _view.shapeSet2.linkProperty("Y",  function() { return y2; }, function(_v) { y2 = _v; } ); // HtmlView Page linking property 'Y' for element 'shapeSet2'
          _view.shapeSet2.linkProperty("SizeY",  function() { return r2; }, function(_v) { r2 = _v; } ); // HtmlView Page linking property 'SizeY' for element 'shapeSet2'
          _view.steps.setAction("OnClick", _step); // HtmlView Page setting action 'OnClick' for element 'steps'
          _view.playpause.setAction("OffClick", _pause); // HtmlView Page setting action 'OffClick' for element 'playpause'
          _view.playpause.setAction("OnClick", _play); // HtmlView Page setting action 'OnClick' for element 'playpause'
          _view.reset.setAction("OnClick", _reset); // HtmlView Page setting action 'OnClick' for element 'reset'
          break;
      } // end of switch
    }; // end of new reset

    _model.setView(_view);
    _model.reset();
    _view._enableEPub();
  } // end of _selectView

  _model.setAutoplay(false);
  _model.setFPS(20);
  _model.setStepsPerDisplay(1);
  _selectView(_model._autoSelectView(_getViews())); // this includes _model.reset()
  return _model;
}

function batNbutterfly_View (_topFrame,_viewNumber,_libraryPath,_codebasePath) {
  var _view;
  switch(_viewNumber) {
    case -10 : break; // make Lint happy
    default :
    case 0: _view = batNbutterfly_View_0 (_topFrame); break;
  } // end of switch

  if (_codebasePath) _view._setResourcePath(_codebasePath);

  if (_libraryPath) _view._setLibraryPath(_libraryPath);


  return _view;
} // end of main function

function batNbutterfly_View_0 (_topFrame) {
  var _view = EJSS_CORE.createView(_topFrame);

  _view._reset = function() {
    _view._clearAll();
    _view._addElement(EJSS_INTERFACE.panel,"panel", _view._topFrame) // EJsS HtmlView.HtmlView Page: declaration of element 'panel'
      ;

    _view._addElement(EJSS_DRAWING2D.plottingPanel,"plottingPanel", _view.panel) // EJsS HtmlView.HtmlView Page: declaration of element 'plottingPanel'
      .setProperty("Height","95vh") // EJsS HtmlView.HtmlView Page: setting property 'Height' for element 'plottingPanel'
      .setProperty("Width","100%") // EJsS HtmlView.HtmlView Page: setting property 'Width' for element 'plottingPanel'
      .setProperty("Gutters",[0,0,0,0]) // EJsS HtmlView.HtmlView Page: setting property 'Gutters' for element 'plottingPanel'
      .setProperty("Background","rgba(64,149,220,1.0)") // EJsS HtmlView.HtmlView Page: setting property 'Background' for element 'plottingPanel'
      .setProperty("SquareAspect",true) // EJsS HtmlView.HtmlView Page: setting property 'SquareAspect' for element 'plottingPanel'
      .setProperty("AxisXShow",false) // EJsS HtmlView.HtmlView Page: setting property 'AxisXShow' for element 'plottingPanel'
      .setProperty("GridYShow",false) // EJsS HtmlView.HtmlView Page: setting property 'GridYShow' for element 'plottingPanel'
      .setProperty("AxisYShow",false) // EJsS HtmlView.HtmlView Page: setting property 'AxisYShow' for element 'plottingPanel'
      .setProperty("AutoScaleY",false) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleY' for element 'plottingPanel'
      .setProperty("AutoScaleX",false) // EJsS HtmlView.HtmlView Page: setting property 'AutoScaleX' for element 'plottingPanel'
      .setProperty("GridXShow",false) // EJsS HtmlView.HtmlView Page: setting property 'GridXShow' for element 'plottingPanel'
      ;

    _view._addElement(EJSS_DRAWING2D.image,"image", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'image'
      .setProperty("ImageUrl","./_data/bat.jpg") // EJsS HtmlView.HtmlView Page: setting property 'ImageUrl' for element 'image'
      .setProperty("EnabledPosition","_isPaused()") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element 'image'
      ;

    _view._addElement(EJSS_DRAWING2D.image,"image2", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'image2'
      .setProperty("ImageUrl","./_data/oie_transparent.png") // EJsS HtmlView.HtmlView Page: setting property 'ImageUrl' for element 'image2'
      .setProperty("EnabledPosition","_isPaused()") // EJsS HtmlView.HtmlView Page: setting property 'EnabledPosition' for element 'image2'
      ;

    _view._addElement(EJSS_DRAWING2D.text,"bat", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'bat'
      .setProperty("Text","🦇") // EJsS HtmlView.HtmlView Page: setting property 'Text' for element 'bat'
      .setProperty("Font","normal normal 2vw") // EJsS HtmlView.HtmlView Page: setting property 'Font' for element 'bat'
      ;

    _view._addElement(EJSS_DRAWING2D.shapeSet,"shapeSet", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'shapeSet'
      .setProperty("LineColor","Blue") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'shapeSet'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'shapeSet'
      .setProperty("DrawFill",false) // EJsS HtmlView.HtmlView Page: setting property 'DrawFill' for element 'shapeSet'
      ;

    _view._addElement(EJSS_DRAWING2D.shapeSet,"shapeSet2", _view.plottingPanel) // EJsS HtmlView.HtmlView Page: declaration of element 'shapeSet2'
      .setProperty("LineColor","Blue") // EJsS HtmlView.HtmlView Page: setting property 'LineColor' for element 'shapeSet2'
      .setProperty("LineWidth",2) // EJsS HtmlView.HtmlView Page: setting property 'LineWidth' for element 'shapeSet2'
      .setProperty("DrawFill",false) // EJsS HtmlView.HtmlView Page: setting property 'DrawFill' for element 'shapeSet2'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"panel2", _view.panel) // EJsS HtmlView.HtmlView Page: declaration of element 'panel2'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"buttons", _view.panel2) // EJsS HtmlView.HtmlView Page: declaration of element 'buttons'
      ;

    _view._addElement(EJSS_INTERFACE.button,"steps", _view.buttons) // EJsS HtmlView.HtmlView Page: declaration of element 'steps'
      .setProperty("ImageUrl","/org/opensourcephysics/resources/controls/images/stepforward.gif") // EJsS HtmlView.HtmlView Page: setting property 'ImageUrl' for element 'steps'
      ;

    _view._addElement(EJSS_INTERFACE.twoStateButton,"playpause", _view.buttons) // EJsS HtmlView.HtmlView Page: declaration of element 'playpause'
      .setProperty("ImageOnUrl","/org/opensourcephysics/resources/controls/images/play.gif") // EJsS HtmlView.HtmlView Page: setting property 'ImageOnUrl' for element 'playpause'
      .setProperty("ImageOffUrl","/org/opensourcephysics/resources/controls/images/pause.gif") // EJsS HtmlView.HtmlView Page: setting property 'ImageOffUrl' for element 'playpause'
      ;

    _view._addElement(EJSS_INTERFACE.button,"reset", _view.buttons) // EJsS HtmlView.HtmlView Page: declaration of element 'reset'
      .setProperty("ImageUrl","/org/opensourcephysics/resources/controls/images/reset.gif") // EJsS HtmlView.HtmlView Page: setting property 'ImageUrl' for element 'reset'
      ;

    _view._addElement(EJSS_INTERFACE.panel,"panel3", _view.panel2) // EJsS HtmlView.HtmlView Page: declaration of element 'panel3'
      ;

  };

  return _view;
}


//--><!]]></script>
  </head>
  <body>
    <div role="button" id="_topFrame" style="text-align:center"></div>
  <div id="metadata" class="metadata">
    <br />
    <div id="title_author">
      <hr />
      <b>Title and author:</b>
      <p>
      </p>
      <p>
 Wong Jing Wei; Fremont Teng; Fu-Kwun Hwang
      </p>
    </div>
    <hr />
    <p></p>
    <div id="copyright_message">
      <div class="cc_left"  style="float:left">&#169; 2018, Wong Jing Wei; Fremont Teng; Fu-Kwun Hwang.</div>
      <div class="cc_right" style="float:right">    Released under a <a rel="license" target="_blank" href="http://creativecommons.org/licenses/by-nc-sa/4.0/deed.en_US"> <img alt="Creative Commons Attribution-NonCommercial-ShareAlike" src="_ejs_library/images/cc_icon.png" /> </a> license.</div>
    </div>
  </div>
    <script type="text/javascript"><!--//--><![CDATA[//><!--
      var _model;
      var _scorm;
      window.addEventListener('load',
        function () { 
          _model =  new batNbutterfly("_topFrame","_ejs_library/",null);
          if (typeof _isApp !== "undefined" && _isApp) _model.setRunAlways(true);
          TextResizeDetector.TARGET_ELEMENT_ID = '_topFrame';
          TextResizeDetector.USER_INIT_FUNC = function () {
            var iBase = TextResizeDetector.addEventListener(function(e,args) {
              _model._fontResized(args[0].iBase,args[0].iSize,args[0].iDelta);
              },null);
            _model._fontResized(iBase);
          };
          _model.onload();
        }, false);
    //--><!]]></script>
  </body>
</html>
